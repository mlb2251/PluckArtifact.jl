{"task_dist":{"input_dist":"(fillrand 30)","input_type":"list","grammar":"PCFG:\n  ?lets -> (letII ?int (λk -> (map (λact -> ?int) (take ?int #2)))) [1.0]\n  ?int -> randnat [0.4] | #int [0.3-0.0] | 0 [0.008-0.04] | 1 [0.008-0.04] | 2 [0.008-0.04] | 3 [0.008-0.04] | 4 [0.008-0.04] | 5 [0.008-0.04] | 6 [0.008-0.04] | 7 [0.008-0.04] | 8 [0.008-0.04] | 9 [0.008-0.04] | (letII ?int (λx -> (inc ?int))) [0.01] | (letII ?int (λx -> (+ ?int ?int))) [0.01] | (letII ?int (λx -> (- ?int ?int))) [0.01] | (letII ?int (λx -> (case ?int of O => ?int | S => (λn -> ?int)))) [0.01] | (letII ?int (λx -> (case ?bool of True => ?int | False => ?int))) [0.01] | (inc ?int) [0.04] | (+ ?int ?int) [0.04] | (- ?int ?int) [0.04] | (case ?int of O => ?int | S => (λn -> ?int)) [0.04] | (case ?bool of True => ?int | False => ?int) [0.04]\n  ?bool -> #bool [0.08-0.0] | (flip 0.1) [0.08-0.09] | (flip 0.2) [0.08-0.09] | (flip 0.3) [0.08-0.09] | (flip 0.4) [0.08-0.09] | (flip 0.5) [0.08-0.09] | (flip 0.6) [0.08-0.09] | (flip 0.7) [0.08-0.09] | (flip 0.8) [0.08-0.09] | (flip 0.9) [0.08-0.09] | (iseven ?int) [0.07] | (== ?int ?int) [0.07] | (> ?int ?int) [0.07]\n","output_type":"list"},"tasks":[{"ios":[[["[4, 4, 9, 3, 7, 4, 8, 9, 6, 0, 3, 9, 6, 3, 1, 6, 0, 4, 6, 9, 8, 8, 2, 8, 4, 2, 3, 3, 3, 5]"],"[2, 12, 2, 2, 2, 12, 12, 12, 2, 2, 2, 2]"],[["[6, 5, 6, 8, 6, 2, 7, 5, 3, 1, 6, 4, 4, 8, 6, 8, 5, 6, 3, 6, 9, 6, 0, 7, 6, 5, 7, 4, 8, 6]"],"[2, 2, 2, 2, 12, 2, 2, 2, 2, 2, 12, 12]"],[["[2, 4, 4, 4, 1, 2, 6, 9, 1, 4, 4, 6, 0, 7, 0, 4, 7, 1, 7, 6, 4, 6, 3, 8, 4, 6, 5, 1, 2, 9]"],"[2, 2, 12, 2, 12, 2, 2, 12, 2, 2, 2, 2]"],[["[7, 7, 3, 6, 0, 8, 6, 4, 6, 7, 8, 6, 3, 0, 1, 6, 1, 9, 4, 7, 1, 9, 2, 0, 2, 8, 3, 6, 8, 7]"],"[2, 12, 2, 2, 2, 2, 2, 2, 2, 12, 12, 2]"],[["[4, 9, 8, 9, 2, 1, 1, 2, 8, 1, 9, 1, 6, 8, 0, 2, 1, 8, 7, 4, 2, 0, 5, 9, 7, 6, 0, 4, 2, 9]"],"[2, 2, 2, 2, 12, 12, 2, 2, 2, 2, 2, 12]"],[["[0, 4, 4, 8, 4, 5, 2, 6, 5, 4, 5, 1, 9, 9, 4, 4, 5, 6, 9, 5, 8, 8, 2, 8, 7, 4, 2, 4, 2, 0]"],"[2, 2, 2, 2, 2, 12, 2, 2, 2, 2, 2, 2]"],[["[9, 4, 5, 2, 5, 0, 7, 8, 6, 1, 7, 4, 7, 6, 4, 4, 6, 3, 4, 7, 2, 6, 2, 7, 0, 3, 2, 1, 1, 9]"],"[2, 2, 2, 2, 2, 2, 2, 12, 2, 2, 2, 2]"],[["[9, 5, 2, 3, 3, 3, 8, 6, 2, 3, 2, 0, 4, 4, 2, 9, 6, 0, 9, 2, 4, 4, 2, 0, 0, 7, 9, 0, 7, 6]"],"[2, 2, 2, 12, 2, 2, 12, 2, 2, 2, 2, 7]"]],"type":"(list -> list)","name":"000","solution":"(letII (+ 7 (letII 0 (λx -> (case randnat of O => x#1 | S => (λn -> 5))))) (λk -> (map (λact -> (case randnat of O => (- k#2 (case act#1 of O => randnat | S => (λn -> (- randnat k#3)))) | S => (λn -> 2))) (take k#1 #2))))","num_train":4},{"ios":[[["[9, 7, 4, 0, 3, 3, 9, 9, 7, 4, 3, 3, 6, 1, 4, 8, 2, 7, 5, 0, 4, 1, 9, 0, 9, 0, 6, 8, 0, 3]"],"[1, 11, 0, 9, 8, 8, 0, 0, 5, 0, 0, 3, 6, 7, 1, 1, 0, 1, 14, 14, 6, 2, 12, 4, 0, 3, 0, 0, 1]"],[["[4, 5, 4, 6, 8, 6, 9, 3, 9, 0, 8, 0, 2, 9, 9, 5, 1, 7, 4, 3, 5, 3, 0, 7, 7, 9, 7, 6, 4, 0]"],"[0, 3, 0, 2, 0, 0, 0, 0, 0, 4, 0, 2, 0, 0, 0, 0]"],[["[1, 8, 6, 1, 5, 0, 2, 6, 1, 5, 0, 6, 1, 1, 3, 7, 0, 1, 5, 9, 4, 3, 7, 6, 7, 5, 2, 6, 3, 9]"],"[11, 15, 0, 5, 2, 11, 13, 2, 1, 1, 2, 0, 1, 7, 10, 5, 2, 19, 5, 1, 4, 2, 0, 0, 1, 5, 5]"],[["[1, 9, 2, 8, 7, 9, 3, 9, 7, 6, 7, 3, 0, 0, 6, 9, 3, 6, 3, 1, 0, 5, 6, 0, 4, 2, 2, 2, 4, 0]"],"[4, 0, 3, 0, 1, 0, 2, 7, 0, 0, 1, 3, 0, 2, 14, 15, 5, 0, 6, 3, 5, 4, 0, 1, 0, 2, 6, 15, 1, 18]"],[["[4, 4, 2, 4, 4, 0, 8, 5, 6, 3, 0, 7, 9, 2, 6, 0, 5, 3, 7, 4, 5, 4, 1, 1, 4, 7, 9, 2, 2, 2]"],"[0, 3, 8, 0, 0, 8, 0, 0, 0, 0, 5, 0, 0, 0, 0, 6, 0, 3]"],[["[0, 7, 2, 0, 4, 5, 6, 8, 2, 4, 6, 3, 1, 5, 6, 0, 5, 8, 8, 5, 6, 4, 9, 4, 7, 6, 5, 4, 1, 7]"],"[2, 8, 10, 15, 6, 0, 0, 0, 17, 2, 10, 11, 1, 0, 5, 10, 0, 0, 0, 0]"],[["[2, 6, 8, 2, 4, 7, 5, 1, 7, 2, 5, 5, 3, 5, 3, 8, 5, 6, 0, 6, 6, 5, 2, 2, 4, 1, 8, 7, 3, 4]"],"[1, 4, 0, 5, 9]"],[["[6, 1, 7, 3, 3, 3, 2, 4, 7, 6, 2, 5, 9, 3, 6, 7, 4, 3, 3, 3, 7, 3, 2, 1, 3, 9, 6, 4, 4, 4]"],"[4, 17, 0, 2, 0, 0, 3, 0, 0, 0, 1, 1, 15, 0, 2, 0, 0, 0, 0, 7, 0, 0, 11, 2, 1, 0, 1, 2, 6, 0]"]],"type":"(list -> list)","name":"001","solution":"(letII (letII randnat (λx -> (+ (letII randnat (λx -> (case (flip 0.8) of True => randnat | False => x#1))) (case (flip 0.8) of True => 8 | False => x#1)))) (λk -> (map (λact -> (letII randnat (λx -> (- randnat (- act#2 x#1))))) (take (+ (- k#1 randnat) (letII k#1 (λx -> (+ (letII randnat (λx -> (case k#3 of O => randnat | S => (λn -> k#4)))) randnat)))) #2))))","num_train":4},{"ios":[[["[3, 3, 5, 1, 5, 4, 3, 5, 4, 6, 3, 1, 4, 9, 2, 1, 0, 3, 9, 2, 7, 3, 8, 7, 5, 3, 0, 1, 4, 8]"],"[3, 3, 5, 1]"],[["[5, 1, 1, 1, 4, 7, 2, 4, 1, 4, 5, 3, 1, 4, 0, 2, 3, 9, 1, 7, 6, 7, 2, 5, 7, 0, 9, 6, 8, 7]"],"[5, 1, 1, 1]"],[["[1, 5, 6, 0, 7, 3, 7, 1, 3, 2, 6, 6, 7, 4, 5, 0, 1, 6, 7, 5, 6, 4, 3, 7, 0, 9, 4, 1, 1, 6]"],"[1, 5, 6, 0]"],[["[4, 4, 0, 5, 5, 4, 9, 6, 8, 1, 5, 7, 5, 6, 6, 6, 3, 6, 0, 6, 2, 0, 4, 8, 2, 5, 0, 0, 1, 8]"],"[4, 4, 0, 5]"],[["[9, 5, 9, 8, 9, 8, 9, 8, 0, 7, 9, 1, 4, 0, 8, 1, 4, 7, 4, 1, 8, 2, 6, 4, 8, 2, 6, 4, 8, 7]"],"[9, 5, 9, 8]"],[["[6, 6, 0, 5, 6, 3, 7, 8, 3, 7, 2, 6, 7, 8, 1, 2, 1, 4, 9, 6, 8, 0, 0, 3, 9, 9, 1, 0, 5, 8]"],"[6, 6, 0, 5]"],[["[7, 4, 6, 4, 0, 3, 4, 7, 1, 2, 4, 8, 1, 1, 9, 5, 7, 1, 5, 0, 5, 2, 9, 9, 9, 0, 7, 7, 1, 2]"],"[7, 4, 6, 4]"],[["[8, 2, 0, 1, 2, 0, 0, 8, 4, 0, 6, 3, 3, 6, 8, 9, 7, 0, 7, 2, 3, 0, 9, 2, 0, 1, 8, 7, 0, 6]"],"[8, 2, 0, 1]"]],"type":"(list -> list)","name":"002","solution":"(letII 4 (λk -> (map (λact -> act#1) (take k#1 #2))))","num_train":4},{"ios":[[["[5, 8, 7, 4, 4, 6, 4, 4, 8, 7, 4, 1, 8, 6, 4, 9, 8, 1, 5, 6, 9, 3, 5, 1, 8, 5, 6, 1, 2, 9]"],"[3, 1]"],[["[8, 9, 8, 8, 7, 4, 9, 5, 6, 0, 3, 9, 9, 6, 4, 7, 7, 8, 5, 8, 0, 0, 6, 9, 5, 6, 6, 6, 3, 5]"],"[4, 1, 5, 0]"],[["[1, 0, 4, 1, 0, 5, 3, 7, 8, 2, 8, 0, 2, 2, 2, 5, 0, 3, 3, 2, 6, 3, 8, 5, 3, 2, 6, 6, 5, 8]"],"[20, 10, 8, 0, 1]"],[["[8, 9, 4, 4, 8, 0, 7, 6, 1, 9, 6, 1, 1, 4, 2, 5, 9, 3, 0, 8, 1, 7, 3, 3, 0, 5, 1, 3, 5, 0]"],"[4, 12, 0, 3, 7, 3, 3, 6, 7, 4, 3, 8, 2, 0, 14, 1, 32, 8]"],[["[2, 4, 7, 0, 0, 3, 1, 5, 9, 5, 9, 2, 4, 4, 1, 8, 7, 9, 9, 5, 7, 9, 5, 2, 0, 8, 8, 0, 3, 3]"],"[2, 2, 7, 5, 3, 12, 0, 3]"],[["[8, 0, 1, 2, 8, 4, 5, 9, 1, 9, 0, 2, 5, 2, 0, 9, 4, 2, 3, 9, 8, 4, 0, 1, 7, 6, 2, 6, 0, 1]"],"[1, 0]"],[["[7, 7, 3, 6, 0, 7, 3, 6, 4, 3, 9, 7, 0, 4, 8, 8, 9, 2, 4, 6, 1, 3, 0, 3, 8, 8, 0, 2, 4, 1]"],"[0, 9, 0, 4, 0, 0, 1, 1, 0, 9, 4]"],[["[9, 0, 2, 5, 0, 5, 9, 3, 8, 7, 6, 7, 7, 0, 2, 4, 0, 4, 8, 0, 6, 9, 8, 3, 4, 0, 7, 9, 3, 2]"],"[1, 1, 0, 2, 4, 8, 2, 0, 6, 3, 3, 1]"]],"type":"(list -> list)","name":"003","solution":"(letII (case 3 of O => randnat | S => (λn -> (- randnat n#1))) (λk -> (map (λact -> (case randnat of O => (letII act#1 (λx -> (case (flip 0.3) of True => randnat | False => randnat))) | S => (λn -> randnat))) (take (inc (+ (case k#1 of O => randnat | S => (λn -> n#1)) randnat)) #2))))","num_train":4},{"ios":[[["[0, 0, 2, 5, 1, 8, 8, 8, 1, 1, 8, 5, 7, 2, 8, 8, 7, 7, 0, 5, 5, 3, 2, 5, 2, 9, 9, 4, 7, 0]"],"[5, 3, 4, 3, 1]"],[["[5, 4, 4, 9, 9, 5, 4, 7, 9, 7, 2, 0, 1, 8, 4, 4, 0, 9, 7, 2, 1, 7, 0, 2, 3, 2, 6, 1, 1, 6]"],"[5, 4, 4, 5, 9, 5, 4]"],[["[2, 3, 3, 8, 4, 7, 8, 5, 4, 6, 7, 5, 3, 9, 1, 9, 7, 2, 3, 5, 2, 9, 1, 2, 9, 1, 3, 5, 9, 9]"],"[2, 3, 0, 8, 5]"],[["[4, 6, 3, 2, 1, 5, 8, 9, 1, 5, 9, 1, 4, 7, 3, 5, 9, 5, 2, 5, 9, 5, 2, 0, 8, 7, 3, 3, 3, 5]"],"[4, 6, 0, 2, 1, 5, 8]"],[["[8, 0, 5, 1, 8, 4, 4, 8, 2, 8, 0, 0, 3, 5, 4, 7, 9, 7, 8, 5, 2, 6, 8, 8, 9, 9, 8, 2, 4, 6]"],"[3, 0, 5, 1, 8, 4, 4, 5, 2, 2, 0]"],[["[4, 7, 7, 8, 3, 6, 0, 0, 7, 6, 3, 1, 7, 5, 3, 8, 1, 3, 6, 0, 7, 3, 4, 3, 6, 0, 9, 3, 3, 7]"],"[4, 7, 7, 8, 3, 5, 0]"],[["[7, 5, 0, 4, 8, 1, 7, 9, 3, 8, 0, 9, 2, 9, 5, 7, 5, 2, 5, 1, 8, 4, 3, 6, 9, 8, 0, 4, 7, 4]"],"[7, 5, 0, 4, 8, 2, 1]"],[["[3, 8, 5, 8, 7, 0, 9, 1, 7, 9, 4, 2, 6, 9, 6, 0, 0, 1, 0, 8, 4, 1, 7, 1, 0, 6, 3, 2, 9, 8]"],"[3, 21, 5, 8, 1, 0, 6]"]],"type":"(list -> list)","name":"004","solution":"(letII (letII (inc (letII 0 (λx -> (- randnat x#1)))) (λx -> (+ (case (flip 0.3) of True => randnat | False => randnat) randnat))) (λk -> (map (λact -> (letII randnat (λx -> (case (flip 0.2) of True => randnat | False => act#2)))) (take (case (case randnat of O => randnat | S => (λn -> 8)) of O => k#1 | S => (λn -> n#1)) #2))))","num_train":4},{"ios":[[["[9, 3, 5, 9, 3, 4, 0, 2, 5, 9, 5, 9, 3, 1, 2, 4, 7, 7, 3, 4, 4, 2, 9, 2, 0, 8, 6, 2, 4, 4]"],"[0, 0, 3, 4, 0, 0]"],[["[1, 1, 8, 0, 0, 6, 8, 0, 3, 2, 1, 0, 2, 9, 4, 1, 0, 8, 1, 8, 2, 4, 5, 0, 0, 7, 2, 0, 2, 3]"],"[4, 4, 2, 3, 0, 4]"],[["[4, 2, 6, 3, 5, 9, 5, 6, 7, 8, 0, 2, 2, 2, 5, 4, 6, 4, 8, 2, 1, 9, 1, 4, 0, 2, 2, 4, 0, 1]"],"[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 2, 2, 1, 2, 0, 2, 2, 2, 1]"],[["[4, 6, 8, 2, 3, 8, 2, 2, 9, 0, 6, 1, 4, 3, 1, 6, 8, 1, 6, 4, 5, 7, 5, 5, 6, 5, 5, 1, 9, 8]"],"[0, 0, 0, 0, 0, 0, 0, 0, 1]"],[["[0, 4, 0, 6, 8, 1, 2, 1, 2, 0, 4, 4, 9, 9, 4, 8, 0, 6, 5, 0, 3, 9, 7, 4, 4, 3, 8, 6, 3, 7]"],"[8, 8, 9, 0, 9, 9]"],[["[1, 7, 1, 8, 6, 0, 4, 4, 8, 5, 3, 1, 2, 5, 0, 7, 6, 1, 1, 5, 6, 6, 3, 7, 0, 4, 0, 1, 8, 9]"],"[1, 0, 0, 0, 0, 0, 2, 2]"],[["[6, 7, 0, 6, 1, 4, 7, 4, 7, 1, 0, 8, 1, 7, 6, 6, 5, 0, 9, 8, 5, 4, 7, 3, 4, 0, 7, 4, 8, 6]"],"[2, 0, 5, 3, 4, 0, 1]"],[["[1, 9, 5, 0, 6, 8, 8, 1, 2, 2, 5, 1, 9, 8, 0, 7, 8, 3, 1, 2, 8, 1, 9, 5, 1, 5, 5, 7, 2, 4]"],"[5, 4, 0, 0, 1, 0, 0, 0, 3, 2, 5, 4, 3, 2, 0]"]],"type":"(list -> list)","name":"005","solution":"(letII (letII 2 (λx -> (inc randnat))) (λk -> (map (λact -> (letII (case act#1 of O => randnat | S => (λn -> (+ randnat 4))) (λx -> (- k#3 (case x#1 of O => x#1 | S => (λn -> randnat)))))) (take (inc (letII randnat (λx -> (+ (+ randnat 5) (letII randnat (λx -> (- 0 3))))))) #2))))","num_train":4},{"ios":[[["[2, 0, 8, 0, 0, 0, 3, 7, 2, 4, 3, 1, 7, 0, 7, 2, 1, 0, 8, 2, 3, 6, 2, 7, 9, 9, 4, 1, 0, 7]"],"[4, 3, 3, 12, 8, 2, 2, 1, 3, 8, 3, 6, 7, 0, 7, 2, 2]"],[["[3, 7, 1, 3, 6, 8, 7, 9, 2, 0, 5, 0, 7, 7, 8, 4, 4, 0, 9, 7, 5, 8, 3, 0, 1, 0, 3, 6, 7, 8]"],"[9, 6, 6, 0, 8, 8, 0, 7, 0]"],[["[0, 7, 9, 2, 1, 8, 8, 8, 9, 3, 2, 3, 5, 4, 9, 3, 3, 7, 6, 5, 8, 3, 9, 3, 9, 8, 5, 7, 9, 0]"],"[2, 0, 9, 2, 1, 3]"],[["[8, 1, 8, 8, 4, 8, 6, 6, 2, 0, 2, 9, 0, 0, 6, 9, 4, 5, 3, 0, 1, 7, 7, 7, 4, 4, 5, 9, 1, 5]"],"[2, 0, 8, 8, 3]"],[["[2, 5, 9, 5, 7, 9, 2, 3, 3, 8, 8, 8, 3, 6, 0, 5, 5, 0, 9, 9, 2, 3, 3, 7, 2, 2, 7, 6, 2, 0]"],"[0, 5, 9, 0, 7, 0, 0, 5, 1, 8, 0]"],[["[5, 0, 1, 3, 8, 9, 3, 0, 3, 5, 4, 6, 8, 3, 2, 0, 6, 8, 1, 4, 9, 4, 6, 8, 6, 9, 5, 1, 4, 5]"],"[0, 0, 9, 1, 5, 2, 3, 0, 0]"],[["[9, 8, 0, 3, 3, 0, 0, 7, 7, 1, 0, 2, 5, 0, 3, 1, 1, 6, 5, 5, 1, 7, 7, 3, 2, 3, 8, 0, 7, 3]"],"[5, 0, 0, 12, 35]"],[["[6, 6, 5, 9, 3, 6, 2, 5, 5, 3, 5, 9, 4, 0, 2, 5, 8, 6, 2, 6, 1, 1, 1, 0, 3, 2, 4, 5, 3, 2]"],"[4, 6, 3, 9, 0]"]],"type":"(list -> list)","name":"006","solution":"(letII (case randnat of O => 0 | S => (λn -> randnat)) (λk -> (map (λact -> (case (flip 0.3) of True => (case (- randnat randnat) of O => act#1 | S => (λn -> n#1)) | False => randnat)) (take (letII (inc (inc randnat)) (λx -> (inc (inc (inc x#1))))) #2))))","num_train":4},{"ios":[[["[3, 5, 6, 3, 3, 2, 3, 8, 2, 1, 3, 7, 3, 8, 8, 1, 9, 0, 3, 5, 0, 6, 9, 7, 9, 0, 9, 1, 9, 7]"],"[3, 5]"],[["[1, 1, 9, 8, 7, 0, 1, 6, 7, 0, 0, 8, 6, 9, 4, 7, 0, 5, 5, 8, 7, 5, 5, 6, 4, 3, 0, 1, 0, 4]"],"[1, 1, 9, 8]"],[["[3, 4, 5, 9, 2, 8, 6, 3, 2, 4, 9, 8, 5, 7, 6, 5, 5, 4, 3, 1, 1, 3, 5, 2, 9, 1, 7, 1, 7, 0]"],"[3, 4, 5, 9, 2, 8, 6, 3]"],[["[3, 6, 1, 6, 3, 8, 4, 2, 0, 9, 9, 5, 5, 9, 7, 4, 4, 7, 8, 6, 1, 5, 9, 0, 4, 0, 6, 8, 0, 1]"],"[3, 6, 1, 6, 3, 8, 4, 2]"],[["[8, 2, 4, 2, 7, 5, 1, 5, 2, 3, 4, 8, 8, 0, 3, 0, 5, 2, 3, 2, 6, 5, 0, 8, 6, 3, 0, 8, 1, 1]"],"[8, 2, 4, 2, 7]"],[["[6, 5, 7, 9, 0, 0, 5, 6, 6, 8, 4, 5, 5, 2, 6, 9, 2, 9, 4, 7, 7, 0, 4, 4, 2, 5, 6, 2, 8, 1]"],"[6, 5, 7, 9, 0, 0, 5, 6]"],[["[6, 1, 8, 9, 9, 0, 9, 3, 6, 2, 3, 7, 8, 5, 3, 7, 1, 9, 7, 5, 0, 2, 9, 1, 7, 2, 2, 1, 3, 5]"],"[6, 1, 8, 9, 9, 0, 9, 3, 6, 2]"],[["[0, 2, 0, 0, 8, 3, 9, 5, 0, 1, 6, 9, 7, 6, 0, 3, 9, 2, 5, 0, 0, 2, 5, 8, 5, 5, 3, 8, 0, 1]"],"[0, 2, 0, 0, 8]"]],"type":"(list -> list)","name":"007","solution":"(letII (case 3 of O => randnat | S => (λn -> (inc randnat))) (λk -> (map (λact -> act#1) (take (inc k#1) #2))))","num_train":4},{"ios":[[["[9, 0, 5, 4, 2, 0, 7, 7, 5, 0, 0, 9, 1, 0, 6, 2, 1, 3, 3, 1, 4, 0, 2, 0, 1, 9, 1, 8, 5, 9]"],"[0, 2, 0, 0, 0, 3, 8, 0, 0, 1, 0, 13, 1, 20, 0, 4, 0, 0, 0]"],[["[3, 4, 4, 3, 0, 1, 7, 5, 2, 9, 6, 6, 5, 8, 8, 7, 4, 0, 1, 4, 7, 6, 2, 8, 2, 0, 0, 7, 8, 8]"],"[0, 0, 0, 16, 0, 7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0]"],[["[2, 8, 2, 4, 2, 4, 2, 6, 0, 3, 3, 8, 6, 8, 4, 7, 0, 1, 9, 0, 5, 4, 2, 3, 7, 4, 7, 0, 6, 3]"],"[1, 0, 4, 5, 0, 0, 0, 0, 1, 14, 0, 0]"],[["[0, 2, 3, 4, 5, 8, 8, 0, 6, 8, 7, 9, 1, 7, 3, 5, 0, 7, 5, 1, 4, 9, 1, 8, 2, 1, 4, 0, 3, 2]"],"[0, 19, 0, 1, 0, 0, 0, 6, 0, 5, 0, 0, 3, 0, 0, 11, 4, 0, 11, 0, 0, 0, 0, 0, 5, 1, 0, 0, 3, 7]"],[["[0, 2, 8, 5, 7, 4, 8, 6, 1, 2, 3, 7, 0, 6, 7, 0, 4, 4, 3, 2, 6, 0, 6, 2, 9, 8, 5, 5, 7, 3]"],"[0, 5, 3, 0, 0, 2]"],[["[9, 7, 5, 5, 4, 9, 7, 3, 0, 5, 6, 0, 8, 6, 2, 2, 6, 3, 1, 5, 0, 3, 5, 6, 4, 2, 4, 3, 0, 0]"],"[0, 2, 0, 0, 1, 0]"],[["[5, 0, 1, 0, 1, 0, 4, 1, 1, 6, 8, 6, 7, 5, 9, 2, 9, 3, 2, 7, 2, 9, 5, 6, 5, 5, 4, 9, 3, 9]"],"[0, 0, 0, 0, 3, 0, 0, 3, 1, 0, 0, 0, 7, 0]"],[["[9, 6, 9, 4, 5, 2, 9, 6, 5, 2, 5, 9, 2, 0, 6, 3, 5, 2, 0, 3, 7, 4, 1, 1, 8, 2, 9, 7, 3, 6]"],"[0, 0, 0, 2, 0, 1, 0, 0]"]],"type":"(list -> list)","name":"008","solution":"(letII (letII (inc randnat) (λx -> (+ x#1 randnat))) (λk -> (map (λact -> (- randnat act#1)) (take (+ (inc (letII randnat (λx -> (case (flip 0.7) of True => x#1 | False => randnat)))) (letII k#1 (λx -> (- x#1 randnat)))) #2))))","num_train":4},{"ios":[[["[4, 8, 2, 6, 0, 4, 8, 4, 1, 2, 4, 0, 3, 4, 4, 3, 2, 2, 3, 7, 6, 5, 1, 9, 6, 0, 3, 0, 2, 9]"],"[4, 8, 2, 6, 0]"],[["[2, 9, 4, 2, 5, 1, 0, 6, 6, 6, 1, 6, 8, 2, 6, 3, 1, 9, 0, 8, 7, 4, 1, 9, 1, 9, 1, 4, 6, 9]"],"[2, 9, 4, 2, 5]"],[["[9, 5, 6, 5, 2, 0, 1, 5, 7, 0, 3, 7, 1, 5, 5, 1, 5, 3, 8, 9, 5, 6, 0, 6, 2, 4, 4, 5, 6, 0]"],"[9, 5, 6, 5, 2]"],[["[2, 9, 2, 0, 3, 8, 2, 9, 5, 1, 4, 3, 5, 3, 0, 5, 6, 1, 1, 9, 9, 1, 0, 7, 5, 5, 7, 2, 7, 8]"],"[2, 9, 2, 0, 3]"],[["[0, 7, 2, 8, 5, 5, 3, 3, 2, 9, 8, 7, 0, 0, 0, 2, 8, 0, 1, 8, 7, 9, 4, 8, 3, 2, 4, 8, 0, 3]"],"[0, 7, 2, 8, 5]"],[["[0, 5, 4, 5, 6, 9, 5, 6, 9, 9, 0, 3, 9, 2, 0, 1, 2, 8, 5, 0, 5, 6, 3, 2, 9, 6, 4, 0, 4, 4]"],"[0, 5, 4, 5, 6]"],[["[4, 4, 4, 2, 5, 2, 1, 7, 9, 1, 5, 6, 0, 6, 7, 9, 6, 9, 5, 6, 2, 0, 7, 3, 0, 8, 6, 6, 9, 8]"],"[4, 4, 4, 2, 5]"],[["[1, 1, 8, 8, 9, 6, 0, 7, 5, 0, 9, 6, 3, 5, 8, 1, 7, 3, 2, 0, 4, 7, 0, 0, 9, 6, 8, 4, 6, 7]"],"[1, 1, 8, 8, 9]"]],"type":"(list -> list)","name":"009","solution":"(letII 5 (λk -> (map (λact -> act#1) (take k#1 #2))))","num_train":4},{"ios":[[["[9, 9, 9, 5, 9, 3, 5, 4, 2, 7, 5, 2, 6, 9, 8, 8, 4, 5, 6, 6, 9, 5, 8, 7, 3, 7, 2, 2, 2, 8]"],"[4, 3, 0]"],[["[4, 1, 7, 3, 6, 1, 2, 2, 9, 7, 8, 2, 4, 5, 8, 6, 4, 0, 3, 8, 1, 8, 4, 5, 3, 6, 5, 2, 3, 9]"],"[2, 0]"],[["[8, 0, 4, 1, 6, 5, 7, 7, 0, 5, 5, 4, 1, 5, 6, 1, 0, 1, 4, 5, 1, 1, 2, 9, 8, 3, 0, 1, 2, 1]"],"[6, 1, 0, 0, 0, 3, 0]"],[["[4, 7, 8, 8, 0, 5, 1, 1, 6, 1, 6, 2, 0, 5, 6, 8, 9, 2, 7, 8, 5, 7, 1, 0, 2, 3, 9, 1, 7, 2]"],"[0, 5, 6, 6, 4, 0]"],[["[7, 3, 6, 3, 0, 7, 8, 9, 1, 8, 4, 4, 7, 8, 2, 3, 3, 2, 6, 9, 8, 3, 5, 2, 1, 9, 5, 4, 9, 1]"],"[4, 0, 0, 2, 16, 6]"],[["[7, 5, 2, 2, 6, 7, 0, 6, 7, 5, 1, 7, 5, 7, 7, 5, 4, 8, 7, 1, 8, 7, 9, 6, 4, 1, 4, 9, 4, 8]"],"[6, 0, 2, 2, 3, 1]"],[["[5, 1, 4, 9, 6, 5, 5, 4, 3, 7, 5, 4, 4, 0, 3, 8, 6, 5, 7, 1, 2, 4, 2, 7, 3, 5, 8, 7, 9, 1]"],"[1, 0, 1, 0]"],[["[3, 5, 4, 5, 4, 9, 2, 0, 5, 8, 9, 5, 0, 7, 4, 0, 2, 1, 4, 9, 9, 7, 9, 1, 1, 5, 8, 1, 9, 2]"],"[0, 2, 0, 0, 2, 7, 1, 3, 0, 4, 0, 0, 11, 2, 1, 5]"]],"type":"(list -> list)","name":"010","solution":"(letII (inc (case (flip 0.9) of True => (letII 9 (λx -> (inc randnat))) | False => 4)) (λk -> (map (λact -> (+ (letII (letII k#2 (λx -> (case randnat of O => act#2 | S => (λn -> randnat)))) (λx -> (case act#2 of O => randnat | S => (λn -> (- n#1 x#2))))) (- (letII randnat (λx -> (- 6 act#2))) k#2))) (take randnat #2))))","num_train":4},{"ios":[[["[6, 9, 5, 3, 5, 4, 8, 6, 7, 8, 4, 5, 2, 0, 4, 3, 6, 8, 3, 3, 3, 1, 7, 5, 1, 5, 8, 5, 2, 9]"],"[9, 9, 5, 8, 5, 5, 8, 6, 8, 21, 15, 9, 2, 0, 4, 3, 6, 14, 6]"],[["[3, 0, 6, 2, 3, 5, 0, 5, 4, 6, 1, 8, 6, 0, 3, 5, 7, 6, 3, 3, 6, 6, 6, 4, 9, 6, 8, 6, 9, 7]"],"[7, 4, 6, 2, 4, 6, 0, 5]"],[["[1, 2, 2, 8, 9, 4, 0, 4, 1, 7, 4, 0, 7, 5, 8, 3, 1, 1, 6, 0, 8, 1, 0, 1, 5, 4, 3, 5, 1, 8]"],"[1, 2, 11, 8, 13, 4, 4, 9]"],[["[0, 6, 3, 3, 8, 7, 6, 1, 3, 5, 5, 5, 0, 1, 0, 4, 9, 1, 7, 0, 7, 6, 3, 6, 3, 4, 2, 0, 5, 0]"],"[7, 9]"],[["[1, 2, 6, 0, 1, 8, 0, 8, 2, 0, 4, 0, 5, 0, 0, 4, 7, 1, 4, 0, 8, 5, 9, 6, 5, 1, 8, 5, 5, 4]"],"[7, 9, 6, 0, 1, 9, 0, 8, 2]"],[["[3, 5, 8, 6, 4, 3, 9, 8, 9, 9, 0, 5, 2, 6, 4, 3, 1, 9, 4, 5, 2, 9, 0, 2, 5, 6, 5, 2, 4, 6]"],"[5, 5, 11, 15, 6, 5, 9, 8]"],[["[7, 3, 8, 2, 9, 4, 1, 6, 2, 2, 8, 7, 9, 7, 8, 4, 6, 0, 4, 4, 3, 3, 6, 2, 9, 8, 5, 4, 3, 4]"],"[16, 6, 12, 2, 9, 4, 1, 8, 7]"],[["[8, 1, 6, 8, 4, 0, 4, 0, 3, 5, 6, 3, 6, 9, 3, 9, 2, 1, 3, 1, 5, 0, 1, 1, 4, 0, 3, 3, 8, 5]"],"[8, 1, 6, 8, 4, 5, 13, 0, 6, 9, 7]"]],"type":"(list -> list)","name":"011","solution":"(letII (inc (case (letII 9 (λx -> (+ (inc x#1) x#1))) of O => (inc randnat) | S => (λn -> randnat))) (λk -> (map (λact -> (+ act#1 (- randnat randnat))) (take (+ randnat k#1) #2))))","num_train":4},{"ios":[[["[8, 1, 8, 0, 1, 7, 5, 9, 2, 6, 3, 5, 3, 3, 8, 4, 6, 1, 7, 5, 8, 8, 2, 1, 0, 7, 2, 3, 7, 1]"],"[3, 14, 5, 2, 7]"],[["[7, 3, 1, 9, 5, 5, 2, 7, 9, 1, 7, 0, 9, 4, 5, 9, 9, 5, 4, 8, 2, 3, 6, 7, 8, 3, 8, 4, 7, 9]"],"[2, 0, 11, 8, 3]"],[["[3, 3, 4, 1, 0, 8, 6, 5, 1, 4, 1, 8, 9, 6, 6, 5, 0, 1, 1, 2, 0, 5, 6, 8, 8, 4, 1, 3, 7, 5]"],"[1, 3, 2, 8, 3]"],[["[4, 7, 0, 9, 1, 0, 1, 1, 2, 8, 1, 6, 4, 0, 4, 5, 6, 1, 1, 6, 0, 4, 3, 9, 9, 8, 9, 1, 2, 0]"],"[1, 8, 4, 7, 1]"],[["[8, 7, 6, 0, 4, 4, 6, 0, 3, 7, 2, 9, 6, 3, 1, 6, 0, 8, 7, 2, 2, 3, 3, 4, 6, 0, 6, 6, 7, 5]"],"[2, 0, 0, 1, 0]"],[["[1, 9, 9, 7, 1, 1, 3, 1, 0, 2, 3, 9, 4, 4, 8, 5, 8, 9, 2, 5, 6, 8, 4, 2, 2, 4, 2, 5, 2, 1]"],"[2, 0, 5, 0, 3, 0]"],[["[9, 0, 0, 4, 3, 9, 1, 0, 6, 3, 2, 4, 4, 2, 2, 2, 0, 1, 2, 6, 9, 8, 5, 4, 0, 1, 7, 1, 9, 5]"],"[12, 1, 9, 0, 2, 2]"],[["[0, 6, 4, 5, 7, 9, 0, 4, 1, 6, 8, 3, 6, 5, 9, 4, 7, 4, 1, 1, 4, 7, 1, 9, 3, 8, 3, 8, 5, 1]"],"[2, 3, 5, 2, 12, 9]"]],"type":"(list -> list)","name":"012","solution":"(letII (letII randnat (λx -> (+ 2 (case x#1 of O => x#1 | S => (λn -> 1))))) (λk -> (map (λact -> (case (flip 0.4) of True => randnat | False => (case randnat of O => (letII act#1 (λx -> (case x#1 of O => randnat | S => (λn -> randnat)))) | S => (λn -> randnat)))) (take (case (letII randnat (λx -> (case (flip 0.9) of True => 9 | False => (letII randnat (λx -> (case (flip 0.8) of True => k#3 | False => randnat)))))) of O => k#1 | S => (λn -> (letII randnat (λx -> (- n#2 k#3))))) #2))))","num_train":4},{"ios":[[["[1, 9, 8, 4, 0, 9, 6, 0, 4, 9, 6, 6, 8, 1, 0, 6, 7, 5, 9, 5, 6, 9, 6, 9, 0, 9, 4, 4, 0, 1]"],"[1, 9, 8]"],[["[2, 4, 6, 3, 7, 5, 9, 4, 0, 9, 9, 7, 2, 4, 6, 2, 0, 2, 9, 8, 6, 6, 6, 5, 8, 0, 8, 2, 0, 6]"],"[2, 4, 6, 3, 7, 5, 9, 4, 13, 9, 9, 7, 2, 4, 6, 2, 0]"],[["[2, 0, 9, 3, 4, 5, 8, 7, 9, 7, 4, 4, 5, 3, 1, 3, 3, 0, 9, 5, 9, 5, 9, 4, 0, 7, 7, 3, 4, 2]"],"[2, 0, 9, 3, 4, 5, 8]"],[["[4, 3, 5, 3, 1, 9, 2, 8, 6, 9, 7, 8, 3, 2, 9, 9, 9, 8, 0, 2, 0, 7, 1, 5, 4, 3, 0, 8, 8, 0]"],"[4, 3]"],[["[7, 1, 7, 6, 0, 9, 9, 0, 1, 9, 9, 9, 4, 9, 9, 7, 8, 7, 7, 2, 2, 5, 9, 5, 8, 4, 3, 2, 3, 9]"],"[7, 1, 7, 6]"],[["[5, 5, 1, 7, 0, 3, 2, 0, 1, 1, 8, 1, 9, 9, 5, 9, 9, 6, 0, 3, 9, 4, 6, 7, 5, 1, 4, 5, 6, 4]"],"[5, 5, 1]"],[["[9, 4, 7, 0, 2, 0, 4, 0, 3, 5, 5, 2, 7, 6, 3, 2, 9, 5, 6, 6, 1, 8, 7, 9, 2, 2, 3, 0, 0, 2]"],"[9, 4]"],[["[3, 6, 5, 1, 0, 9, 0, 5, 2, 2, 6, 2, 1, 2, 4, 7, 3, 5, 3, 3, 7, 7, 8, 9, 8, 3, 9, 9, 4, 5]"],"[3, 6, 5, 1, 14, 9, 6, 5]"]],"type":"(list -> list)","name":"013","solution":"(letII (inc (+ (case 7 of O => 6 | S => (λn -> (letII randnat (λx -> (case 6 of O => n#2 | S => (λn -> randnat)))))) 5)) (λk -> (map (λact -> (case act#1 of O => randnat | S => (λn -> act#2))) (take (letII randnat (λx -> (inc randnat))) #2))))","num_train":4},{"ios":[[["[4, 3, 6, 5, 8, 9, 6, 3, 5, 8, 9, 2, 5, 2, 8, 0, 8, 3, 5, 4, 7, 1, 1, 2, 8, 2, 7, 8, 1, 2]"],"[4, 4, 3, 4, 5, 6, 3]"],[["[6, 6, 8, 6, 4, 1, 5, 1, 8, 6, 1, 3, 1, 1, 6, 7, 9, 6, 4, 3, 2, 7, 0, 8, 5, 6, 2, 8, 4, 9]"],"[4, 3, 5, 4, 1, 0, 2]"],[["[1, 7, 3, 9, 4, 2, 1, 1, 1, 2, 2, 8, 1, 7, 7, 5, 5, 2, 5, 1, 7, 7, 7, 9, 3, 5, 5, 0, 2, 1]"],"[0, 4, 0, 6, 1, 4, 0]"],[["[6, 7, 6, 1, 8, 2, 7, 0, 6, 9, 2, 2, 7, 9, 8, 1, 9, 3, 6, 5, 0, 4, 4, 7, 2, 5, 5, 0, 7, 0]"],"[4, 4, 4, 0, 5, 0, 4]"],[["[7, 8, 2, 1, 2, 5, 4, 5, 2, 2, 7, 6, 8, 5, 8, 2, 7, 1, 0, 3, 8, 0, 4, 3, 7, 9, 9, 3, 3, 9]"],"[4, 5, 4, 0, 0, 2, 1]"],[["[6, 7, 5, 7, 6, 8, 0, 5, 8, 6, 7, 0, 6, 4, 0, 9, 3, 5, 2, 7, 9, 6, 1, 0, 7, 6, 6, 3, 9, 9]"],"[4, 4, 2, 4, 3, 5, 0]"],[["[9, 8, 6, 3, 2, 5, 3, 7, 4, 8, 9, 4, 3, 8, 2, 8, 9, 8, 3, 6, 2, 6, 4, 9, 6, 0, 0, 9, 0, 1]"],"[6, 4, 3, 4, 4, 2, 0]"],[["[1, 6, 7, 5, 4, 3, 4, 3, 1, 9, 3, 6, 7, 6, 9, 3, 7, 8, 0, 5, 9, 8, 4, 8, 9, 0, 5, 2, 3, 8]"],"[0, 3, 4, 2, 4, 0, 1]"]],"type":"(list -> list)","name":"014","solution":"(letII 7 (λk -> (map (λact -> (- (case (flip 0.7) of True => act#1 | False => k#2) (letII randnat (λx -> (- (inc 9) k#3))))) (take (case k#1 of O => randnat | S => (λn -> k#2)) #2))))","num_train":4},{"ios":[[["[4, 4, 2, 2, 8, 6, 2, 4, 5, 9, 1, 9, 1, 0, 0, 9, 0, 8, 6, 2, 5, 4, 8, 8, 8, 1, 3, 6, 3, 6]"],"[11, 7, 3]"],[["[5, 9, 0, 6, 7, 5, 5, 7, 9, 7, 8, 1, 5, 5, 9, 4, 8, 2, 7, 1, 1, 7, 3, 2, 8, 0, 4, 2, 9, 2]"],"[10, 6, 3, 11, 11, 3]"],[["[8, 6, 3, 6, 6, 4, 4, 0, 6, 8, 6, 3, 4, 6, 8, 5, 2, 7, 1, 2, 4, 5, 3, 8, 2, 1, 2, 5, 2, 8]"],"[6, 4, 5, 5, 11, 17, 9, 4, 6, 8]"],[["[7, 5, 9, 5, 0, 7, 8, 7, 5, 6, 9, 7, 2, 1, 2, 4, 7, 3, 2, 3, 1, 7, 3, 9, 7, 7, 0, 5, 3, 2]"],"[12, 16, 12, 5, 5]"],[["[0, 1, 1, 2, 7, 4, 6, 7, 8, 3, 5, 2, 8, 6, 3, 1, 1, 9, 0, 8, 8, 3, 8, 7, 4, 0, 6, 5, 2, 5]"],"[5, 23, 9, 13, 12]"],[["[8, 2, 9, 9, 0, 3, 6, 2, 2, 3, 0, 2, 6, 3, 7, 3, 8, 2, 8, 8, 7, 6, 0, 1, 6, 6, 9, 0, 5, 6]"],"[12, 6, 21, 11, 13, 4, 14, 12, 18, 5]"],[["[3, 6, 5, 8, 6, 2, 2, 0, 4, 8, 1, 6, 2, 1, 0, 5, 2, 0, 3, 9, 1, 0, 4, 9, 8, 0, 1, 7, 2, 2]"],"[4, 25, 5, 11, 9, 2, 7, 0, 3, 8]"],[["[4, 8, 2, 2, 4, 2, 4, 3, 3, 2, 7, 9, 4, 8, 9, 5, 0, 8, 6, 3, 1, 5, 5, 0, 1, 9, 3, 3, 8, 4]"],"[9, 0, 7, 0, 10, 13, 23, 15, 8, 5, 3, 9]"]],"type":"(list -> list)","name":"015","solution":"(letII (case (== 0 5) of True => 0 | False => 2) (λk -> (map (λact -> (+ (case (- k#2 randnat) of O => act#1 | S => (λn -> randnat)) (case (flip 0.2) of True => randnat | False => randnat))) (take (letII randnat (λx -> (+ (case randnat of O => randnat | S => (λn -> (inc randnat))) k#2))) #2))))","num_train":4},{"ios":[[["[5, 5, 7, 1, 4, 8, 2, 2, 1, 5, 3, 5, 8, 7, 7, 0, 1, 4, 4, 3, 3, 9, 7, 4, 7, 0, 7, 4, 6, 9]"],"[5, 5, 7, 1, 4, 8, 2, 2, 1, 5, 3, 5]"],[["[2, 8, 0, 5, 6, 0, 9, 6, 1, 7, 5, 8, 6, 2, 8, 5, 9, 1, 9, 2, 0, 7, 0, 0, 8, 7, 3, 0, 1, 7]"],"[2, 8, 0, 5, 6, 0, 9, 6, 1, 7, 5, 8, 6]"],[["[0, 2, 6, 7, 7, 1, 7, 7, 4, 5, 3, 8, 6, 8, 8, 9, 1, 2, 6, 4, 3, 3, 0, 6, 5, 3, 3, 8, 7, 0]"],"[0, 2, 6, 7, 7, 1, 7, 7, 4, 5, 3, 8, 6]"],[["[3, 1, 6, 1, 9, 9, 8, 8, 3, 2, 2, 5, 8, 7, 2, 0, 3, 8, 8, 4, 9, 0, 8, 6, 2, 6, 4, 7, 1, 3]"],"[3, 1, 6, 1, 9, 9, 8, 8, 3, 2, 2, 5, 8, 7, 2]"],[["[7, 6, 6, 9, 8, 6, 4, 4, 3, 2, 9, 5, 0, 6, 4, 5, 0, 6, 0, 1, 8, 3, 3, 4, 1, 6, 4, 3, 6, 6]"],"[7, 6, 6, 9, 8, 6, 4, 4, 3, 2, 9, 5, 0]"],[["[0, 3, 2, 7, 3, 9, 2, 9, 1, 4, 8, 2, 6, 4, 1, 2, 6, 0, 1, 3, 1, 5, 4, 3, 3, 3, 9, 3, 7, 7]"],"[0, 3, 2, 7, 3, 9, 2, 9, 1, 4, 8, 2, 6, 4, 1]"],[["[4, 3, 9, 2, 6, 1, 0, 4, 4, 9, 3, 3, 8, 4, 2, 8, 8, 9, 3, 8, 0, 0, 5, 8, 9, 5, 4, 3, 9, 3]"],"[4, 3, 9, 2, 6, 1, 0, 4, 4, 9, 3, 3, 8]"],[["[9, 4, 5, 6, 1, 3, 3, 7, 5, 0, 6, 3, 1, 7, 2, 7, 6, 9, 7, 6, 9, 3, 4, 7, 7, 6, 5, 6, 2, 8]"],"[9, 4, 5, 6, 1, 3, 3, 7, 5, 0, 6]"]],"type":"(list -> list)","name":"016","solution":"(letII randnat (λk -> (map (λact -> act#1) (take (+ (case k#1 of O => randnat | S => (λn -> 8)) k#1) #2))))","num_train":4},{"ios":[[["[5, 5, 8, 6, 6, 7, 5, 3, 9, 3, 4, 3, 4, 7, 3, 0, 2, 4, 5, 9, 7, 8, 6, 8, 5, 1, 4, 3, 8, 7]"],"[12, 5, 11, 7, 6, 9, 19, 13, 9, 5, 6, 18, 11]"],[["[0, 1, 4, 2, 1, 2, 9, 7, 9, 2, 1, 2, 1, 6, 2, 3, 1, 0, 2, 0, 8, 7, 9, 9, 2, 9, 2, 9, 3, 1]"],"[2, 15, 4, 2, 1, 4, 11]"],[["[9, 2, 1, 2, 2, 1, 7, 8, 6, 5, 6, 9, 1, 0, 5, 5, 0, 3, 5, 1, 9, 6, 3, 7, 6, 9, 2, 8, 4, 0]"],"[14, 4, 5, 5, 12, 12]"],[["[2, 0, 4, 3, 3, 0, 4, 3, 5, 3, 0, 1, 8, 3, 3, 3, 6, 0, 1, 6, 0, 1, 2, 0, 8, 9, 7, 5, 4, 3]"],"[4, 4, 5, 6, 5, 1, 4, 7, 10]"],[["[6, 2, 5, 6, 6, 3, 2, 3, 4, 3, 9, 6, 1, 4, 0, 3, 4, 7, 6, 0, 9, 8, 6, 2, 5, 2, 9, 2, 0, 3]"],"[7, 4, 11, 6, 8, 4, 12, 5, 13, 3, 9]"],[["[3, 4, 1, 8, 0, 5, 6, 9, 6, 8, 5, 5, 8, 7, 8, 9, 0, 6, 0, 7, 2, 8, 9, 2, 2, 3, 1, 9, 6, 7]"],"[5, 6, 4, 15, 1, 9, 17]"],[["[7, 4, 0, 9, 3, 9, 5, 8, 7, 1, 9, 6, 0, 6, 4, 3, 8, 0, 2, 7, 2, 8, 6, 3, 9, 9, 5, 2, 8, 8]"],"[10, 4, 1, 22, 3, 11, 13]"],[["[7, 0, 9, 3, 7, 8, 1, 0, 6, 5, 1, 4, 5, 5, 4, 9, 0, 5, 6, 6, 9, 6, 2, 7, 2, 8, 7, 2, 9, 2]"],"[8, 14, 19, 4, 10, 9, 1]"]],"type":"(list -> list)","name":"017","solution":"(letII (- (case randnat of O => 7 | S => (λn -> randnat)) randnat) (λk -> (map (λact -> (letII act#1 (λx -> (+ randnat x#1)))) (take (letII k#1 (λx -> (case (letII randnat (λx -> (case (flip 0.7) of True => x#2 | False => (- randnat 8)))) of O => randnat | S => (λn -> (letII x#2 (λx -> (case (flip 0.1) of True => randnat | False => 7))))))) #2))))","num_train":4},{"ios":[[["[3, 8, 2, 2, 3, 8, 1, 6, 6, 3, 0, 0, 9, 6, 7, 1, 2, 4, 1, 1, 3, 9, 1, 9, 7, 3, 4, 0, 1, 2]"],"[17, 12, 11, 3, 16, 10, 10]"],[["[0, 2, 1, 8, 1, 3, 6, 6, 8, 7, 8, 4, 0, 9, 3, 0, 1, 8, 1, 3, 0, 1, 6, 0, 9, 3, 2, 4, 1, 1]"],"[6, 18, 8, 14, 6, 4, 6]"],[["[8, 9, 8, 7, 6, 9, 0, 4, 1, 9, 1, 7, 7, 6, 2, 9, 8, 8, 4, 5, 6, 8, 9, 8, 3, 5, 0, 9, 1, 1]"],"[11, 23, 8, 7, 7, 11, 8]"],[["[1, 9, 8, 6, 3, 4, 9, 3, 3, 7, 3, 6, 2, 3, 6, 1, 4, 8, 7, 9, 6, 2, 7, 2, 8, 3, 6, 7, 2, 7]"],"[8, 23, 10, 17, 3, 4, 11]"],[["[2, 5, 3, 1, 5, 4, 6, 9, 3, 0, 3, 6, 1, 0, 3, 5, 9, 9, 7, 7, 1, 8, 1, 2, 2, 5, 8, 1, 7, 0]"],"[5, 5, 6, 6, 7, 6, 6]"],[["[5, 4, 1, 6, 7, 8, 6, 0, 2, 4, 0, 2, 0, 6, 1, 4, 6, 2, 2, 2, 3, 1, 1, 6, 2, 0, 4, 3, 3, 6]"],"[6, 4, 2, 7, 9, 11, 9]"],[["[8, 3, 4, 1, 7, 0, 9, 1, 9, 0, 9, 1, 9, 6, 3, 5, 9, 5, 9, 7, 4, 5, 9, 8, 9, 9, 7, 4, 3, 1]"],"[9, 4, 16, 2, 8, 2, 9]"],[["[9, 5, 4, 7, 2, 9, 5, 3, 9, 0, 1, 5, 2, 7, 5, 6, 6, 7, 4, 0, 4, 4, 1, 9, 6, 1, 2, 5, 3, 3]"],"[10, 10, 15, 9, 3, 13, 13]"]],"type":"(list -> list)","name":"018","solution":"(letII 7 (λk -> (map (λact -> (letII 6 (λx -> (+ randnat act#2)))) (take k#1 #2))))","num_train":4},{"ios":[[["[6, 4, 4, 8, 6, 3, 5, 9, 6, 3, 9, 6, 1, 7, 2, 5, 4, 6, 2, 4, 7, 9, 3, 7, 4, 5, 1, 1, 0, 8]"],"[6, 4, 4, 8, 6, 3, 5, 9, 6]"],[["[4, 2, 0, 4, 4, 0, 7, 0, 0, 4, 8, 8, 2, 7, 3, 2, 0, 4, 4, 4, 3, 2, 5, 7, 0, 6, 6, 2, 8, 9]"],"[4, 2, 0, 4, 4, 0, 7, 0, 0]"],[["[4, 6, 4, 4, 1, 0, 9, 4, 5, 9, 9, 4, 7, 9, 2, 6, 9, 1, 5, 4, 2, 1, 5, 5, 9, 3, 7, 6, 8, 1]"],"[4, 6, 4, 4, 1, 0, 9, 4, 5]"],[["[2, 4, 7, 6, 6, 8, 9, 8, 9, 5, 3, 2, 2, 1, 9, 8, 0, 5, 9, 9, 4, 1, 9, 2, 2, 3, 4, 6, 3, 9]"],"[2, 4, 7, 6, 6, 8, 9, 8, 9]"],[["[4, 9, 5, 5, 8, 9, 7, 9, 0, 2, 1, 2, 3, 6, 3, 7, 6, 3, 4, 6, 0, 0, 5, 6, 9, 3, 9, 8, 4, 1]"],"[4, 9, 5, 5, 8, 9, 7, 9, 0]"],[["[7, 4, 6, 8, 6, 7, 3, 6, 4, 2, 7, 7, 5, 9, 7, 3, 7, 5, 5, 4, 4, 0, 8, 8, 4, 8, 8, 8, 3, 6]"],"[7, 4, 6, 8, 6, 7, 3, 6, 4]"],[["[7, 7, 4, 0, 0, 0, 4, 7, 5, 4, 4, 2, 7, 7, 6, 3, 7, 6, 4, 0, 1, 5, 7, 6, 5, 7, 9, 9, 6, 2]"],"[7, 7, 4, 0, 0, 0, 4, 7, 5]"],[["[5, 1, 5, 1, 4, 9, 0, 5, 1, 6, 0, 5, 4, 5, 7, 3, 9, 8, 4, 0, 7, 1, 3, 4, 3, 6, 2, 2, 2, 5]"],"[5, 1, 5, 1, 4, 9, 0, 5, 1]"]],"type":"(list -> list)","name":"019","solution":"(letII 9 (λk -> (map (λact -> act#1) (take k#1 #2))))","num_train":4},{"ios":[[["[8, 5, 1, 5, 7, 3, 0, 2, 2, 6, 8, 6, 8, 7, 7, 8, 0, 3, 1, 4, 0, 7, 7, 2, 7, 2, 2, 1, 1, 9]"],"[10, 7, 3, 7, 9, 5]"],[["[0, 0, 0, 2, 4, 1, 7, 8, 6, 0, 2, 0, 1, 1, 0, 1, 6, 0, 7, 0, 3, 0, 2, 3, 9, 1, 4, 2, 0, 6]"],"[2, 2, 2, 4, 6, 3]"],[["[9, 7, 3, 3, 6, 1, 6, 7, 6, 0, 9, 2, 9, 7, 2, 7, 8, 1, 5, 3, 3, 8, 0, 0, 3, 4, 0, 9, 4, 2]"],"[11, 9, 5, 5, 8, 3]"],[["[2, 7, 0, 0, 1, 8, 4, 1, 1, 1, 3, 4, 9, 3, 3, 7, 2, 5, 0, 7, 0, 1, 5, 0, 1, 3, 9, 2, 5, 7]"],"[4, 9, 2, 2, 3, 10]"],[["[2, 0, 4, 8, 2, 6, 0, 7, 7, 9, 7, 5, 9, 8, 8, 2, 8, 9, 4, 4, 4, 6, 5, 2, 4, 0, 9, 1, 1, 2]"],"[4, 2, 6, 10, 4, 8]"],[["[9, 5, 6, 9, 9, 4, 2, 7, 4, 2, 5, 0, 0, 7, 9, 2, 5, 9, 9, 2, 8, 4, 8, 1, 1, 5, 5, 4, 9, 7]"],"[11, 7, 8, 11, 11, 6]"],[["[7, 0, 6, 5, 9, 9, 6, 1, 1, 6, 1, 5, 8, 9, 5, 6, 0, 0, 6, 5, 3, 3, 4, 5, 1, 1, 1, 5, 9, 6]"],"[9, 2, 8, 7, 11, 11]"],[["[4, 1, 0, 4, 1, 3, 9, 5, 3, 1, 0, 6, 3, 1, 8, 4, 9, 2, 0, 0, 2, 7, 0, 6, 3, 3, 9, 4, 8, 2]"],"[6, 3, 2, 6, 3, 5]"]],"type":"(list -> list)","name":"020","solution":"(letII 5 (λk -> (map (λact -> (inc (inc act#1))) (take (inc k#1) #2))))","num_train":4},{"ios":[[["[5, 8, 2, 0, 4, 5, 6, 1, 4, 8, 8, 8, 7, 5, 6, 2, 2, 5, 9, 7, 7, 2, 3, 8, 7, 9, 6, 7, 1, 5]"],"[6, 8, 2]"],[["[4, 8, 5, 4, 2, 4, 0, 1, 2, 1, 3, 8, 0, 0, 6, 5, 3, 9, 4, 4, 8, 1, 1, 3, 9, 0, 7, 3, 5, 4]"],"[8, 8, 0, 4, 2, 4, 3, 1, 7, 2, 3, 8, 24]"],[["[5, 9, 5, 5, 6, 2, 3, 6, 4, 8, 9, 9, 6, 3, 7, 6, 2, 3, 6, 3, 7, 7, 6, 2, 5, 8, 2, 8, 4, 0]"],"[0, 9, 8, 5, 3, 5, 3]"],[["[8, 9, 3, 2, 1, 1, 2, 6, 7, 1, 7, 0, 9, 2, 3, 5, 7, 9, 7, 0, 7, 8, 7, 6, 5, 9, 3, 7, 4, 9]"],"[8, 9, 3, 4, 0, 1, 2, 6]"],[["[9, 1, 6, 2, 4, 1, 2, 3, 6, 4, 8, 7, 8, 9, 8, 9, 4, 6, 9, 3, 9, 2, 1, 4, 7, 2, 0, 3, 8, 9]"],"[3, 1, 1, 0, 5, 1, 4, 1]"],[["[9, 4, 8, 1, 4, 6, 5, 0, 7, 5, 3, 8, 9, 9, 4, 3, 0, 1, 2, 4, 9, 2, 5, 0, 4, 6, 0, 3, 7, 6]"],"[1, 2, 9, 6, 1]"],[["[5, 5, 9, 7, 0, 8, 7, 2, 2, 1, 7, 5, 5, 8, 6, 8, 3, 0, 6, 9, 9, 0, 6, 8, 8, 0, 8, 0, 9, 5]"],"[5, 3, 19]"],[["[5, 8, 5, 7, 6, 8, 0, 8, 1, 2, 9, 0, 7, 5, 1, 2, 8, 0, 6, 2, 9, 3, 0, 4, 7, 5, 4, 9, 7, 9]"],"[2, 5, 5, 1, 1, 0, 0, 12, 2, 3, 8, 0]"]],"type":"(list -> list)","name":"021","solution":"(letII (inc (inc randnat)) (λk -> (map (λact -> (case randnat of O => randnat | S => (λn -> (letII randnat (λx -> (case (flip 0.3) of True => act#3 | False => x#1)))))) (take (+ (case k#1 of O => randnat | S => (λn -> n#1)) (case (> k#1 randnat) of True => randnat | False => k#1)) #2))))","num_train":4},{"ios":[[["[0, 2, 2, 5, 6, 2, 3, 4, 6, 1, 9, 9, 8, 7, 3, 4, 0, 6, 7, 2, 4, 3, 4, 2, 0, 7, 7, 9, 3, 6]"],"[0, 2, 2, 5, 6, 2, 3, 4, 6, 1]"],[["[1, 3, 1, 0, 1, 4, 1, 8, 8, 1, 1, 9, 1, 6, 5, 9, 7, 4, 8, 0, 2, 8, 7, 0, 1, 6, 1, 4, 8, 8]"],"[1, 3, 1, 0]"],[["[5, 2, 1, 0, 7, 4, 3, 5, 5, 5, 9, 5, 9, 6, 0, 3, 1, 2, 2, 1, 5, 3, 7, 3, 4, 3, 6, 8, 8, 5]"],"[5, 2, 1, 0, 7, 4, 3, 5, 5, 5]"],[["[7, 5, 5, 3, 5, 6, 6, 9, 6, 1, 6, 0, 6, 0, 0, 5, 4, 6, 3, 2, 1, 1, 8, 5, 8, 1, 4, 6, 8, 1]"],"[7, 5, 5, 3, 5, 6, 6, 9, 6, 1]"],[["[2, 0, 4, 5, 2, 6, 4, 7, 4, 3, 6, 9, 3, 6, 0, 1, 4, 0, 2, 7, 2, 4, 3, 1, 4, 6, 8, 2, 8, 1]"],"[2, 0, 4, 5, 2]"],[["[9, 6, 5, 0, 2, 2, 1, 4, 6, 0, 7, 8, 4, 9, 9, 9, 1, 0, 7, 9, 4, 3, 2, 1, 4, 4, 6, 9, 1, 2]"],"[9, 6, 5, 0, 2, 2, 1, 4, 6, 0]"],[["[0, 7, 7, 4, 2, 3, 7, 2, 4, 0, 2, 0, 7, 8, 1, 2, 4, 5, 4, 5, 7, 5, 0, 9, 2, 2, 6, 8, 6, 5]"],"[0, 7, 7, 4, 2, 3, 7, 2, 4, 0]"],[["[8, 5, 6, 9, 3, 7, 6, 1, 0, 9, 3, 9, 0, 9, 1, 9, 9, 3, 4, 9, 7, 3, 4, 7, 3, 1, 5, 2, 8, 7]"],"[8, 5, 6, 9, 3, 7, 6, 1, 0, 9]"]],"type":"(list -> list)","name":"022","solution":"(letII (case (flip 0.6) of True => (- (letII randnat (λx -> (+ x#1 randnat))) (inc 3)) | False => (case 7 of O => randnat | S => (λn -> n#1))) (λk -> (map (λact -> act#1) (take (+ 3 (inc (case (flip 0.9) of True => k#1 | False => randnat))) #2))))","num_train":4},{"ios":[[["[3, 1, 2, 8, 2, 1, 9, 2, 5, 6, 5, 9, 3, 3, 8, 6, 5, 4, 5, 2, 8, 2, 1, 4, 1, 1, 6, 1, 3, 5]"],"[3, 1, 2]"],[["[3, 5, 5, 3, 8, 7, 4, 8, 7, 1, 4, 8, 4, 4, 6, 1, 8, 1, 9, 0, 2, 9, 9, 4, 5, 2, 8, 8, 9, 3]"],"[3, 5, 5, 3, 8]"],[["[2, 4, 2, 2, 3, 4, 3, 1, 8, 7, 9, 0, 1, 5, 5, 5, 9, 0, 7, 5, 0, 3, 5, 6, 1, 5, 3, 2, 6, 3]"],"[2, 4, 2]"],[["[8, 0, 4, 1, 4, 0, 4, 8, 7, 7, 1, 6, 4, 3, 5, 2, 2, 7, 2, 1, 5, 9, 1, 4, 8, 5, 8, 4, 2, 1]"],"[8, 0, 4]"],[["[4, 1, 9, 6, 5, 3, 8, 3, 9, 5, 3, 7, 1, 8, 7, 6, 1, 4, 8, 5, 0, 4, 1, 4, 0, 6, 1, 8, 6, 0]"],"[4, 1, 9, 6, 5]"],[["[1, 7, 7, 4, 3, 6, 6, 7, 1, 9, 5, 7, 6, 1, 6, 8, 5, 0, 7, 1, 4, 0, 9, 2, 5, 2, 9, 1, 7, 4]"],"[1, 7, 7]"],[["[7, 9, 4, 6, 2, 0, 9, 0, 4, 1, 1, 2, 5, 7, 5, 1, 9, 3, 1, 6, 9, 0, 4, 5, 3, 4, 2, 8, 0, 3]"],"[7, 9, 4, 6, 2]"],[["[0, 7, 8, 0, 6, 6, 2, 9, 1, 2, 2, 8, 4, 3, 0, 8, 3, 6, 7, 6, 5, 4, 5, 0, 9, 8, 1, 2, 8, 1]"],"[0, 7, 8]"]],"type":"(list -> list)","name":"023","solution":"(letII (case (> 5 8) of True => randnat | False => 3) (λk -> (map (λact -> (letII k#2 (λx -> (case (iseven 5) of True => 4 | False => act#2)))) (take (case (flip 0.8) of True => 5 | False => 3) #2))))","num_train":4},{"ios":[[["[0, 2, 8, 9, 3, 3, 4, 2, 8, 7, 1, 4, 7, 0, 1, 5, 5, 0, 8, 1, 9, 5, 5, 4, 2, 8, 7, 7, 2, 4]"],"[0, 2, 8]"],[["[7, 3, 6, 0, 5, 1, 0, 2, 4, 0, 0, 5, 4, 1, 8, 4, 6, 9, 2, 4, 7, 6, 3, 1, 2, 6, 7, 3, 8, 2]"],"[7, 3, 6]"],[["[8, 9, 8, 0, 2, 7, 0, 4, 9, 5, 2, 7, 0, 4, 1, 3, 3, 2, 4, 7, 6, 2, 9, 6, 9, 7, 7, 4, 9, 8]"],"[8, 9, 8]"],[["[3, 2, 7, 1, 6, 5, 4, 4, 6, 5, 7, 8, 0, 9, 1, 8, 0, 2, 1, 0, 1, 8, 4, 0, 8, 8, 8, 7, 6, 0]"],"[3, 2, 7]"],[["[9, 3, 1, 1, 2, 2, 6, 2, 3, 0, 9, 7, 2, 1, 2, 7, 4, 8, 7, 5, 6, 6, 0, 6, 1, 1, 5, 4, 4, 7]"],"[9, 3, 1]"],[["[4, 0, 3, 6, 1, 9, 7, 6, 3, 0, 2, 6, 1, 7, 4, 3, 1, 4, 7, 7, 5, 3, 0, 8, 8, 5, 7, 4, 6, 7]"],"[4, 0, 3]"],[["[2, 1, 7, 6, 7, 2, 4, 8, 2, 3, 8, 9, 6, 5, 1, 8, 9, 6, 4, 2, 8, 9, 7, 0, 2, 7, 6, 7, 4, 8]"],"[2, 1, 7]"],[["[6, 1, 7, 6, 4, 6, 3, 7, 0, 8, 4, 6, 1, 9, 8, 5, 2, 8, 8, 1, 9, 5, 9, 9, 8, 6, 5, 7, 0, 3]"],"[6, 1, 7]"]],"type":"(list -> list)","name":"024","solution":"(letII 3 (λk -> (map (λact -> act#1) (take k#1 #2))))","num_train":4},{"ios":[[["[5, 4, 4, 7, 3, 9, 5, 3, 1, 8, 9, 1, 2, 7, 2, 0, 5, 5, 2, 3, 6, 9, 1, 1, 6, 6, 0, 2, 4, 8]"],"[9, 9, 12]"],[["[5, 8, 6, 7, 1, 7, 9, 8, 0, 7, 9, 1, 1, 0, 8, 9, 6, 8, 7, 3, 1, 1, 8, 8, 6, 8, 4, 4, 8, 2]"],"[10, 23]"],[["[7, 7, 5, 5, 4, 5, 0, 4, 3, 2, 3, 3, 0, 0, 9, 4, 6, 6, 9, 1, 7, 3, 9, 9, 2, 7, 6, 9, 3, 7]"],"[10, 10, 35, 13, 14, 13, 2]"],[["[4, 9, 4, 9, 8, 6, 0, 4, 7, 5, 3, 5, 5, 8, 8, 4, 8, 0, 3, 4, 9, 2, 6, 5, 9, 1, 5, 2, 4, 5]"],"[8, 17, 10, 12]"],[["[5, 8, 8, 1, 9, 3, 9, 8, 9, 7, 3, 2, 2, 3, 3, 0, 6, 5, 5, 5, 8, 1, 7, 5, 4, 6, 1, 2, 3, 4]"],"[8, 11]"],[["[1, 3, 1, 9, 7, 4, 2, 5, 1, 1, 0, 5, 9, 5, 4, 9, 6, 8, 0, 4, 7, 6, 0, 1, 1, 1, 1, 9, 4, 9]"],"[6, 7, 10, 17]"],[["[3, 0, 5, 2, 3, 4, 1, 8, 0, 2, 5, 0, 8, 9, 4, 6, 3, 3, 7, 0, 2, 2, 5, 3, 8, 2, 8, 5, 7, 6]"],"[6, 5, 13, 8, 7, 8, 11, 20]"],[["[1, 6, 9, 9, 9, 9, 7, 9, 6, 5, 5, 8, 5, 1, 2, 3, 5, 0, 7, 6, 2, 4, 3, 3, 7, 0, 6, 2, 4, 3]"],"[9, 11]"]],"type":"(list -> list)","name":"025","solution":"(letII (inc (case (flip 0.9) of True => 9 | False => (inc randnat))) (λk -> (map (λact -> (+ act#1 (letII act#1 (λx -> (+ 2 randnat))))) (take (inc randnat) #2))))","num_train":4},{"ios":[[["[0, 7, 8, 4, 7, 8, 4, 6, 0, 9, 4, 5, 2, 4, 4, 6, 2, 1, 7, 3, 7, 3, 3, 3, 5, 7, 0, 1, 1, 2]"],"[0, 11, 10, 9, 13, 8, 8, 11, 23]"],[["[8, 6, 8, 4, 6, 8, 2, 9, 3, 7, 4, 3, 2, 1, 8, 5, 4, 9, 8, 3, 8, 0, 9, 8, 0, 1, 3, 1, 6, 3]"],"[10, 10, 23, 16, 18, 15, 3, 16, 16]"],[["[6, 9, 1, 9, 0, 3, 7, 2, 5, 5, 8, 6, 0, 3, 6, 1, 4, 2, 0, 8, 0, 0, 9, 6, 6, 0, 8, 2, 3, 1]"],"[16, 18, 13, 14, 12, 10, 17, 10, 11]"],[["[7, 6, 9, 2, 5, 6, 8, 7, 2, 9, 6, 7, 7, 7, 4, 0, 3, 7, 6, 3, 6, 6, 0, 4, 5, 0, 9, 9, 8, 4]"],"[5, 13, 11, 7, 6, 9, 9, 19, 6]"],[["[3, 9, 5, 4, 7, 9, 0, 7, 9, 7, 9, 4, 8, 0, 9, 7, 5, 6, 1, 3, 3, 2, 2, 6, 0, 3, 6, 0, 8, 0]"],"[14, 14, 11, 15, 9, 14, 0, 11, 12]"],[["[1, 6, 8, 7, 0, 0, 7, 1, 0, 1, 6, 4, 8, 0, 0, 7, 8, 2, 4, 5, 6, 9, 9, 5, 6, 7, 1, 2, 1, 9]"],"[3, 5, 5, 2, 0, 4, 2, 2, 0]"],[["[8, 5, 6, 2, 3, 1, 5, 5, 3, 6, 6, 3, 3, 7, 4, 7, 6, 6, 5, 9, 1, 8, 6, 4, 9, 6, 5, 3, 2, 7]"],"[11, 14, 10, 9, 18, 12, 9, 12, 18]"],[["[9, 9, 6, 7, 2, 8, 6, 2, 2, 6, 5, 3, 7, 7, 2, 4, 8, 3, 7, 8, 9, 0, 9, 1, 1, 7, 6, 3, 2, 4]"],"[19, 16, 12, 11, 11, 14, 11, 21, 17]"]],"type":"(list -> list)","name":"026","solution":"(letII (- (inc (+ 3 8)) randnat) (λk -> (map (λact -> (case (case (flip 0.1) of True => randnat | False => act#1) of O => (case (flip 0.5) of True => act#1 | False => randnat) | S => (λn -> (+ randnat k#3)))) (take (inc (case 9 of O => randnat | S => (λn -> 8))) #2))))","num_train":4},{"ios":[[["[2, 4, 6, 8, 0, 3, 0, 1, 8, 9, 4, 9, 3, 7, 0, 5, 5, 7, 0, 4, 6, 3, 7, 9, 1, 1, 5, 2, 4, 6]"],"[2, 4, 6, 2, 0, 3, 0, 1, 8, 9, 4, 9]"],[["[4, 1, 2, 3, 7, 6, 9, 4, 8, 0, 6, 1, 3, 6, 4, 6, 7, 9, 5, 8, 8, 0, 2, 0, 5, 8, 1, 1, 9, 5]"],"[4, 3, 2, 0, 0, 12, 9, 4, 8, 0, 6, 1, 3, 6, 4, 6]"],[["[6, 9, 4, 8, 0, 8, 0, 6, 1, 4, 1, 0, 1, 0, 8, 2, 2, 9, 6, 4, 4, 3, 5, 0, 3, 3, 2, 7, 4, 9]"],"[6, 9, 4, 8, 0, 8, 0]"],[["[8, 7, 0, 0, 1, 4, 4, 2, 5, 9, 1, 1, 1, 4, 3, 1, 5, 3, 8, 6, 0, 1, 3, 8, 0, 8, 8, 5, 6, 6]"],"[8, 7, 0, 0, 1, 4, 4, 2, 5]"],[["[7, 7, 8, 7, 9, 0, 1, 9, 7, 4, 6, 7, 8, 1, 8, 2, 9, 2, 4, 6, 1, 0, 0, 6, 3, 8, 1, 9, 8, 9]"],"[1, 7, 8, 7, 9, 0]"],[["[6, 2, 8, 3, 2, 8, 0, 6, 5, 4, 1, 1, 9, 8, 9, 6, 7, 8, 3, 6, 3, 6, 9, 7, 4, 1, 9, 0, 8, 2]"],"[6, 2, 8, 3, 2, 8, 0, 6, 7, 4, 1, 1, 9]"],[["[8, 8, 7, 5, 9, 3, 9, 0, 2, 3, 5, 2, 3, 7, 6, 2, 7, 1, 1, 7, 7, 0, 3, 7, 2, 1, 5, 4, 5, 8]"],"[8, 8, 7, 5, 9, 3, 1, 0]"],[["[6, 9, 4, 0, 3, 2, 9, 2, 7, 0, 6, 0, 1, 0, 3, 0, 7, 7, 3, 1, 4, 1, 5, 2, 2, 2, 9, 9, 2, 6]"],"[6, 9, 4, 0, 0, 2, 4, 2, 5, 0, 6, 0, 1, 2, 3, 0, 7, 7, 10, 1, 4, 1, 5, 2, 2]"]],"type":"(list -> list)","name":"027","solution":"(letII randnat (λk -> (map (λact -> (case (letII k#2 (λx -> (case (flip 0.2) of True => randnat | False => randnat))) of O => randnat | S => (λn -> act#2))) (take (+ (letII 7 (λx -> (+ 4 (case x#1 of O => x#1 | S => (λn -> randnat))))) (letII k#1 (λx -> (inc k#2)))) #2))))","num_train":4},{"ios":[[["[6, 8, 5, 1, 2, 6, 2, 0, 9, 0, 7, 6, 9, 7, 3, 6, 9, 9, 8, 6, 9, 9, 5, 6, 1, 5, 8, 3, 9, 0]"],"[4, 0, 14, 1, 4, 0, 1, 5, 1]"],[["[3, 4, 4, 4, 6, 9, 2, 6, 8, 1, 8, 9, 5, 6, 6, 3, 4, 1, 2, 2, 4, 1, 3, 8, 6, 2, 5, 4, 2, 5]"],"[25, 2, 4, 5, 6, 12, 3, 2, 0]"],[["[3, 1, 1, 5, 9, 4, 2, 6, 4, 5, 0, 1, 1, 4, 6, 4, 4, 2, 4, 7, 8, 7, 3, 7, 9, 6, 0, 9, 8, 7]"],"[0, 1, 0, 6, 3, 4, 0, 0, 6]"],[["[0, 9, 7, 3, 7, 5, 1, 2, 9, 0, 8, 0, 8, 4, 1, 5, 0, 6, 2, 3, 5, 6, 9, 8, 8, 6, 2, 5, 2, 3]"],"[0, 9, 2, 3, 3, 4, 0, 2, 1]"],[["[4, 6, 2, 1, 5, 9, 0, 8, 7, 4, 3, 1, 6, 8, 6, 7, 5, 8, 1, 8, 1, 3, 5, 7, 5, 1, 5, 8, 8, 5]"],"[4, 6, 3, 1, 2, 3, 10, 7, 7]"],[["[3, 7, 2, 1, 6, 7, 2, 5, 8, 9, 6, 6, 0, 4, 9, 6, 4, 7, 0, 4, 6, 4, 8, 9, 1, 1, 0, 9, 7, 7]"],"[2, 7]"],[["[8, 3, 5, 1, 3, 2, 9, 3, 6, 3, 3, 4, 8, 5, 2, 6, 1, 6, 3, 0, 2, 4, 8, 9, 0, 8, 7, 1, 2, 3]"],"[8, 3, 5, 1, 3, 2]"],[["[5, 5, 5, 2, 0, 8, 3, 6, 2, 8, 6, 1, 5, 9, 2, 7, 8, 3, 6, 5, 9, 2, 8, 6, 6, 0, 5, 5, 9, 6]"],"[7, 0, 0, 0, 0, 0, 3, 2, 2]"]],"type":"(list -> list)","name":"028","solution":"(letII 9 (λk -> (map (λact -> (case (flip 0.9) of True => (case randnat of O => act#1 | S => (λn -> n#1)) | False => act#1)) (take (case (flip 0.9) of True => k#1 | False => randnat) #2))))","num_train":4},{"ios":[[["[6, 0, 8, 8, 7, 5, 8, 0, 2, 7, 9, 9, 1, 2, 1, 8, 1, 8, 1, 7, 6, 5, 6, 5, 6, 9, 6, 8, 4, 6]"],"[6, 4, 12, 3]"],[["[8, 5, 1, 8, 6, 0, 7, 4, 5, 2, 6, 4, 5, 2, 8, 3, 0, 0, 8, 5, 8, 3, 3, 9, 3, 7, 5, 5, 8, 7]"],"[3, 1]"],[["[1, 2, 2, 4, 2, 7, 7, 7, 1, 9, 0, 3, 4, 4, 5, 3, 7, 5, 5, 5, 6, 5, 8, 9, 8, 7, 5, 8, 8, 5]"],"[0, 2]"],[["[8, 3, 0, 2, 2, 3, 9, 3, 2, 1, 6, 5, 1, 3, 9, 1, 2, 4, 6, 5, 9, 3, 4, 6, 0, 9, 2, 1, 1, 1]"],"[11, 2, 1, 1]"],[["[7, 9, 1, 1, 4, 2, 9, 4, 0, 1, 5, 0, 1, 5, 1, 7, 4, 1, 6, 0, 3, 7, 6, 1, 4, 9, 0, 1, 9, 9]"],"[4, 2, 0, 4]"],[["[0, 8, 7, 5, 7, 3, 2, 4, 8, 3, 9, 3, 0, 6, 6, 8, 4, 9, 3, 9, 8, 9, 6, 6, 3, 2, 8, 9, 9, 3]"],"[2, 0, 7, 2]"],[["[6, 0, 5, 3, 4, 8, 3, 9, 5, 3, 9, 2, 0, 7, 9, 6, 9, 7, 1, 9, 6, 9, 6, 3, 3, 1, 1, 4, 6, 1]"],"[8, 0]"],[["[8, 0, 3, 3, 2, 5, 3, 6, 8, 3, 4, 4, 0, 6, 3, 5, 6, 3, 7, 8, 6, 8, 3, 5, 2, 1, 6, 1, 1, 1]"],"[2, 0]"]],"type":"(list -> list)","name":"029","solution":"(letII (letII 4 (λx -> (case (iseven randnat) of True => x#1 | False => 2))) (λk -> (map (λact -> (case (inc act#1) of O => k#2 | S => (λn -> (letII 9 (λx -> (case (flip 0.4) of True => randnat | False => randnat)))))) (take k#1 #2))))","num_train":4},{"ios":[[["[0, 2, 8, 1, 2, 8, 5, 6, 2, 9, 6, 6, 9, 0, 6, 2, 9, 8, 2, 2, 7, 8, 5, 2, 3, 2, 2, 9, 8, 4]"],"[1, 3, 9, 2, 3, 9]"],[["[6, 4, 9, 4, 9, 8, 2, 1, 3, 8, 7, 1, 6, 9, 8, 3, 7, 4, 1, 5, 4, 3, 4, 0, 7, 8, 9, 7, 8, 2]"],"[7, 5, 10, 5, 10, 9, 3]"],[["[4, 7, 7, 1, 9, 8, 1, 2, 8, 0, 1, 1, 1, 1, 7, 8, 4, 4, 8, 2, 8, 1, 2, 1, 0, 3, 0, 4, 5, 8]"],"[5, 8]"],[["[3, 9, 0, 6, 2, 1, 2, 2, 6, 5, 3, 7, 9, 4, 5, 1, 4, 8, 1, 8, 1, 5, 6, 2, 1, 6, 1, 2, 7, 9]"],"[4, 10, 1, 7, 3, 2, 3, 3, 7, 6, 4, 8, 10, 5]"],[["[9, 0, 9, 8, 5, 8, 3, 8, 7, 9, 8, 8, 5, 2, 9, 0, 9, 0, 8, 1, 7, 3, 5, 2, 8, 4, 4, 6, 0, 1]"],"[10, 1, 10, 9, 6, 9, 4, 9, 8, 10, 9, 9, 6, 3, 10, 1, 10]"],[["[9, 1, 3, 2, 5, 5, 7, 1, 4, 4, 2, 6, 4, 1, 6, 4, 1, 9, 4, 2, 6, 9, 9, 8, 7, 1, 3, 1, 3, 2]"],"[10, 2, 4, 3, 6, 6, 8, 2, 5]"],[["[6, 6, 1, 6, 7, 4, 9, 7, 7, 7, 1, 4, 6, 2, 9, 7, 5, 5, 6, 9, 1, 3, 3, 4, 0, 3, 7, 7, 0, 6]"],"[7, 7, 2, 7, 8]"],[["[5, 7, 5, 5, 3, 8, 9, 9, 7, 5, 4, 1, 4, 3, 3, 5, 0, 4, 3, 3, 7, 6, 6, 4, 5, 0, 5, 2, 0, 3]"],"[6, 8, 6, 6, 4, 9]"]],"type":"(list -> list)","name":"030","solution":"(letII randnat (λk -> (map (λact -> (letII act#1 (λx -> (inc x#1)))) (take (case randnat of O => (letII k#1 (λx -> (+ randnat randnat))) | S => (λn -> randnat)) #2))))","num_train":4},{"ios":[[["[3, 2, 6, 4, 6, 1, 0, 3, 5, 1, 1, 9, 2, 3, 0, 6, 0, 6, 4, 6, 5, 7, 8, 2, 9, 9, 2, 4, 2, 6]"],"[0, 5, 4, 4, 3]"],[["[5, 2, 8, 6, 7, 7, 8, 4, 2, 3, 3, 6, 2, 5, 6, 8, 0, 2, 9, 8, 3, 9, 7, 3, 3, 8, 8, 5, 0, 4]"],"[3, 1, 5]"],[["[8, 3, 4, 3, 7, 9, 1, 9, 3, 6, 3, 4, 5, 4, 4, 7, 4, 9, 0, 8, 4, 1, 7, 4, 0, 0, 0, 1, 9, 5]"],"[2, 1, 5, 11, 0, 2, 4, 0]"],[["[9, 8, 3, 5, 1, 9, 1, 0, 0, 2, 9, 5, 7, 3, 8, 5, 7, 7, 9, 6, 5, 8, 4, 5, 3, 5, 6, 8, 1, 9]"],"[1, 1, 0, 2, 5, 1, 18, 1]"],[["[1, 4, 0, 0, 9, 7, 4, 5, 3, 7, 9, 9, 5, 7, 3, 8, 0, 5, 1, 4, 3, 0, 7, 9, 8, 0, 0, 8, 6, 1]"],"[9, 0, 11, 9, 6, 10, 3]"],[["[0, 1, 8, 2, 6, 0, 6, 0, 0, 5, 5, 1, 8, 2, 0, 2, 6, 7, 8, 3, 8, 8, 1, 5, 0, 6, 4, 8, 7, 6]"],"[7, 0, 5]"],[["[5, 1, 3, 9, 1, 8, 3, 0, 1, 9, 6, 6, 3, 4, 1, 7, 6, 7, 2, 4, 9, 8, 9, 0, 7, 0, 0, 7, 3, 6]"],"[2, 5, 2, 4]"],[["[6, 2, 0, 4, 3, 5, 7, 2, 4, 1, 6, 8, 7, 0, 5, 1, 9, 6, 5, 4, 7, 6, 0, 6, 2, 1, 8, 7, 5, 1]"],"[4, 0, 9, 1, 4, 0, 2, 0, 1, 1, 3, 1, 0, 4, 0]"]],"type":"(list -> list)","name":"031","solution":"(letII randnat (λk -> (map (λact -> (case act#1 of O => (inc randnat) | S => (λn -> randnat))) (take (+ (case (flip 0.3) of True => k#1 | False => randnat) randnat) #2))))","num_train":4},{"ios":[[["[6, 1, 1, 7, 0, 4, 2, 0, 5, 2, 8, 9, 6, 3, 3, 4, 4, 4, 1, 0, 1, 6, 7, 9, 8, 0, 0, 7, 9, 3]"],"[1, 1, 3, 5, 2, 7, 0, 2]"],[["[6, 1, 4, 1, 7, 6, 6, 4, 0, 7, 2, 5, 7, 2, 5, 4, 6, 2, 4, 6, 9, 1, 4, 0, 4, 3, 0, 8, 7, 1]"],"[1, 5, 7, 6, 6, 0, 0, 0]"],[["[5, 3, 4, 0, 4, 6, 1, 8, 2, 8, 8, 0, 5, 1, 2, 4, 8, 6, 5, 2, 9, 3, 3, 3, 7, 2, 1, 3, 2, 8]"],"[16, 7, 2, 1, 1, 2, 0, 2]"],[["[2, 7, 9, 0, 4, 1, 5, 3, 7, 6, 8, 3, 8, 6, 7, 8, 2, 8, 4, 8, 9, 7, 8, 6, 9, 6, 3, 9, 5, 6]"],"[4, 5, 0, 1, 4, 0, 2, 4]"],[["[7, 6, 5, 2, 6, 5, 2, 1, 9, 2, 1, 4, 9, 0, 7, 1, 4, 1, 7, 2, 9, 4, 4, 3, 0, 7, 0, 0, 8, 5]"],"[1, 0, 10, 2, 12, 1, 3, 1]"],[["[9, 5, 8, 0, 3, 5, 8, 6, 1, 5, 6, 4, 3, 8, 5, 1, 0, 6, 2, 4, 2, 9, 9, 5, 2, 5, 3, 7, 6, 2]"],"[0, 1, 1, 9, 4, 5, 0, 2]"],[["[2, 2, 6, 3, 8, 7, 6, 2, 8, 9, 9, 2, 1, 5, 1, 9, 7, 3, 3, 1, 4, 0, 3, 1, 4, 9, 1, 5, 2, 3]"],"[2, 0, 0, 2, 1, 0, 2, 4]"],[["[9, 1, 4, 9, 1, 1, 5, 3, 9, 6, 3, 1, 7, 1, 4, 1, 1, 4, 7, 4, 3, 8, 4, 2, 9, 3, 4, 2, 1, 3]"],"[2, 1, 5, 0, 8, 3, 1, 0]"]],"type":"(list -> list)","name":"032","solution":"(letII (+ 3 5) (λk -> (map (λact -> (- (+ act#1 randnat) act#1)) (take k#1 #2))))","num_train":4},{"ios":[[["[8, 6, 4, 6, 7, 8, 0, 2, 3, 6, 7, 8, 4, 2, 2, 4, 6, 7, 5, 8, 5, 3, 6, 6, 4, 2, 7, 6, 8, 5]"],"[0, 0, 0, 2, 3]"],[["[7, 0, 7, 2, 0, 5, 4, 2, 9, 6, 3, 3, 1, 5, 5, 0, 3, 6, 7, 8, 0, 6, 4, 0, 3, 8, 4, 9, 2, 0]"],"[4, 1, 1, 1, 1, 1]"],[["[7, 3, 3, 8, 7, 5, 9, 9, 6, 7, 5, 8, 5, 0, 0, 7, 8, 9, 5, 9, 3, 2, 5, 7, 4, 3, 9, 7, 6, 8]"],"[3, 0, 3]"],[["[5, 1, 2, 6, 2, 3, 0, 6, 1, 1, 8, 4, 2, 0, 4, 9, 5, 4, 3, 1, 0, 6, 1, 8, 0, 6, 3, 0, 5, 6]"],"[0, 1, 5, 6, 2]"],[["[7, 3, 2, 1, 3, 8, 7, 8, 0, 5, 9, 6, 4, 8, 0, 9, 4, 2, 2, 4, 3, 0, 0, 6, 5, 0, 9, 8, 6, 3]"],"[1, 5, 6, 0, 1, 6, 1, 1]"],[["[6, 1, 1, 9, 6, 5, 8, 4, 5, 8, 2, 5, 8, 0, 4, 1, 3, 3, 0, 0, 2, 7, 4, 6, 9, 9, 4, 8, 0, 9]"],"[4, 2, 1, 0, 9, 0, 3, 5, 4, 1, 6, 13, 0, 7]"],[["[0, 3, 8, 5, 8, 3, 8, 4, 3, 8, 2, 4, 0, 0, 4, 1, 8, 6, 4, 5, 3, 9, 5, 3, 7, 4, 9, 8, 3, 6]"],"[1, 2, 5, 1]"],[["[4, 3, 9, 9, 7, 6, 5, 6, 0, 1, 5, 5, 3, 8, 9, 3, 4, 8, 8, 1, 1, 9, 6, 3, 8, 8, 3, 2, 9, 2]"],"[8, 8, 1, 1, 0, 1, 4, 5]"]],"type":"(list -> list)","name":"033","solution":"(letII (inc randnat) (λk -> (map (λact -> (case randnat of O => (letII act#1 (λx -> (inc (- randnat randnat)))) | S => (λn -> n#1))) (take (+ randnat randnat) #2))))","num_train":4},{"ios":[[["[2, 9, 0, 9, 7, 8, 4, 9, 6, 3, 2, 8, 1, 5, 6, 3, 8, 8, 6, 7, 9, 8, 4, 9, 6, 2, 8, 8, 5, 3]"],"[6, 10, 5]"],[["[2, 3, 6, 1, 3, 2, 2, 4, 0, 9, 0, 4, 3, 6, 1, 9, 3, 3, 1, 3, 0, 7, 2, 2, 6, 0, 6, 4, 3, 0]"],"[5, 4, 5, 0, 2]"],[["[2, 2, 8, 1, 5, 6, 4, 6, 1, 7, 0, 1, 4, 3, 9, 1, 4, 8, 3, 7, 3, 3, 8, 0, 0, 8, 8, 1, 2, 7]"],"[2, 7, 3, 7, 3, 0, 15, 0, 0, 4, 1, 7, 0]"],[["[7, 6, 8, 8, 4, 7, 3, 4, 1, 8, 5, 6, 1, 9, 2, 8, 6, 0, 9, 0, 1, 8, 4, 8, 2, 5, 6, 9, 3, 7]"],"[5, 1, 4, 4, 3, 1, 7, 1]"],[["[1, 8, 5, 5, 5, 8, 5, 1, 8, 5, 0, 2, 2, 6, 0, 1, 7, 6, 8, 2, 4, 2, 2, 3, 0, 9, 9, 9, 3, 7]"],"[0, 0, 5, 1, 16, 2, 8, 0, 3, 4]"],[["[2, 7, 8, 9, 1, 0, 5, 7, 1, 1, 8, 4, 1, 5, 6, 3, 6, 9, 3, 7, 3, 0, 4, 8, 4, 1, 8, 4, 1, 3]"],"[30, 5, 0, 9, 5, 0, 0, 0]"],[["[6, 9, 8, 3, 9, 6, 4, 8, 0, 5, 1, 8, 4, 1, 9, 2, 1, 8, 6, 8, 0, 8, 3, 6, 6, 7, 0, 7, 2, 2]"],"[5, 0, 7, 5, 2, 1, 1, 11, 5, 2, 0, 4, 2, 3, 4, 2, 3, 4, 0, 1, 0, 0, 1, 5, 11, 6, 22, 2, 9, 0]"],[["[8, 4, 8, 6, 2, 8, 7, 2, 1, 4, 7, 9, 5, 8, 6, 2, 9, 4, 1, 6, 1, 9, 1, 7, 4, 6, 2, 9, 4, 3]"],"[0, 0, 26, 3, 0, 3, 4, 2, 2, 1, 4, 2]"]],"type":"(list -> list)","name":"034","solution":"(letII (letII randnat (λx -> (+ randnat (case randnat of O => x#1 | S => (λn -> x#2))))) (λk -> (map (λact -> (letII (letII k#2 (λx -> (- act#2 randnat))) (λx -> (case (flip 0.9) of True => (letII k#3 (λx -> (case randnat of O => randnat | S => (λn -> n#1)))) | False => randnat)))) (take (inc (case (flip 0.7) of True => k#1 | False => randnat)) #2))))","num_train":4},{"ios":[[["[9, 9, 9, 5, 8, 1, 5, 9, 1, 4, 8, 7, 9, 8, 4, 3, 3, 2, 6, 4, 5, 5, 5, 6, 8, 6, 9, 7, 5, 2]"],"[4, 2]"],[["[8, 9, 3, 8, 0, 1, 3, 1, 3, 6, 2, 2, 8, 4, 0, 1, 4, 3, 2, 4, 0, 1, 8, 5, 8, 1, 9, 8, 7, 5]"],"[0, 5, 8, 0, 2, 1, 15, 2, 0, 12, 12, 12]"],[["[2, 7, 8, 4, 5, 3, 1, 1, 5, 5, 5, 9, 1, 4, 4, 0, 2, 4, 2, 2, 3, 6, 2, 5, 5, 6, 2, 1, 6, 2]"],"[6, 2, 6, 6, 2, 5]"],[["[6, 4, 2, 4, 5, 7, 6, 1, 1, 3, 2, 1, 8, 8, 6, 9, 1, 5, 0, 4, 8, 6, 3, 7, 2, 9, 2, 2, 9, 2]"],"[8, 5, 5, 0, 6]"],[["[7, 0, 9, 2, 8, 0, 2, 6, 8, 5, 7, 4, 6, 5, 3, 8, 2, 1, 9, 6, 4, 7, 7, 0, 2, 9, 2, 9, 2, 4]"],"[2, 1, 7, 16, 16, 16, 16, 3, 16, 0, 5, 16, 3, 4, 3, 16]"],[["[4, 5, 5, 7, 9, 0, 3, 2, 9, 9, 2, 0, 7, 9, 5, 7, 4, 8, 7, 8, 2, 9, 0, 2, 3, 0, 5, 9, 6, 5]"],"[6, 10, 2, 4, 7, 19]"],[["[6, 9, 3, 0, 5, 4, 7, 0, 6, 8, 2, 1, 9, 9, 6, 5, 1, 8, 5, 1, 6, 0, 8, 3, 4, 8, 0, 9, 6, 4]"],"[3, 3, 6]"],[["[6, 5, 4, 1, 0, 3, 9, 5, 2, 4, 2, 2, 2, 6, 6, 0, 0, 5, 5, 2, 8, 3, 0, 7, 0, 6, 5, 3, 1, 2]"],"[2, 2, 12, 1, 8, 5, 1, 8, 12, 1, 2, 0]"]],"type":"(list -> list)","name":"035","solution":"(letII (letII randnat (λx -> (+ x#1 (letII randnat (λx -> (case (flip 0.5) of True => (- randnat randnat) | False => randnat)))))) (λk -> (map (λact -> (case (iseven act#1) of True => (case (flip 0.4) of True => randnat | False => k#2) | False => randnat)) (take k#1 #2))))","num_train":4},{"ios":[[["[7, 3, 8, 5, 6, 0, 3, 6, 7, 1, 2, 6, 9, 9, 8, 5, 2, 0, 0, 1, 8, 6, 3, 6, 4, 3, 8, 2, 0, 6]"],"[0, 4, 2, 0, 0]"],[["[3, 6, 3, 3, 8, 7, 1, 7, 8, 7, 2, 8, 7, 7, 0, 8, 0, 6, 2, 6, 7, 9, 1, 1, 0, 7, 3, 2, 5, 7]"],"[2, 5, 0, 6, 7]"],[["[4, 7, 1, 8, 2, 7, 4, 3, 6, 5, 4, 0, 9, 8, 4, 2, 3, 6, 7, 0, 4, 9, 3, 9, 9, 5, 4, 1, 8, 2]"],"[0, 13, 3, 2, 10]"],[["[2, 4, 5, 9, 9, 9, 6, 0, 6, 7, 4, 1, 7, 5, 1, 9, 3, 6, 9, 9, 0, 9, 9, 7, 0, 2, 4, 1, 4, 3]"],"[1, 1, 6, 2, 1]"],[["[7, 4, 8, 3, 8, 0, 7, 7, 5, 4, 8, 9, 0, 2, 6, 4, 0, 7, 0, 9, 5, 0, 5, 4, 8, 7, 5, 3, 5, 0]"],"[0, 10, 4, 2, 8, 9, 5]"],[["[3, 4, 8, 2, 5, 5, 1, 9, 2, 0, 6, 5, 8, 5, 8, 9, 2, 8, 7, 4, 7, 4, 6, 5, 7, 3, 6, 7, 0, 0]"],"[5, 7, 2, 0, 7]"],[["[2, 5, 2, 6, 4, 8, 9, 9, 6, 4, 4, 4, 3, 0, 8, 3, 4, 1, 5, 8, 6, 0, 6, 5, 6, 2, 3, 0, 6, 5]"],"[0, 0, 2, 0, 4]"],[["[2, 9, 1, 6, 0, 5, 2, 0, 6, 9, 3, 2, 6, 9, 9, 1, 8, 8, 2, 5, 3, 0, 1, 6, 6, 6, 1, 1, 5, 6]"],"[1, 9, 3, 7, 9]"]],"type":"(list -> list)","name":"036","solution":"(letII (inc (- randnat randnat)) (λk -> (map (λact -> (case act#1 of O => 9 | S => (λn -> randnat))) (take (+ 4 k#1) #2))))","num_train":4},{"ios":[[["[9, 1, 0, 9, 6, 2, 3, 3, 7, 1, 3, 6, 9, 3, 5, 1, 8, 4, 2, 5, 7, 8, 1, 6, 3, 3, 7, 6, 3, 8]"],"[9, 1, 0, 9, 6, 2, 3, 3, 7, 1, 3, 6, 9, 3]"],[["[8, 5, 4, 7, 1, 3, 3, 1, 6, 6, 7, 1, 3, 2, 5, 9, 4, 2, 5, 7, 8, 8, 5, 3, 0, 3, 5, 3, 3, 5]"],"[8, 5, 4, 7, 1, 3, 3]"],[["[4, 0, 4, 6, 8, 7, 5, 8, 2, 5, 5, 0, 9, 4, 6, 1, 6, 4, 7, 0, 2, 6, 9, 6, 7, 2, 7, 8, 0, 6]"],"[4, 0, 4, 6, 8, 7, 5, 8]"],[["[9, 9, 8, 2, 1, 5, 4, 7, 9, 6, 6, 6, 8, 4, 2, 5, 7, 3, 9, 2, 5, 9, 9, 0, 9, 4, 1, 6, 1, 0]"],"[9, 9, 8, 2, 1, 5, 4, 7, 9]"],[["[7, 1, 1, 4, 7, 6, 3, 5, 5, 4, 5, 4, 2, 6, 1, 0, 0, 0, 6, 7, 4, 1, 4, 6, 5, 3, 0, 2, 2, 8]"],"[7, 1, 1, 4, 7, 6, 3, 5, 5, 4]"],[["[7, 4, 8, 0, 7, 0, 8, 3, 8, 2, 8, 4, 5, 4, 7, 3, 9, 4, 8, 7, 4, 5, 4, 5, 5, 4, 8, 6, 9, 9]"],"[7, 4, 8, 0, 7, 0, 8, 3, 8, 2, 8, 4, 5, 4, 7, 3, 9, 4, 8, 7, 4, 5, 4, 5]"],[["[9, 7, 2, 5, 2, 6, 4, 4, 3, 5, 4, 1, 2, 3, 7, 4, 6, 3, 4, 1, 1, 2, 6, 1, 0, 5, 2, 6, 6, 3]"],"[9, 7, 2, 5, 2, 6, 4, 4, 3, 5, 4, 1, 2, 3, 7, 4, 6, 3, 4, 1]"],[["[3, 1, 5, 4, 8, 1, 7, 7, 5, 6, 9, 6, 2, 8, 5, 8, 3, 1, 1, 4, 8, 4, 8, 3, 3, 9, 3, 1, 8, 1]"],"[3, 1, 5, 4, 8, 1, 7]"]],"type":"(list -> list)","name":"037","solution":"(letII (case randnat of O => (case (flip 0.4) of True => randnat | False => 8) | S => (λn -> (inc n#1))) (λk -> (map (λact -> act#1) (take (inc (+ 6 (- (+ randnat k#1) (letII randnat (λx -> (+ randnat randnat)))))) #2))))","num_train":4},{"ios":[[["[3, 9, 9, 9, 1, 7, 6, 8, 4, 8, 8, 3, 5, 8, 5, 4, 9, 3, 8, 4, 5, 4, 6, 4, 6, 7, 7, 3, 4, 1]"],"[4, 11, 11, 10, 2, 30, 26, 8, 6, 21, 14, 6, 5, 8, 19, 5, 11]"],[["[4, 8, 2, 0, 6, 1, 5, 4, 3, 0, 2, 3, 3, 3, 6, 2, 8, 0, 5, 7, 9, 0, 0, 1, 1, 8, 6, 3, 9, 8]"],"[7, 8, 2, 0, 7, 4, 11, 10, 7, 2, 5, 8, 20, 10, 7, 9]"],[["[2, 8, 0, 3, 2, 3, 3, 3, 4, 1, 9, 6, 9, 7, 1, 9, 0, 7, 1, 6, 9, 4, 8, 3, 2, 8, 7, 7, 1, 7]"],"[2, 18, 9, 5, 7, 5, 17, 5, 7, 2, 21, 6, 14]"],[["[7, 6, 2, 1, 3, 3, 6, 0, 3, 9, 4, 4, 5, 3, 6, 1, 2, 3, 2, 0, 3, 2, 4, 4, 9, 1, 7, 1, 1, 7]"],"[7, 7, 2, 2, 7, 8, 6, 0, 8]"],[["[9, 8, 5, 9, 0, 6, 4, 8, 2, 2, 5, 9, 1, 7, 8, 8, 5, 2, 9, 2, 0, 9, 9, 8, 3, 5, 2, 9, 1, 8]"],"[14, 8, 7, 17, 5, 10, 5, 21, 7, 8, 5, 17, 1]"],[["[9, 3, 6, 5, 2, 7, 6, 3, 6, 0, 0, 3, 0, 7, 3, 3, 7, 6, 8, 0, 1, 0, 2, 6, 3, 9, 8, 5, 6, 6]"],"[14, 8, 9, 10, 8]"],[["[2, 9, 4, 5, 2, 8, 8, 0, 9, 1, 3, 8, 7, 0, 6, 4, 2, 1, 1, 1, 3, 7, 6, 6, 8, 9, 8, 4, 2, 6]"],"[9, 10, 10, 26, 4, 14, 9, 1, 20, 8, 5, 10, 11, 3, 17, 7, 22]"],[["[0, 8, 4, 8, 9, 1, 2, 1, 9, 7, 5, 9, 8, 7, 6, 7, 9, 6, 8, 0, 9, 9, 2, 6, 2, 5, 7, 5, 4, 6]"],"[2, 12, 9, 10, 11, 2, 2, 6, 10, 10, 7, 13, 9, 8, 11, 8, 9, 17, 11, 0]"]],"type":"(list -> list)","name":"038","solution":"(letII (+ randnat (letII randnat (λx -> (+ randnat randnat)))) (λk -> (map (λact -> (+ act#1 randnat)) (take (inc (case (+ k#1 randnat) of O => 7 | S => (λn -> (letII randnat (λx -> (+ n#2 randnat)))))) #2))))","num_train":4},{"ios":[[["[1, 3, 7, 9, 2, 4, 9, 3, 4, 8, 3, 1, 8, 2, 0, 5, 4, 2, 5, 2, 0, 9, 0, 5, 7, 8, 5, 4, 1, 2]"],"[12, 2, 0, 7, 8, 0, 0, 13, 1, 9, 12, 11, 17, 1, 16]"],[["[8, 3, 3, 8, 7, 5, 8, 9, 6, 0, 4, 3, 0, 4, 8, 0, 8, 5, 1, 6, 5, 7, 6, 3, 1, 8, 2, 6, 6, 8]"],"[8, 5, 2, 25, 14, 9, 1, 14, 0, 4, 1, 0]"],[["[8, 7, 4, 8, 3, 7, 4, 2, 7, 4, 3, 7, 0, 2, 4, 8, 5, 6, 5, 9, 6, 7, 9, 2, 8, 6, 1, 7, 1, 5]"],"[4, 3, 0, 4, 2, 2]"],[["[1, 3, 9, 1, 9, 1, 9, 0, 3, 6, 8, 7, 7, 3, 8, 9, 9, 9, 6, 1, 1, 6, 4, 1, 1, 7, 8, 0, 7, 9]"],"[4, 25, 10, 3, 9, 3, 5]"],[["[5, 3, 2, 3, 4, 9, 1, 9, 0, 0, 9, 1, 7, 0, 5, 3, 6, 5, 9, 3, 6, 4, 1, 3, 2, 7, 1, 7, 5, 9]"],"[2, 4, 0, 3, 6, 8, 0, 5, 11, 5, 3, 26]"],[["[3, 4, 4, 7, 2, 1, 3, 9, 1, 4, 0, 1, 7, 3, 2, 6, 6, 1, 8, 2, 8, 8, 7, 5, 3, 8, 2, 0, 9, 3]"],"[0, 3, 5, 19, 13, 28, 2, 0, 3, 3, 9]"],[["[4, 5, 8, 3, 0, 3, 3, 3, 4, 5, 5, 9, 1, 0, 9, 8, 0, 2, 0, 1, 5, 5, 9, 5, 1, 9, 3, 5, 9, 3]"],"[0, 7, 2, 7, 0, 40, 5, 16, 18]"],[["[7, 1, 7, 9, 7, 6, 6, 2, 7, 8, 7, 1, 5, 6, 6, 3, 7, 4, 0, 5, 9, 6, 0, 5, 7, 6, 3, 4, 9, 3]"],"[3, 2, 22, 0, 0, 24, 7, 11, 15, 11, 2]"]],"type":"(list -> list)","name":"039","solution":"(letII (case (case (flip 0.3) of True => randnat | False => randnat) of O => randnat | S => (λn -> (+ n#1 randnat))) (λk -> (map (λact -> (letII (letII randnat (λx -> (case randnat of O => randnat | S => (λn -> act#3)))) (λx -> (+ (case (flip 0.8) of True => randnat | False => k#3) (case 8 of O => act#2 | S => (λn -> (letII randnat (λx -> (- randnat x#1))))))))) (take (+ randnat randnat) #2))))","num_train":4},{"ios":[[["[0, 7, 3, 6, 9, 3, 3, 7, 1, 7, 0, 2, 9, 8, 0, 5, 7, 5, 3, 5, 5, 1, 0, 6, 1, 2, 6, 8, 4, 6]"],"[21, 4, 1, 0, 0, 6, 5, 0, 2, 20, 1]"],[["[7, 9, 2, 1, 0, 1, 6, 2, 2, 4, 8, 8, 1, 3, 2, 8, 6, 8, 7, 1, 8, 8, 5, 2, 4, 7, 2, 5, 2, 1]"],"[7, 11, 1, 4, 0, 0, 7, 5]"],[["[7, 4, 3, 1, 8, 0, 7, 0, 8, 7, 3, 6, 3, 5, 3, 1, 1, 3, 0, 0, 9, 8, 8, 4, 8, 1, 1, 6, 9, 6]"],"[3, 3, 0, 4, 3, 4, 2, 0, 0, 5]"],[["[6, 9, 4, 2, 8, 5, 6, 3, 3, 7, 4, 5, 1, 8, 1, 1, 5, 9, 2, 5, 5, 7, 0, 4, 7, 3, 9, 4, 5, 0]"],"[3, 6, 0, 9, 0, 1, 0, 0, 0]"],[["[0, 1, 1, 9, 6, 9, 7, 2, 5, 3, 0, 6, 5, 6, 1, 1, 8, 5, 6, 4, 1, 0, 7, 9, 1, 7, 6, 6, 3, 5]"],"[0, 0, 5, 0, 2, 1, 4, 0, 5, 0, 1, 2, 0, 0, 0, 10, 3, 0]"],[["[1, 3, 9, 8, 2, 1, 2, 3, 6, 3, 3, 3, 1, 8, 4, 6, 9, 4, 8, 2, 9, 2, 4, 6, 7, 7, 0, 8, 8, 6]"],"[0, 0, 5, 6, 0, 0, 5, 2, 7, 0, 0, 12, 0, 3, 0]"],[["[1, 0, 8, 0, 0, 5, 6, 1, 6, 7, 1, 1, 9, 2, 5, 7, 7, 3, 3, 7, 5, 4, 4, 7, 4, 3, 2, 1, 2, 5]"],"[5, 1, 0, 1, 0, 0, 5, 0]"],[["[6, 0, 2, 2, 8, 4, 2, 0, 6, 1, 7, 0, 0, 6, 4, 6, 8, 3, 0, 8, 8, 0, 4, 0, 5, 0, 8, 9, 5, 5]"],"[2, 11, 4, 1, 0, 1, 0, 22, 2, 0, 3, 9, 0]"]],"type":"(list -> list)","name":"040","solution":"(letII (+ (inc 7) randnat) (λk -> (map (λact -> (letII (case act#1 of O => randnat | S => (λn -> randnat)) (λx -> (- randnat (- x#1 randnat))))) (take k#1 #2))))","num_train":4},{"ios":[[["[5, 2, 1, 6, 4, 0, 8, 1, 9, 9, 8, 3, 0, 8, 7, 0, 6, 2, 2, 6, 1, 1, 0, 7, 3, 6, 5, 3, 9, 2]"],"[5, 2, 1, 6, 4, 0, 8, 1, 9, 9, 8, 3]"],[["[9, 2, 2, 5, 0, 8, 1, 2, 9, 9, 3, 9, 9, 6, 8, 3, 7, 7, 2, 3, 0, 7, 7, 7, 4, 2, 9, 2, 0, 5]"],"[9, 2, 2, 5, 0, 8, 1, 2, 9, 9, 3, 9]"],[["[3, 2, 4, 5, 2, 2, 1, 3, 7, 6, 2, 8, 1, 6, 7, 2, 9, 9, 4, 6, 1, 4, 4, 2, 3, 0, 3, 2, 6, 1]"],"[3, 2, 4, 5, 2, 2, 1, 3, 7, 6, 2, 8]"],[["[4, 9, 9, 5, 1, 4, 1, 2, 4, 2, 7, 3, 9, 4, 7, 9, 5, 0, 4, 3, 6, 7, 5, 1, 1, 1, 6, 9, 8, 1]"],"[4, 9, 9, 5, 1, 4, 1, 2, 4, 2, 7, 3]"],[["[5, 1, 2, 1, 7, 5, 9, 1, 3, 9, 5, 1, 0, 2, 3, 8, 1, 9, 4, 4, 3, 2, 8, 8, 8, 7, 4, 6, 2, 4]"],"[5, 1, 2, 1, 7, 5, 9, 1, 3, 9, 5, 1]"],[["[0, 0, 0, 6, 8, 1, 0, 2, 1, 9, 8, 3, 0, 6, 6, 6, 4, 7, 3, 3, 2, 7, 8, 9, 9, 5, 8, 0, 6, 0]"],"[0, 0, 0, 6, 8, 1, 0, 2, 1, 9, 8, 3]"],[["[0, 8, 3, 7, 1, 4, 5, 8, 3, 8, 1, 6, 2, 5, 1, 3, 3, 3, 6, 3, 2, 6, 0, 2, 8, 4, 5, 8, 7, 4]"],"[0, 8, 3, 7, 1, 4, 5, 8, 3, 8, 1, 6]"],[["[6, 6, 4, 4, 0, 1, 5, 6, 0, 4, 0, 2, 8, 7, 2, 2, 3, 5, 1, 8, 3, 2, 8, 8, 3, 2, 9, 6, 5, 6]"],"[6, 6, 4, 4, 0, 1, 5, 6, 0, 4, 0, 2]"]],"type":"(list -> list)","name":"041","solution":"(letII (+ 7 5) (λk -> (map (λact -> act#1) (take (case randnat of O => k#1 | S => (λn -> k#2)) #2))))","num_train":4},{"ios":[[["[2, 4, 4, 1, 9, 6, 1, 2, 1, 4, 9, 9, 7, 8, 7, 4, 0, 5, 2, 3, 0, 7, 9, 8, 3, 3, 1, 7, 2, 9]"],"[1, 1, 13, 0, 4, 3, 3, 1]"],[["[1, 4, 2, 8, 8, 1, 5, 3, 9, 4, 4, 6, 0, 8, 3, 3, 4, 7, 8, 1, 9, 8, 6, 0, 2, 7, 3, 9, 0, 9]"],"[2, 7, 0, 1]"],[["[9, 0, 5, 6, 5, 7, 1, 0, 4, 3, 7, 0, 2, 0, 6, 6, 8, 9, 1, 6, 2, 8, 3, 7, 2, 9, 7, 4, 2, 9]"],"[4, 1, 6, 4, 5, 0, 3, 3]"],[["[2, 3, 4, 4, 0, 1, 3, 4, 1, 0, 6, 4, 5, 5, 9, 2, 4, 3, 1, 0, 9, 3, 8, 6, 5, 8, 1, 3, 4, 1]"],"[1, 7, 3, 9]"],[["[6, 4, 8, 8, 8, 6, 7, 8, 1, 4, 9, 2, 1, 5, 2, 9, 1, 8, 2, 0, 4, 9, 2, 2, 9, 9, 1, 3, 9, 5]"],"[6, 2, 6, 0]"],[["[3, 4, 4, 8, 3, 7, 4, 3, 7, 9, 8, 9, 4, 9, 1, 1, 5, 5, 5, 1, 2, 1, 0, 1, 3, 3, 6, 9, 2, 7]"],"[8, 6, 0, 16]"],[["[3, 2, 9, 4, 8, 4, 8, 9, 0, 8, 4, 8, 2, 5, 8, 8, 8, 0, 0, 6, 5, 9, 6, 1, 6, 8, 1, 4, 9, 3]"],"[2, 7, 23, 6]"],[["[1, 0, 2, 6, 3, 6, 4, 4, 8, 4, 1, 8, 9, 6, 3, 2, 2, 5, 2, 3, 8, 9, 6, 4, 4, 4, 9, 3, 8, 5]"],"[1, 0, 2, 2, 4, 10, 2, 8]"]],"type":"(list -> list)","name":"042","solution":"(letII (case (flip 0.1) of True => 6 | False => 2) (λk -> (map (λact -> (letII k#2 (λx -> (case (> randnat act#2) of True => randnat | False => randnat)))) (take (case randnat of O => 4 | S => (λn -> 8)) #2))))","num_train":4},{"ios":[[["[0, 8, 9, 4, 0, 4, 9, 8, 7, 7, 3, 4, 6, 7, 6, 4, 1, 5, 0, 5, 7, 5, 6, 9, 4, 3, 2, 5, 6, 2]"],"[9, 0, 0, 10, 7, 0, 1, 3, 0]"],[["[3, 3, 4, 4, 1, 9, 0, 1, 3, 0, 0, 4, 5, 4, 9, 5, 9, 3, 1, 8, 8, 9, 7, 3, 0, 7, 7, 2, 1, 5]"],"[2, 2, 2, 5, 6, 5, 1, 3, 3]"],[["[5, 3, 0, 9, 9, 9, 4, 5, 9, 4, 9, 3, 2, 0, 6, 2, 4, 1, 8, 6, 1, 8, 2, 3, 1, 6, 5, 2, 3, 8]"],"[0, 0, 3, 0, 1, 1, 0, 0]"],[["[6, 4, 3, 6, 2, 5, 6, 3, 3, 5, 0, 1, 4, 5, 7, 8, 2, 4, 1, 7, 7, 0, 8, 7, 0, 4, 0, 4, 7, 0]"],"[8, 3, 0, 0, 1, 7, 0, 0, 0]"],[["[2, 9, 4, 7, 9, 9, 3, 6, 3, 3, 3, 0, 8, 4, 5, 7, 9, 9, 0, 7, 3, 7, 9, 2, 0, 1, 8, 0, 4, 5]"],"[3, 0]"],[["[3, 4, 7, 8, 6, 6, 7, 5, 1, 2, 5, 7, 1, 3, 0, 7, 6, 1, 4, 7, 8, 2, 5, 5, 7, 7, 0, 1, 8, 9]"],"[0, 0, 0, 0, 0, 0, 0, 1, 1]"],[["[8, 5, 8, 3, 3, 4, 6, 2, 6, 0, 5, 8, 9, 1, 2, 9, 9, 5, 7, 1, 9, 2, 6, 5, 3, 7, 1, 0, 4, 4]"],"[4, 0, 7, 6, 0, 2, 1, 2, 3]"],[["[1, 2, 1, 9, 3, 7, 0, 8, 6, 0, 1, 5, 7, 4, 8, 0, 7, 3, 0, 6, 2, 8, 6, 8, 2, 9, 6, 6, 4, 8]"],"[0, 0, 1, 0, 2, 2, 7, 5, 0]"]],"type":"(list -> list)","name":"043","solution":"(letII (letII 8 (λx -> (inc x#1))) (λk -> (map (λact -> (- (inc randnat) (case (> randnat act#1) of True => act#1 | False => randnat))) (take (case randnat of O => randnat | S => (λn -> k#2)) #2))))","num_train":4},{"ios":[[["[8, 3, 3, 1, 6, 2, 3, 8, 3, 4, 5, 4, 7, 2, 9, 1, 2, 2, 6, 9, 6, 0, 2, 0, 3, 7, 5, 1, 3, 5]"],"[8, 3, 3, 1, 6]"],[["[0, 0, 3, 9, 5, 3, 6, 5, 7, 9, 7, 6, 2, 3, 7, 4, 7, 7, 5, 1, 2, 3, 6, 3, 8, 6, 3, 7, 7, 1]"],"[0, 0, 3, 9, 5, 3, 6, 5, 7, 9, 7, 6]"],[["[9, 4, 5, 4, 8, 7, 7, 3, 5, 0, 5, 6, 8, 1, 1, 9, 4, 2, 9, 9, 1, 8, 5, 2, 0, 7, 3, 1, 6, 5]"],"[9, 4, 5, 4, 8, 7, 7, 3]"],[["[9, 4, 1, 0, 6, 8, 0, 1, 8, 3, 7, 4, 8, 7, 6, 1, 0, 1, 3, 8, 8, 6, 5, 7, 7, 9, 9, 1, 0, 4]"],"[9, 4, 1, 0]"],[["[2, 2, 4, 4, 2, 9, 2, 2, 8, 8, 8, 1, 2, 6, 4, 2, 5, 9, 9, 3, 8, 8, 2, 9, 6, 0, 0, 6, 4, 4]"],"[2, 2, 4, 4]"],[["[4, 2, 7, 1, 3, 2, 1, 0, 4, 1, 3, 0, 4, 2, 7, 6, 3, 8, 4, 8, 0, 0, 4, 2, 8, 1, 9, 1, 0, 7]"],"[4, 2, 7, 1]"],[["[3, 1, 3, 1, 0, 6, 9, 1, 2, 6, 3, 3, 2, 1, 1, 5, 7, 7, 1, 1, 2, 2, 8, 2, 2, 4, 0, 2, 6, 7]"],"[3, 1, 3, 1, 0, 6, 9, 1, 2]"],[["[9, 7, 6, 2, 6, 3, 1, 9, 4, 3, 6, 8, 1, 3, 0, 7, 7, 9, 9, 7, 1, 9, 3, 1, 2, 3, 1, 7, 3, 9]"],"[9, 7, 6, 2, 6, 3, 1, 9, 4, 3, 6, 8, 1]"]],"type":"(list -> list)","name":"044","solution":"(letII (+ 4 randnat) (λk -> (map (λact -> (case k#2 of O => randnat | S => (λn -> act#2))) (take k#1 #2))))","num_train":4},{"ios":[[["[5, 9, 8, 7, 4, 5, 8, 9, 8, 6, 7, 1, 2, 7, 4, 0, 0, 2, 5, 9, 3, 0, 5, 5, 8, 8, 9, 8, 8, 6]"],"[8, 9, 11, 16, 8, 9]"],[["[7, 5, 6, 9, 8, 6, 2, 9, 6, 5, 9, 4, 4, 9, 6, 7, 1, 6, 6, 8, 4, 4, 7, 6, 6, 3, 9, 8, 0, 6]"],"[8, 6, 8, 13, 10, 15, 2, 30, 8, 12, 11, 9, 4, 9]"],[["[8, 2, 6, 0, 5, 9, 0, 5, 6, 8, 7, 0, 7, 2, 7, 2, 1, 2, 9, 7, 9, 9, 4, 6, 1, 7, 6, 0, 3, 3]"],"[9, 5, 8, 0, 14]"],[["[7, 0, 5, 2, 3, 1, 3, 7, 6, 4, 9, 4, 0, 6, 8, 7, 7, 3, 6, 5, 5, 5, 6, 3, 2, 1, 0, 9, 0, 8]"],"[11, 2, 5, 3, 6, 8, 5, 10]"],[["[7, 4, 4, 4, 8, 7, 5, 8, 4, 1, 3, 4, 7, 0, 7, 0, 6, 9, 3, 8, 7, 1, 7, 5, 3, 8, 8, 2, 7, 1]"],"[9, 6, 4]"],[["[8, 3, 0, 0, 7, 4, 2, 0, 1, 4, 7, 1, 7, 3, 2, 2, 8, 3, 6, 2, 7, 8, 3, 0, 7, 2, 8, 0, 3, 9]"],"[10, 8, 10, 4, 9, 4, 9, 6, 1, 12, 12]"],[["[1, 5, 2, 1, 3, 1, 5, 1, 4, 7, 1, 4, 5, 4, 8, 8, 2, 2, 7, 8, 9, 4, 4, 4, 0, 0, 8, 8, 1, 2]"],"[9, 6, 2, 2]"],[["[5, 8, 3, 8, 0, 0, 7, 4, 8, 1, 2, 3, 9, 3, 1, 3, 9, 5, 8, 8, 2, 1, 4, 7, 3, 1, 6, 5, 6, 0]"],"[13, 14, 11, 9, 14]"]],"type":"(list -> list)","name":"045","solution":"(letII (- (- randnat 1) (case (flip 0.2) of True => 5 | False => 6)) (λk -> (map (λact -> (+ randnat act#1)) (take (letII (case randnat of O => randnat | S => (λn -> n#1)) (λx -> (+ (- (+ randnat randnat) x#1) (case (flip 0.5) of True => k#2 | False => x#1)))) #2))))","num_train":4},{"ios":[[["[7, 6, 0, 8, 4, 2, 6, 7, 9, 6, 6, 5, 1, 0, 0, 1, 5, 6, 3, 2, 7, 0, 2, 7, 9, 0, 8, 9, 2, 7]"],"[7, 6, 0, 8, 4, 2, 6, 7]"],[["[8, 9, 3, 2, 6, 1, 9, 4, 0, 7, 3, 8, 4, 3, 9, 5, 5, 5, 4, 7, 0, 0, 8, 8, 2, 0, 0, 9, 0, 3]"],"[8, 9, 3, 2, 6, 1]"],[["[9, 8, 3, 0, 4, 3, 5, 6, 4, 8, 7, 3, 5, 8, 5, 6, 1, 7, 1, 1, 8, 1, 5, 6, 7, 6, 2, 3, 6, 7]"],"[9, 8, 3, 0, 4]"],[["[9, 7, 7, 3, 6, 2, 9, 5, 8, 9, 5, 7, 1, 2, 0, 9, 5, 3, 4, 7, 9, 5, 1, 8, 6, 0, 0, 1, 9, 2]"],"[9, 7]"],[["[3, 4, 3, 3, 3, 7, 2, 8, 5, 6, 8, 4, 8, 2, 5, 5, 3, 4, 3, 0, 8, 4, 7, 9, 3, 7, 2, 0, 3, 4]"],"[3, 4, 3, 3, 3, 7, 2, 8, 5, 6, 8, 4, 8]"],[["[9, 8, 1, 4, 7, 9, 8, 9, 2, 9, 9, 5, 1, 7, 4, 0, 8, 3, 3, 1, 5, 8, 3, 6, 3, 5, 6, 6, 1, 2]"],"[9, 8, 1]"],[["[4, 0, 6, 2, 1, 6, 1, 5, 2, 0, 9, 2, 1, 3, 3, 3, 0, 0, 7, 2, 3, 3, 0, 7, 6, 0, 8, 9, 3, 9]"],"[4, 0, 6, 2, 1, 6, 1, 5, 2, 0, 9, 2, 1, 3]"],[["[7, 2, 2, 8, 0, 1, 3, 5, 2, 4, 6, 7, 3, 6, 0, 8, 2, 1, 9, 1, 4, 8, 5, 6, 5, 8, 9, 9, 5, 0]"],"[7, 2, 2, 8, 0, 1, 3, 5, 2, 4, 6]"]],"type":"(list -> list)","name":"046","solution":"(letII (case (flip 0.7) of True => (inc randnat) | False => (letII 2 (λx -> (+ x#1 7)))) (λk -> (map (λact -> act#1) (take (letII k#1 (λx -> (+ randnat k#2))) #2))))","num_train":4},{"ios":[[["[2, 1, 2, 5, 1, 1, 1, 0, 9, 5, 5, 5, 6, 7, 1, 5, 5, 5, 9, 9, 5, 0, 5, 0, 8, 4, 3, 6, 7, 4]"],"[3, 2, 3, 6, 2, 2]"],[["[1, 5, 4, 0, 8, 0, 2, 7, 5, 8, 6, 3, 9, 3, 2, 8, 4, 6, 1, 8, 9, 0, 7, 4, 0, 6, 8, 7, 5, 6]"],"[2, 6, 5, 1, 9, 1]"],[["[0, 0, 0, 2, 1, 3, 1, 2, 9, 1, 6, 6, 8, 2, 7, 3, 9, 3, 7, 5, 3, 0, 7, 9, 7, 5, 3, 9, 4, 7]"],"[1, 1, 1, 3, 2, 4]"],[["[0, 0, 0, 2, 4, 3, 6, 2, 3, 5, 4, 5, 2, 0, 9, 9, 7, 5, 9, 2, 5, 1, 8, 5, 3, 7, 7, 6, 8, 3]"],"[1, 1, 1, 3, 5, 4]"],[["[7, 2, 6, 4, 5, 8, 4, 8, 3, 4, 2, 1, 9, 7, 5, 2, 1, 2, 2, 0, 6, 1, 2, 4, 8, 0, 2, 8, 4, 9]"],"[8, 3, 7, 5, 6, 9]"],[["[7, 9, 3, 8, 9, 7, 0, 7, 3, 3, 9, 3, 5, 6, 3, 4, 3, 1, 5, 7, 9, 5, 1, 1, 6, 0, 5, 4, 4, 2]"],"[8, 10, 4, 9, 10, 8]"],[["[0, 0, 9, 3, 7, 1, 6, 4, 4, 8, 5, 9, 0, 1, 4, 9, 5, 1, 9, 7, 2, 1, 9, 8, 1, 6, 5, 5, 1, 0]"],"[1, 1, 10, 4, 8, 2]"],[["[4, 1, 5, 0, 8, 4, 0, 6, 6, 3, 6, 9, 4, 4, 0, 2, 6, 2, 8, 2, 4, 8, 2, 2, 1, 1, 5, 2, 2, 2]"],"[5, 2, 6, 1, 9, 5]"]],"type":"(list -> list)","name":"047","solution":"(letII 6 (λk -> (map (λact -> (inc act#1)) (take k#1 #2))))","num_train":4},{"ios":[[["[7, 3, 1, 8, 2, 8, 2, 8, 3, 8, 8, 2, 5, 1, 2, 3, 3, 1, 8, 8, 6, 8, 5, 9, 3, 4, 3, 0, 6, 4]"],"[5, 6, 0, 6]"],[["[5, 6, 4, 7, 3, 5, 1, 3, 0, 2, 3, 1, 9, 0, 0, 8, 8, 9, 5, 1, 5, 0, 6, 9, 2, 7, 4, 4, 0, 9]"],"[5, 1, 2, 8]"],[["[5, 2, 2, 3, 3, 5, 4, 2, 3, 9, 7, 0, 1, 2, 7, 0, 4, 6, 1, 2, 7, 7, 0, 4, 3, 1, 1, 1, 7, 0]"],"[7, 12, 0, 3]"],[["[2, 5, 8, 6, 7, 1, 0, 2, 6, 7, 9, 5, 9, 7, 7, 2, 6, 2, 1, 6, 3, 9, 7, 4, 1, 2, 0, 0, 4, 3]"],"[1, 7, 13, 2]"],[["[7, 5, 4, 1, 6, 9, 9, 3, 1, 4, 5, 6, 4, 3, 5, 0, 0, 4, 2, 0, 0, 0, 6, 6, 5, 1, 6, 7, 2, 2]"],"[3, 0, 0, 0]"],[["[6, 4, 2, 2, 8, 2, 6, 8, 5, 2, 3, 0, 8, 4, 0, 9, 1, 9, 2, 0, 5, 1, 3, 6, 7, 2, 0, 4, 2, 0]"],"[5, 12, 2, 2]"],[["[1, 4, 1, 3, 8, 0, 0, 5, 0, 9, 2, 2, 6, 7, 8, 3, 8, 0, 7, 7, 7, 1, 4, 2, 3, 4, 0, 7, 0, 3]"],"[0, 0, 1, 8]"],[["[7, 8, 0, 7, 1, 0, 3, 3, 2, 9, 1, 5, 9, 6, 4, 2, 5, 6, 9, 2, 0, 0, 7, 3, 9, 8, 2, 5, 7, 0]"],"[8, 6, 2, 2]"]],"type":"(list -> list)","name":"048","solution":"(letII (inc randnat) (λk -> (map (λact -> (+ (- act#1 randnat) (letII randnat (λx -> (- randnat randnat))))) (take (case (flip 0.4) of True => k#1 | False => 4) #2))))","num_train":4},{"ios":[[["[1, 1, 4, 0, 0, 9, 4, 6, 4, 1, 3, 0, 2, 0, 6, 5, 7, 6, 1, 3, 3, 0, 8, 6, 3, 8, 2, 7, 8, 8]"],"[11, 11, 11, 0]"],[["[0, 9, 6, 2, 4, 4, 9, 6, 7, 8, 9, 9, 8, 6, 9, 0, 4, 4, 1, 1, 5, 2, 2, 5, 7, 3, 4, 8, 9, 2]"],"[11, 2, 0, 11]"],[["[4, 8, 1, 6, 7, 3, 4, 1, 6, 2, 7, 5, 1, 2, 1, 8, 7, 8, 7, 7, 5, 2, 8, 7, 9, 4, 8, 4, 6, 9]"],"[0, 11, 11, 0]"],[["[3, 9, 4, 4, 1, 1, 5, 5, 0, 8, 8, 5, 8, 7, 7, 3, 1, 8, 9, 2, 8, 3, 2, 4, 6, 3, 1, 7, 0, 7]"],"[0, 0, 1, 19]"],[["[5, 1, 8, 7, 5, 7, 4, 0, 9, 4, 1, 7, 6, 7, 3, 7, 1, 3, 5, 4, 9, 9, 1, 1, 2, 6, 1, 2, 9, 8]"],"[1, 0, 0, 0]"],[["[1, 2, 7, 8, 5, 9, 8, 7, 4, 4, 5, 5, 5, 4, 9, 5, 2, 7, 7, 6, 7, 2, 3, 2, 8, 2, 2, 6, 3, 5]"],"[10, 10, 5, 2]"],[["[9, 4, 5, 8, 3, 4, 2, 2, 1, 6, 7, 4, 4, 8, 1, 1, 9, 6, 1, 3, 0, 6, 7, 3, 0, 1, 9, 0, 0, 1]"],"[12, 3, 0, 2]"],[["[3, 9, 5, 6, 0, 4, 0, 0, 5, 4, 6, 4, 8, 5, 8, 5, 2, 6, 0, 7, 3, 7, 8, 1, 0, 8, 4, 6, 4, 1]"],"[1, 0, 2, 2]"]],"type":"(list -> list)","name":"049","solution":"(letII (case (flip 0.5) of True => 1 | False => randnat) (λk -> (map (λact -> (case (letII act#1 (λx -> (- randnat x#1))) of O => (- (case (flip 0.2) of True => (case k#2 of O => randnat | S => (λn -> act#2)) | False => 2) randnat) | S => (λn -> (letII act#2 (λx -> (+ k#4 9)))))) (take (case 5 of O => randnat | S => (λn -> n#1)) #2))))","num_train":4},{"ios":[[["[4, 1, 7, 5, 7, 7, 2, 6, 6, 3, 1, 4, 5, 0, 8, 2, 7, 9, 4, 8, 5, 1, 6, 9, 4, 3, 4, 3, 9, 2]"],"[4, 1, 7, 5, 7, 7, 2]"],[["[3, 9, 9, 1, 5, 1, 8, 5, 7, 4, 1, 9, 1, 5, 8, 1, 4, 9, 7, 9, 8, 6, 8, 9, 1, 8, 0, 1, 0, 8]"],"[3, 9, 9, 1, 5, 1, 8]"],[["[0, 8, 4, 9, 8, 3, 4, 9, 9, 5, 2, 9, 8, 7, 0, 7, 9, 0, 0, 9, 1, 1, 3, 8, 5, 0, 7, 2, 3, 5]"],"[0, 8, 4, 9, 8, 3, 4]"],[["[4, 3, 5, 4, 6, 5, 4, 8, 2, 3, 6, 3, 3, 2, 0, 3, 7, 0, 3, 7, 9, 7, 8, 6, 9, 3, 6, 0, 1, 9]"],"[4, 3, 5, 4, 6, 5]"],[["[9, 7, 0, 5, 5, 8, 7, 1, 0, 8, 6, 7, 2, 6, 5, 3, 6, 6, 4, 0, 7, 8, 8, 8, 0, 7, 4, 1, 8, 1]"],"[9, 7, 0, 5, 5, 8, 7]"],[["[3, 4, 6, 7, 1, 7, 7, 0, 3, 0, 8, 1, 9, 7, 6, 2, 1, 1, 8, 0, 9, 0, 5, 8, 4, 2, 0, 4, 4, 4]"],"[3, 4, 6, 7, 1, 7, 7, 0, 3, 0, 8, 1, 9, 7, 6, 2, 1, 1, 8, 0, 9, 0, 5, 8, 4, 2, 0, 4, 4, 4]"],[["[2, 5, 3, 3, 2, 9, 3, 3, 8, 6, 3, 9, 4, 9, 7, 3, 8, 9, 1, 9, 0, 7, 8, 4, 8, 3, 8, 2, 9, 8]"],"[2, 5, 3, 3, 2, 9, 3]"],[["[2, 0, 9, 7, 5, 5, 9, 9, 1, 3, 4, 4, 3, 9, 8, 0, 9, 8, 9, 0, 4, 0, 8, 2, 2, 7, 0, 1, 6, 3]"],"[2, 0, 9, 7, 5, 5, 9, 9, 1, 3]"]],"type":"(list -> list)","name":"050","solution":"(letII (case randnat of O => (+ 3 (+ 3 (+ randnat 5))) | S => (λn -> (+ 3 randnat))) (λk -> (map (λact -> act#1) (take (case randnat of O => k#1 | S => (λn -> 7)) #2))))","num_train":4},{"ios":[[["[1, 0, 9, 5, 6, 7, 0, 6, 1, 7, 2, 0, 2, 6, 2, 1, 4, 0, 0, 3, 5, 4, 4, 9, 0, 4, 1, 1, 3, 2]"],"[1, 0, 9, 5, 6, 7, 0, 6, 1, 7, 2, 0, 2]"],[["[5, 1, 8, 2, 9, 1, 8, 6, 7, 1, 9, 5, 3, 3, 0, 8, 4, 4, 7, 6, 8, 0, 4, 1, 4, 8, 3, 1, 3, 5]"],"[5, 1, 8, 2, 9, 1, 8, 6, 7, 1, 9, 5, 3]"],[["[9, 6, 8, 5, 2, 3, 6, 6, 9, 5, 0, 9, 6, 9, 0, 3, 3, 1, 3, 0, 8, 1, 0, 3, 2, 0, 4, 2, 7, 8]"],"[9, 6, 8, 5, 2, 3, 6, 6, 9]"],[["[6, 8, 2, 3, 2, 1, 7, 1, 0, 8, 7, 8, 3, 0, 6, 8, 7, 9, 3, 1, 5, 9, 0, 0, 2, 8, 8, 8, 9, 9]"],"[6, 8, 2, 3, 2, 1, 7, 1, 0, 8, 7, 8, 3, 0, 6, 8, 7, 9]"],[["[4, 9, 3, 4, 0, 5, 1, 5, 6, 6, 3, 6, 0, 0, 1, 2, 4, 9, 1, 9, 9, 8, 5, 0, 6, 6, 9, 7, 9, 7]"],"[4, 9, 3, 4, 0, 5, 1, 5, 6, 6, 3, 6, 0, 0, 1, 2, 4, 9]"],[["[6, 8, 0, 7, 9, 6, 2, 5, 7, 4, 2, 0, 3, 3, 9, 3, 1, 5, 2, 9, 4, 0, 2, 3, 3, 6, 6, 2, 8, 5]"],"[6, 8, 0, 7, 9, 6, 2, 5, 7, 4, 2, 0, 3, 3, 9, 3, 1, 5, 2, 9, 4, 0, 2, 3, 3, 6, 6, 2, 8, 5]"],[["[6, 7, 7, 4, 2, 2, 4, 4, 6, 0, 4, 0, 9, 5, 3, 9, 3, 3, 9, 5, 6, 0, 9, 6, 6, 8, 2, 9, 6, 6]"],"[6, 7, 7, 4, 2, 2, 4, 4, 6, 0, 4, 0, 9, 5, 3, 9, 3, 3, 9, 5, 6, 0, 9, 6, 6, 8, 2, 9, 6]"],[["[2, 4, 9, 5, 7, 8, 4, 8, 6, 1, 3, 0, 0, 2, 7, 5, 5, 8, 0, 4, 2, 5, 7, 8, 6, 0, 6, 3, 6, 1]"],"[2, 4, 9, 5, 7, 8, 4, 8]"]],"type":"(list -> list)","name":"051","solution":"(letII (letII (+ randnat randnat) (λx -> (case randnat of O => randnat | S => (λn -> (+ 6 x#2))))) (λk -> (map (λact -> act#1) (take (+ randnat k#1) #2))))","num_train":4},{"ios":[[["[7, 2, 9, 7, 2, 2, 5, 5, 5, 7, 1, 2, 9, 9, 2, 4, 7, 6, 6, 3, 8, 7, 6, 6, 7, 8, 7, 4, 6, 7]"],"[7, 3, 13, 9, 12, 3, 6, 5]"],[["[5, 2, 9, 6, 5, 6, 7, 5, 3, 7, 8, 8, 0, 4, 8, 8, 9, 2, 3, 0, 0, 1, 5, 0, 7, 2, 8, 4, 2, 6]"],"[10, 9, 9, 13, 7, 12, 14, 6]"],[["[6, 9, 9, 3, 8, 3, 8, 7, 0, 7, 1, 3, 2, 7, 2, 2, 1, 8, 6, 8, 4, 1, 3, 8, 9, 1, 5, 5, 3, 1]"],"[8, 11, 21, 3, 9, 10, 9, 12]"],[["[0, 1, 4, 3, 6, 4, 9, 0, 5, 0, 4, 5, 7, 8, 9, 0, 7, 4, 0, 2, 6, 4, 8, 6, 8, 7, 8, 9, 8, 7]"],"[4, 1, 4, 3, 12, 7, 12, 1]"],[["[6, 8, 3, 9, 7, 0, 7, 4, 1, 0, 2, 3, 9, 9, 8, 5, 8, 7, 9, 6, 4, 0, 6, 7, 5, 0, 2, 2, 3, 0]"],"[12, 9, 7, 11, 10, 5, 7, 4]"],[["[8, 4, 3, 7, 8, 7, 9, 8, 3, 5, 7, 0, 7, 8, 2, 4, 6, 7, 3, 7, 9, 3, 4, 6, 4, 9, 2, 1, 5, 9]"],"[12, 4, 6, 7, 11, 7, 9, 13]"],[["[7, 5, 9, 8, 4, 6, 4, 5, 9, 3, 9, 8, 7, 5, 2, 0, 9, 6, 9, 7, 3, 0, 9, 0, 3, 0, 7, 2, 9, 1]"],"[10, 12, 12, 9, 4, 8, 10, 8]"],[["[4, 9, 8, 1, 1, 7, 6, 5, 7, 3, 1, 2, 1, 7, 5, 3, 7, 3, 2, 5, 5, 2, 6, 0, 9, 5, 2, 1, 0, 0]"],"[9, 10, 13, 1, 1, 24, 9, 12]"]],"type":"(list -> list)","name":"052","solution":"(letII 8 (λk -> (map (λact -> (letII (inc act#1) (λx -> (+ act#2 randnat)))) (take k#1 #2))))","num_train":4},{"ios":[[["[5, 1, 8, 3, 7, 3, 4, 9, 4, 0, 3, 8, 5, 7, 9, 8, 8, 1, 7, 6, 4, 3, 6, 7, 9, 6, 4, 7, 6, 8]"],"[5, 15, 9, 2, 0, 8, 6, 9, 6, 4, 8, 8, 1, 5, 1, 0, 0, 1]"],[["[0, 5, 1, 7, 4, 0, 6, 9, 0, 1, 2, 8, 6, 8, 3, 8, 7, 1, 3, 8, 5, 7, 6, 6, 9, 0, 1, 2, 6, 3]"],"[1, 0, 6, 7, 6, 0, 8, 9, 0, 7, 2, 6, 6, 0, 16, 8, 11, 1, 2, 2]"],[["[1, 8, 5, 0, 5, 2, 5, 9, 5, 0, 5, 4, 1, 4, 2, 3, 0, 1, 2, 7, 4, 8, 7, 2, 6, 9, 2, 7, 1, 9]"],"[11, 0, 9, 0, 4, 3, 2, 7, 20, 11, 0, 6, 5, 4, 2, 4, 1]"],[["[2, 1, 0, 9, 4, 7, 2, 9, 0, 6, 7, 2, 9, 9, 6, 2, 2, 7, 4, 5, 3, 5, 6, 0, 9, 8, 4, 7, 2, 4]"],"[0, 2, 10, 5, 2, 7, 6, 9]"],[["[9, 4, 6, 8, 7, 8, 5, 3, 3, 8, 5, 3, 7, 5, 3, 3, 4, 6, 2, 9, 7, 9, 3, 8, 6, 3, 8, 5, 1, 0]"],"[9, 4]"],[["[3, 4, 7, 0, 1, 2, 5, 6, 5, 4, 9, 1, 6, 2, 4, 6, 1, 3, 1, 8, 2, 0, 0, 9, 1, 8, 0, 5, 7, 6]"],"[3, 4, 6, 5, 1, 9, 9, 6, 13, 17, 9, 1, 8, 1, 2, 0, 1, 5, 6, 1, 6, 2, 2]"],[["[7, 3, 1, 8, 6, 4, 6, 8, 8, 8, 1, 8, 2, 8, 8, 4, 6, 7, 0, 3, 8, 2, 1, 5, 5, 6, 1, 9, 3, 2]"],"[3, 9, 0, 8, 0, 4, 12, 12, 4, 8, 1, 5, 2, 8, 2]"],[["[1, 0, 4, 2, 1, 7, 3, 3, 6, 2, 6, 9, 3, 1, 8, 7, 6, 6, 1, 8, 7, 2, 1, 6, 1, 9, 4, 2, 9, 5]"],"[1, 2, 0, 0, 4, 0, 3, 2, 5, 9, 10, 0, 9, 1, 15, 1, 3, 6, 1, 1, 2, 2, 7, 1, 5, 4]"]],"type":"(list -> list)","name":"053","solution":"(letII 5 (λk -> (map (λact -> (case randnat of O => act#1 | S => (λn -> randnat))) (take (+ (- (+ (letII k#1 (λx -> (case randnat of O => randnat | S => (λn -> randnat)))) randnat) (case k#1 of O => (+ k#1 randnat) | S => (λn -> n#1))) (+ 2 randnat)) #2))))","num_train":4},{"ios":[[["[4, 1, 9, 4, 7, 2, 2, 2, 9, 0, 1, 3, 8, 4, 8, 2, 1, 9, 0, 0, 7, 6, 9, 1, 0, 3, 8, 7, 6, 6]"],"[4, 3, 20, 10, 8]"],[["[5, 2, 8, 6, 9, 4, 5, 3, 1, 6, 3, 8, 9, 9, 8, 2, 8, 8, 2, 5, 0, 5, 2, 5, 7, 2, 0, 6, 9, 8]"],"[0, 26, 12, 7, 0]"],[["[7, 4, 1, 9, 6, 8, 0, 1, 4, 8, 7, 8, 8, 1, 1, 5, 3, 7, 1, 0, 9, 4, 5, 9, 3, 2, 7, 0, 3, 4]"],"[14, 6, 1, 12, 9]"],[["[5, 0, 0, 3, 0, 4, 9, 0, 4, 8, 8, 0, 6, 0, 9, 5, 1, 6, 0, 3, 3, 8, 4, 3, 4, 5, 8, 8, 5, 7]"],"[8, 1, 3, 7, 2]"],[["[5, 6, 7, 2, 3, 2, 2, 2, 3, 5, 3, 5, 3, 6, 6, 4, 3, 0, 9, 2, 8, 2, 9, 0, 5, 4, 4, 8, 8, 8]"],"[9, 6, 7, 0, 10]"],[["[2, 4, 2, 8, 8, 1, 5, 1, 7, 8, 4, 5, 4, 6, 0, 6, 2, 4, 5, 2, 6, 8, 0, 9, 7, 0, 4, 3, 7, 5]"],"[2, 12, 4, 9, 20]"],[["[7, 3, 6, 2, 1, 8, 0, 6, 6, 2, 9, 0, 8, 3, 6, 6, 4, 1, 5, 2, 9, 9, 4, 8, 3, 9, 8, 4, 1, 3]"],"[18, 3, 7, 4, 4]"],[["[2, 3, 3, 6, 1, 4, 2, 9, 0, 7, 5, 8, 1, 9, 1, 3, 4, 7, 7, 5, 7, 6, 4, 7, 5, 9, 6, 2, 6, 2]"],"[12, 3, 13, 11, 0]"]],"type":"(list -> list)","name":"054","solution":"(letII (case 9 of O => (case 1 of O => 9 | S => (λn -> randnat)) | S => (λn -> n#1)) (λk -> (map (λact -> (case (flip 0.2) of True => (- act#1 act#1) | False => (letII (case (flip 0.2) of True => act#1 | False => randnat) (λx -> (+ act#2 randnat))))) (take (case (iseven k#1) of True => 5 | False => randnat) #2))))","num_train":4},{"ios":[[["[2, 3, 1, 5, 1, 0, 2, 6, 1, 6, 9, 6, 3, 3, 0, 4, 4, 7, 7, 5, 0, 9, 4, 6, 6, 4, 3, 3, 3, 8]"],"[0, 11, 4, 5, 4, 14, 3, 0, 5]"],[["[7, 1, 7, 7, 5, 5, 0, 6, 8, 5, 8, 3, 2, 3, 8, 9, 5, 4, 6, 5, 0, 1, 2, 5, 5, 1, 9, 3, 6, 2]"],"[0, 1, 0, 0, 6, 0, 7, 4, 0]"],[["[3, 1, 9, 6, 6, 8, 0, 0, 1, 3, 3, 3, 1, 2, 9, 2, 4, 0, 0, 5, 7, 2, 8, 6, 7, 8, 7, 0, 3, 5]"],"[10, 24, 0, 4, 2, 8, 16, 15, 16]"],[["[1, 6, 9, 3, 4, 6, 9, 9, 8, 9, 2, 3, 9, 8, 9, 9, 5, 4, 1, 0, 2, 4, 0, 8, 5, 3, 9, 5, 4, 2]"],"[19, 13, 0, 0, 10, 7, 23, 0, 0]"],[["[2, 3, 0, 6, 0, 6, 4, 6, 1, 9, 9, 4, 2, 6, 6, 7, 7, 6, 4, 7, 5, 7, 8, 8, 7, 2, 2, 7, 7, 0]"],"[18, 0, 11, 9, 11, 0, 0, 0, 10]"],[["[0, 7, 5, 6, 7, 4, 5, 7, 3, 9, 6, 9, 6, 4, 0, 5, 7, 6, 7, 4, 6, 0, 2, 4, 9, 9, 9, 6, 1, 8]"],"[7, 1, 2, 0, 7, 0, 11, 0, 6]"],[["[1, 4, 0, 8, 1, 2, 5, 8, 8, 8, 8, 0, 8, 1, 6, 7, 6, 2, 2, 7, 7, 7, 7, 1, 6, 7, 0, 3, 8, 5]"],"[7, 9, 3, 1, 1, 4, 0, 0, 0]"],[["[5, 3, 1, 2, 7, 7, 6, 0, 2, 7, 8, 3, 4, 4, 1, 6, 2, 0, 0, 0, 4, 1, 5, 2, 1, 4, 2, 0, 8, 2]"],"[0, 5, 6, 4, 7, 10, 0, 4, 1]"]],"type":"(list -> list)","name":"055","solution":"(letII (letII (letII 7 (λx -> (inc x#1))) (λx -> (case (== randnat x#1) of True => randnat | False => x#1))) (λk -> (map (λact -> (letII (+ randnat randnat) (λx -> (- (letII randnat (λx -> (+ x#1 randnat))) act#2)))) (take 9 #2))))","num_train":4},{"ios":[[["[2, 1, 7, 9, 1, 0, 0, 8, 1, 1, 4, 2, 1, 8, 9, 5, 6, 0, 6, 1, 5, 4, 8, 5, 4, 8, 3, 3, 1, 7]"],"[10, 0, 0, 10, 4, 1, 7, 31, 6, 1, 0, 0, 3, 7, 17, 2, 5, 3, 17]"],[["[3, 5, 2, 7, 5, 6, 4, 8, 9, 6, 3, 1, 4, 1, 0, 5, 4, 3, 9, 7, 8, 9, 0, 5, 7, 1, 5, 7, 6, 7]"],"[5, 6, 2, 1, 11, 4, 0, 5, 0, 0, 5, 4, 5, 5, 7, 0, 1, 0, 2]"],[["[0, 8, 8, 6, 7, 7, 8, 6, 7, 9, 0, 6, 2, 6, 1, 0, 7, 4, 8, 4, 6, 5, 5, 0, 4, 1, 2, 9, 8, 8]"],"[4, 5, 0, 1, 5, 7, 5, 8, 5, 13, 4, 0, 2, 7, 0, 3, 10, 1, 10]"],[["[2, 6, 6, 9, 7, 5, 9, 0, 4, 8, 7, 2, 4, 9, 2, 0, 1, 0, 3, 9, 7, 1, 5, 5, 1, 4, 7, 5, 0, 4]"],"[1, 10, 3, 14, 0, 0, 9, 4, 1, 2, 0, 7, 19, 0, 0, 1, 4, 0, 9]"],[["[8, 9, 4, 9, 6, 6, 2, 0, 6, 1, 7, 3, 0, 6, 8, 9, 6, 2, 8, 4, 2, 3, 4, 1, 2, 8, 9, 3, 4, 4]"],"[3, 9, 4, 0, 5, 6, 0, 2, 6, 1, 6, 5, 3, 3, 6, 1, 0, 13, 1]"],[["[7, 6, 2, 7, 8, 6, 9, 3, 5, 8, 3, 8, 7, 4, 9, 5, 3, 1, 6, 4, 0, 0, 1, 9, 4, 4, 6, 7, 5, 9]"],"[2, 9, 4, 9, 5, 1, 1, 0, 12, 1, 2, 7, 2, 0, 8, 1, 0, 6, 9]"],[["[3, 0, 2, 0, 5, 9, 1, 5, 9, 3, 4, 0, 8, 2, 7, 3, 4, 9, 4, 0, 5, 9, 7, 8, 1, 2, 9, 6, 2, 9]"],"[4, 0, 15, 8, 1, 0, 8, 0, 7, 2, 0, 3, 0, 9, 0, 4, 1, 8, 2]"],[["[4, 4, 0, 3, 0, 5, 1, 8, 1, 4, 1, 2, 9, 5, 5, 7, 4, 4, 5, 6, 1, 5, 6, 9, 8, 6, 8, 1, 0, 4]"],"[8, 0, 9, 4, 1, 3, 25, 3, 6, 2, 0, 0, 7, 6, 2, 8, 2, 3, 5]"]],"type":"(list -> list)","name":"056","solution":"(letII (inc (letII 9 (λx -> (+ x#1 x#1)))) (λk -> (map (λact -> (letII randnat (λx -> (case (case (> k#3 randnat) of True => randnat | False => (inc act#2)) of O => randnat | S => (λn -> randnat))))) (take (case (== k#1 randnat) of True => k#1 | False => k#1) #2))))","num_train":4},{"ios":[[["[8, 7, 7, 6, 7, 5, 8, 0, 5, 5, 3, 8, 8, 8, 4, 2, 4, 8, 7, 1, 2, 3, 6, 6, 9, 4, 8, 0, 5, 4]"],"[12, 11, 11, 10, 11, 9, 12, 4]"],[["[1, 8, 9, 1, 5, 2, 9, 5, 3, 3, 4, 4, 3, 7, 6, 3, 6, 0, 8, 7, 0, 0, 1, 9, 4, 2, 0, 6, 7, 7]"],"[4, 11, 11, 4, 8, 5]"],[["[2, 6, 8, 7, 9, 2, 5, 0, 5, 0, 5, 3, 0, 9, 8, 8, 5, 0, 5, 1, 9, 5, 9, 6, 9, 2, 1, 3, 4, 6]"],"[4, 8, 11, 10, 12, 5]"],[["[7, 1, 6, 1, 2, 2, 6, 0, 1, 4, 8, 1, 2, 5, 6, 0, 1, 0, 0, 7, 3, 8, 6, 6, 5, 2, 2, 0, 7, 5]"],"[12, 6, 11, 6, 7, 7, 11, 5, 6, 9]"],[["[5, 3, 8, 7, 7, 2, 1, 0, 8, 3, 1, 5, 0, 1, 6, 0, 4, 9, 3, 6, 1, 9, 2, 6, 6, 4, 6, 6, 3, 6]"],"[10, 8, 13, 9, 12, 7, 6, 2, 10, 8]"],[["[8, 9, 5, 8, 1, 4, 2, 7, 1, 5, 1, 2, 5, 6, 3, 6, 1, 2, 5, 5, 5, 2, 8, 6, 4, 4, 7, 3, 6, 5]"],"[13, 14, 10, 13, 6, 9, 7, 12, 3, 10]"],[["[3, 8, 6, 3, 2, 2, 5, 5, 0, 5, 9, 0, 3, 9, 5, 7, 0, 0, 6, 5, 1, 5, 6, 8, 5, 6, 0, 0, 6, 7]"],"[14, 19, 8, 5, 13, 13, 16, 16, 11, 16, 20, 11, 14, 20, 16, 18, 11, 11, 17, 7, 12, 16]"],[["[1, 0, 3, 7, 8, 2, 8, 7, 4, 1, 7, 6, 7, 8, 1, 8, 5, 7, 7, 1, 8, 5, 2, 5, 0, 4, 6, 8, 3, 8]"],"[14, 13, 16, 20, 21, 4, 21, 20, 17, 14, 20, 19, 20, 21, 14, 21, 18, 20, 20, 14, 21, 18, 15, 18, 13, 17]"]],"type":"(list -> list)","name":"057","solution":"(letII (inc (inc randnat)) (λk -> (map (λact -> (+ (letII randnat (λx -> (case (flip 0.9) of True => k#3 | False => 2))) (case (flip 0.3) of True => act#1 | False => act#1))) (take (+ k#1 (case (flip 0.9) of True => k#1 | False => k#1)) #2))))","num_train":4},{"ios":[[["[8, 1, 0, 0, 5, 5, 0, 0, 2, 7, 1, 0, 6, 3, 5, 4, 5, 4, 9, 4, 8, 6, 9, 6, 5, 5, 7, 8, 4, 4]"],"[7, 2, 5, 7, 7, 6, 7, 1, 7, 7, 7, 7, 7, 7, 7, 7, 6, 5]"],[["[0, 6, 8, 5, 3, 9, 4, 5, 8, 7, 8, 6, 0, 8, 4, 8, 7, 9, 9, 4, 0, 0, 3, 2, 1, 9, 1, 0, 0, 3]"],"[1, 7, 7, 7, 4, 10, 7, 16, 9, 7, 7, 7, 1, 9, 5, 7, 7, 10]"],[["[6, 9, 6, 6, 3, 0, 0, 1, 0, 7, 6, 4, 2, 8, 7, 7, 7, 3, 9, 2, 7, 0, 5, 5, 0, 5, 1, 7, 1, 2]"],"[7, 10, 7, 7, 7, 1, 1, 2, 1, 8, 7, 7, 3, 7, 8, 8, 7, 7]"],[["[8, 4, 6, 2, 1, 1, 6, 6, 3, 8, 2, 1, 8, 1, 6, 5, 4, 0, 7, 0, 6, 9, 5, 3, 1, 9, 5, 7, 2, 4]"],"[9, 7, 7, 4, 7, 7, 7, 7, 7, 7, 3, 7, 7, 2, 7, 7, 7, 7]"],[["[8, 9, 1, 5, 5, 7, 6, 6, 6, 0, 1, 0, 3, 8, 8, 9, 9, 6, 2, 9, 9, 4, 5, 3, 2, 0, 7, 7, 2, 5]"],"[7, 7, 2, 6, 7, 8, 7, 7, 7, 7, 2, 7, 4, 7, 7, 7, 7, 7]"],[["[8, 7, 2, 2, 6, 1, 7, 8, 5, 2, 8, 4, 5, 3, 8, 2, 6, 9, 8, 9, 4, 5, 7, 4, 0, 6, 7, 8, 8, 3]"],"[7, 7, 7, 3, 7, 2, 7, 9, 7, 19, 9, 7, 6, 7, 7, 7, 7, 10]"],[["[9, 6, 9, 1, 6, 1, 9, 5, 7, 9, 8, 5, 1, 8, 9, 9, 1, 9, 9, 0, 5, 7, 0, 2, 5, 2, 9, 3, 8, 0]"],"[7, 7, 7, 7, 7, 7, 7, 6, 8, 7, 9, 6, 2, 9, 10, 7, 7, 10]"],[["[0, 1, 5, 2, 6, 1, 0, 7, 5, 2, 0, 3, 1, 5, 3, 4, 9, 5, 4, 4, 2, 3, 5, 3, 2, 8, 4, 2, 1, 3]"],"[1, 7, 7, 7, 7, 7, 7, 2, 7, 3, 7, 7, 2, 7, 4, 5, 10, 7]"]],"type":"(list -> list)","name":"058","solution":"(letII (+ 1 7) (λk -> (map (λact -> (inc (case (flip 0.4) of True => act#1 | False => (case (flip 0.8) of True => 6 | False => randnat)))) (take (inc (letII k#1 (λx -> (+ (inc x#1) (letII randnat (λx -> (case (flip 0.1) of True => k#3 | False => k#3))))))) #2))))","num_train":4},{"ios":[[["[3, 5, 7, 8, 6, 9, 5, 9, 8, 8, 6, 3, 1, 0, 5, 7, 2, 8, 1, 4, 3, 4, 3, 7, 8, 6, 3, 6, 9, 5]"],"[26, 6, 10, 12, 9]"],[["[0, 5, 4, 2, 1, 1, 4, 5, 9, 1, 4, 7, 3, 1, 2, 8, 2, 8, 0, 2, 3, 0, 5, 1, 0, 8, 7, 5, 3, 9]"],"[3, 11, 5, 3, 7]"],[["[4, 0, 5, 1, 4, 9, 9, 2, 9, 8, 7, 2, 5, 3, 1, 9, 2, 5, 1, 2, 0, 5, 4, 5, 2, 1, 8, 6, 2, 6]"],"[11, 4, 8, 2, 5]"],[["[0, 0, 7, 2, 5, 1, 2, 9, 1, 7, 5, 3, 4, 9, 9, 4, 9, 7, 3, 2, 7, 4, 3, 3, 0, 8, 2, 5, 1, 9]"],"[3, 3, 9, 3, 7]"],[["[4, 2, 0, 1, 5, 2, 9, 2, 5, 2, 3, 1, 9, 6, 3, 5, 1, 7, 5, 7, 3, 1, 3, 2, 4, 2, 0, 1, 1, 7]"],"[5, 12, 5, 9, 9]"],[["[3, 0, 5, 2, 7, 4, 6, 0, 4, 9, 2, 5, 6, 6, 3, 2, 5, 2, 4, 1, 8, 6, 9, 7, 3, 1, 5, 4, 9, 1]"],"[5, 1, 17, 9, 9]"],[["[4, 4, 0, 7, 4, 8, 3, 3, 5, 5, 4, 3, 4, 6, 2, 9, 0, 8, 8, 6, 5, 4, 1, 5, 9, 7, 1, 7, 5, 2]"],"[10, 8, 20, 8, 6]"],[["[9, 6, 7, 6, 4, 7, 2, 5, 5, 6, 1, 6, 8, 4, 2, 4, 8, 3, 9, 4, 5, 2, 3, 1, 8, 3, 8, 3, 6, 3]"],"[22, 8, 17, 7, 5]"]],"type":"(list -> list)","name":"059","solution":"(letII 5 (λk -> (map (λact -> (letII (case (flip 0.5) of True => act#1 | False => 7) (λx -> (+ (inc act#2) randnat)))) (take k#1 #2))))","num_train":4},{"ios":[[["[9, 6, 6, 0, 5, 4, 9, 4, 7, 2, 8, 5, 3, 3, 0, 7, 5, 2, 8, 7, 2, 4, 2, 2, 8, 9, 6, 1, 9, 7]"],"[4, 0, 0, 12, 0, 1, 0, 1, 0, 5, 0, 0, 4, 2, 0, 0, 12]"],[["[8, 9, 4, 8, 1, 7, 1, 0, 1, 0, 4, 3, 0, 8, 3, 8, 7, 8, 5, 3, 5, 8, 1, 7, 4, 9, 1, 8, 0, 3]"],"[0, 0, 0, 0, 0, 0, 18, 5, 1, 0, 0, 7, 3, 0, 0, 6, 0]"],[["[4, 2, 5, 3, 6, 9, 8, 8, 8, 3, 8, 4, 0, 1, 2, 4, 9, 1, 3, 0, 4, 8, 6, 1, 2, 2, 1, 7, 9, 6]"],"[0, 5, 0, 17, 0, 0, 0, 0, 0, 0]"],[["[6, 3, 7, 0, 1, 6, 8, 4, 7, 1, 2, 2, 8, 0, 3, 6, 1, 0, 1, 9, 5, 8, 5, 7, 7, 7, 6, 0, 0, 8]"],"[0, 7, 0, 7, 3, 0, 4, 0, 0]"],[["[0, 2, 0, 4, 0, 7, 1, 2, 1, 5, 5, 4, 0, 0, 4, 3, 6, 5, 8, 7, 4, 5, 4, 6, 0, 0, 1, 4, 7, 5]"],"[1, 0, 8, 0, 0, 10, 9, 0]"],[["[5, 2, 2, 0, 8, 6, 0, 7, 8, 5, 5, 6, 3, 7, 2, 7, 4, 6, 2, 7, 2, 0, 3, 9, 4, 3, 2, 0, 4, 2]"],"[4, 3, 1, 3, 6, 0, 18, 0, 0, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2]"],[["[6, 4, 9, 0, 7, 1, 2, 6, 0, 5, 4, 1, 1, 9, 5, 0, 6, 9, 3, 0, 4, 9, 8, 8, 3, 8, 7, 9, 0, 7]"],"[0, 2, 0, 5, 3, 19, 0, 0, 7, 0, 0]"],[["[3, 3, 5, 5, 0, 7, 0, 4, 2, 1, 2, 4, 5, 5, 5, 3, 4, 4, 5, 2, 1, 6, 4, 3, 4, 9, 1, 1, 5, 5]"],"[0, 0, 1, 0, 0, 0, 6, 4, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4]"]],"type":"(list -> list)","name":"060","solution":"(letII 2 (λk -> (map (λact -> (- randnat act#1)) (take (letII randnat (λx -> (+ (letII k#2 (λx -> (+ (case x#1 of O => randnat | S => (λn -> randnat)) randnat))) randnat))) #2))))","num_train":4},{"ios":[[["[8, 3, 4, 0, 3, 3, 1, 4, 7, 4, 1, 5, 3, 5, 8, 9, 8, 9, 7, 4, 4, 9, 7, 9, 0, 1, 0, 8, 4, 9]"],"[8, 3, 4, 3, 3, 3, 3, 4, 7]"],[["[3, 0, 4, 8, 2, 6, 9, 7, 2, 1, 2, 5, 7, 0, 7, 8, 5, 2, 2, 1, 4, 9, 1, 6, 2, 7, 3, 0, 2, 4]"],"[3, 3, 4, 8, 3, 6, 9, 7, 3]"],[["[6, 8, 2, 0, 7, 9, 9, 8, 3, 7, 6, 9, 1, 8, 3, 8, 4, 4, 1, 7, 1, 7, 5, 9, 3, 3, 0, 4, 0, 4]"],"[6, 8, 3, 3, 7, 9, 9, 8, 3]"],[["[3, 9, 7, 9, 2, 8, 6, 4, 7, 5, 6, 6, 8, 1, 4, 2, 1, 9, 3, 8, 8, 4, 5, 0, 4, 0, 8, 2, 9, 7]"],"[3, 9, 7, 9, 3, 8, 6, 4, 7]"],[["[9, 8, 6, 4, 8, 4, 6, 4, 4, 5, 6, 6, 7, 3, 6, 0, 0, 4, 7, 8, 4, 9, 3, 5, 4, 1, 2, 6, 1, 4]"],"[9, 8, 6, 4, 8, 4, 6, 4, 4]"],[["[5, 9, 1, 4, 0, 2, 3, 5, 3, 4, 2, 2, 7, 8, 0, 9, 7, 7, 2, 2, 6, 5, 6, 9, 1, 0, 1, 9, 7, 8]"],"[5, 9, 3, 4, 3, 3, 3, 5, 3]"],[["[8, 9, 8, 7, 7, 9, 9, 2, 5, 0, 4, 4, 0, 7, 9, 3, 1, 4, 7, 7, 1, 3, 3, 3, 1, 2, 5, 8, 8, 7]"],"[8, 9, 8, 7, 7, 9, 9, 3, 5]"],[["[7, 8, 9, 4, 6, 8, 9, 8, 5, 5, 7, 8, 2, 5, 5, 0, 9, 0, 4, 8, 7, 7, 9, 6, 8, 2, 7, 4, 8, 0]"],"[7, 8, 9, 4, 6, 8, 9, 8, 5]"]],"type":"(list -> list)","name":"061","solution":"(letII 3 (λk -> (map (λact -> (+ act#1 (- k#2 act#1))) (take (+ k#1 6) #2))))","num_train":4},{"ios":[[["[9, 6, 7, 8, 7, 6, 0, 1, 7, 0, 5, 6, 7, 7, 2, 2, 7, 6, 4, 4, 5, 0, 1, 2, 2, 5, 8, 3, 1, 8]"],"[22, 12, 15, 29, 16, 12]"],[["[9, 2, 1, 8, 3, 3, 1, 9, 9, 3, 4, 8, 5, 5, 9, 3, 9, 6, 6, 5, 5, 6, 3, 7, 5, 9, 3, 7, 9, 6]"],"[24, 6, 7, 17, 8, 6, 2, 24]"],[["[0, 4, 4, 5, 4, 4, 2, 6, 6, 7, 0, 5, 5, 1, 1, 2, 5, 1, 5, 9, 8, 6, 9, 3, 1, 0, 9, 3, 0, 4]"],"[8, 15, 8]"],[["[2, 4, 0, 0, 3, 4, 4, 4, 9, 3, 6, 5, 9, 3, 7, 0, 6, 6, 6, 8, 1, 0, 6, 7, 9, 4, 4, 3, 3, 2]"],"[6, 9, 3]"],[["[0, 7, 1, 5, 0, 5, 4, 4, 8, 6, 2, 3, 2, 5, 1, 7, 4, 3, 5, 4, 7, 8, 1, 0, 6, 1, 2, 6, 0, 2]"],"[1, 19, 6]"],[["[0, 9, 6, 7, 0, 6, 7, 6, 0, 3, 2, 5, 2, 9, 5, 8, 1, 0, 1, 6, 8, 6, 8, 7, 0, 3, 6, 1, 1, 9]"],"[3, 18, 12]"],[["[4, 2, 0, 8, 6, 3, 8, 2, 6, 4, 3, 4, 4, 1, 2, 7, 0, 7, 8, 9, 8, 9, 5, 7, 8, 8, 1, 2, 9, 7]"],"[18, 15, 2]"],[["[1, 6, 6, 3, 3, 3, 6, 8, 7, 7, 3, 1, 5, 1, 4, 2, 7, 2, 4, 4, 5, 7, 1, 8, 8, 8, 7, 9, 5, 1]"],"[6, 18, 25]"]],"type":"(list -> list)","name":"062","solution":"(letII (+ 9 (case 9 of O => randnat | S => (λn -> randnat))) (λk -> (map (λact -> (+ (+ act#1 act#1) randnat)) (take (letII randnat (λx -> (case (== randnat x#1) of True => (letII randnat (λx -> (- k#3 (case randnat of O => randnat | S => (λn -> randnat))))) | False => (letII randnat (λx -> (inc 2)))))) #2))))","num_train":4},{"ios":[[["[5, 4, 7, 5, 3, 7, 0, 8, 6, 4, 2, 7, 2, 6, 5, 7, 9, 1, 7, 9, 4, 8, 1, 3, 3, 0, 8, 6, 6, 5]"],"[31, 4]"],[["[4, 6, 0, 7, 5, 1, 9, 4, 1, 4, 9, 9, 8, 7, 8, 8, 0, 1, 4, 1, 4, 4, 6, 5, 9, 2, 6, 6, 6, 8]"],"[4, 22, 16, 23, 4, 17]"],[["[3, 4, 5, 5, 6, 9, 6, 2, 3, 5, 6, 3, 8, 9, 7, 7, 8, 2, 0, 4, 9, 7, 8, 5, 1, 7, 3, 0, 0, 3]"],"[4, 20, 4, 21, 22]"],[["[0, 2, 8, 3, 9, 8, 2, 2, 6, 5, 6, 1, 2, 2, 9, 7, 1, 0, 1, 8, 2, 1, 7, 4, 5, 5, 3, 1, 4, 5]"],"[16, 4, 24, 19, 25, 24, 18, 18, 22, 4, 22, 17, 18, 4]"],[["[9, 0, 4, 1, 5, 8, 1, 3, 3, 9, 9, 1, 5, 6, 7, 1, 9, 1, 3, 9, 0, 4, 9, 6, 7, 2, 8, 1, 3, 0]"],"[25, 4, 4, 17]"],[["[5, 9, 8, 3, 3, 1, 3, 8, 8, 0, 8, 3, 0, 3, 2, 4, 0, 2, 9, 7, 1, 4, 7, 2, 8, 6, 0, 6, 7, 6]"],"[4, 25, 24, 19, 4, 4, 4, 4, 24]"],[["[4, 4, 6, 1, 3, 6, 3, 6, 4, 0, 5, 4, 7, 4, 4, 4, 5, 1, 7, 7, 3, 0, 5, 4, 0, 7, 7, 4, 0, 1]"],"[20, 20, 22, 4]"],[["[8, 8, 9, 5, 5, 1, 5, 0, 0, 6, 0, 1, 3, 5, 4, 9, 6, 3, 2, 3, 9, 1, 2, 1, 4, 1, 0, 7, 2, 9]"],"[24, 24, 25]"]],"type":"(list -> list)","name":"063","solution":"(letII (+ (letII randnat (λx -> (- randnat x#1))) (letII 8 (λx -> (+ x#1 x#1)))) (λk -> (map (λact -> (case (flip 0.7) of True => (+ act#1 k#2) | False => (letII (- randnat act#1) (λx -> (case 0 of O => 4 | S => (λn -> randnat)))))) (take (+ (- k#1 k#1) randnat) #2))))","num_train":4},{"ios":[[["[3, 5, 0, 4, 2, 2, 3, 3, 8, 3, 2, 8, 0, 6, 5, 6, 1, 3, 8, 7, 6, 1, 3, 6, 4, 7, 7, 0, 5, 0]"],"[3, 0]"],[["[4, 4, 2, 9, 3, 8, 0, 5, 3, 2, 0, 6, 3, 7, 6, 7, 2, 5, 1, 3, 1, 6, 8, 1, 6, 1, 3, 6, 4, 6]"],"[4, 9, 2, 9, 1, 1, 4, 8, 3, 2]"],[["[1, 4, 4, 1, 4, 3, 0, 7, 8, 8, 8, 5, 3, 7, 4, 4, 6, 6, 7, 8, 0, 3, 8, 3, 2, 7, 8, 8, 7, 1]"],"[1, 4, 4, 11, 3, 7, 0, 7, 8, 8, 8, 1]"],[["[4, 6, 2, 1, 5, 4, 4, 7, 2, 7, 1, 8, 7, 3, 2, 2, 0, 1, 2, 3, 5, 1, 9, 4, 8, 0, 8, 9, 9, 1]"],"[4, 2]"],[["[2, 1, 0, 7, 1, 6, 4, 9, 8, 8, 5, 7, 7, 0, 5, 4, 6, 9, 8, 9, 1, 8, 8, 5, 3, 7, 6, 9, 4, 6]"],"[18, 4, 5, 7, 1, 6, 4, 9, 8, 8, 5, 1, 7, 5, 5, 4, 6, 9, 7, 9, 1, 8]"],[["[3, 0, 5, 3, 4, 3, 1, 6, 2, 5, 5, 9, 8, 8, 6, 0, 2, 1, 7, 1, 6, 8, 2, 2, 4, 8, 2, 9, 7, 4]"],"[3, 0, 0, 3, 3, 3, 1, 6]"],[["[9, 8, 4, 6, 5, 8, 1, 6, 6, 7, 2, 2, 3, 6, 1, 2, 6, 8, 4, 4, 1, 2, 4, 4, 0, 7, 1, 8, 3, 0]"],"[9, 8, 4, 2, 5, 8, 1, 0, 7, 7, 2, 1, 3, 2, 0, 3, 6, 2, 4, 8, 1]"],[["[8, 4, 6, 0, 1, 4, 5, 0, 2, 9, 9, 1, 3, 0, 9, 6, 2, 5, 4, 6, 7, 2, 0, 7, 7, 4, 7, 4, 9, 2]"],"[1, 0]"]],"type":"(list -> list)","name":"064","solution":"(letII (letII (case (flip 0.8) of True => 7 | False => randnat) (λx -> (+ (- randnat randnat) (letII 2 (λx -> (- randnat randnat)))))) (λk -> (map (λact -> (case (flip 0.6) of True => act#1 | False => randnat)) (take (+ randnat randnat) #2))))","num_train":4},{"ios":[[["[0, 8, 4, 7, 7, 7, 4, 3, 4, 7, 1, 5, 2, 9, 7, 4, 6, 5, 5, 1, 8, 0, 9, 4, 0, 8, 7, 7, 7, 0]"],"[1, 7, 3, 6, 6, 6, 3, 2, 3]"],[["[7, 2, 1, 0, 6, 8, 4, 2, 8, 8, 5, 7, 6, 6, 6, 2, 5, 9, 5, 3, 1, 0, 9, 8, 5, 4, 8, 2, 4, 0]"],"[6, 1, 0, 10]"],[["[9, 6, 0, 6, 8, 7, 3, 6, 4, 2, 2, 1, 9, 5, 6, 6, 1, 7, 4, 0, 3, 9, 9, 0, 6, 5, 1, 7, 7, 7]"],"[8, 5, 3, 5]"],[["[6, 5, 7, 5, 3, 8, 8, 1, 4, 9, 4, 4, 6, 4, 3, 4, 7, 8, 4, 6, 3, 1, 2, 6, 3, 8, 6, 0, 0, 3]"],"[5, 4, 6, 4, 2, 7, 7, 0, 3]"],[["[4, 2, 0, 6, 6, 7, 7, 8, 6, 6, 3, 8, 5, 4, 5, 2, 4, 9, 8, 9, 8, 7, 5, 8, 6, 0, 5, 8, 3, 8]"],"[3, 1, 8, 7, 5, 6, 6, 7, 5]"],[["[2, 3, 1, 0, 4, 3, 8, 4, 9, 5, 2, 6, 4, 8, 6, 7, 5, 9, 7, 7, 0, 7, 6, 1, 9, 8, 2, 4, 4, 1]"],"[1, 7, 0, 10]"],[["[5, 5, 8, 6, 9, 1, 9, 1, 1, 1, 0, 7, 0, 0, 1, 8, 4, 4, 7, 6, 3, 0, 9, 1, 6, 1, 5, 0, 6, 2]"],"[4, 7, 7, 7]"],[["[2, 9, 7, 2, 5, 2, 4, 3, 7, 5, 5, 2, 0, 0, 2, 3, 0, 6, 7, 7, 9, 3, 9, 7, 5, 2, 1, 8, 1, 3]"],"[1, 8, 6, 7, 4, 1, 3]"]],"type":"(list -> list)","name":"065","solution":"(letII 7 (λk -> (map (λact -> (case randnat of O => k#2 | S => (λn -> (case act#2 of O => randnat | S => (λn -> n#1))))) (take (letII (letII k#1 (λx -> (+ x#1 x#1))) (λx -> (+ (case (flip 0.2) of True => k#2 | False => randnat) (- 9 k#2)))) #2))))","num_train":4},{"ios":[[["[5, 6, 8, 1, 2, 8, 1, 9, 2, 6, 3, 4, 8, 2, 8, 9, 0, 0, 8, 9, 8, 9, 3, 7, 0, 4, 7, 8, 5, 3]"],"[2, 6, 8, 1, 2, 8, 2, 2, 2, 2, 2, 4, 8, 2]"],[["[7, 5, 1, 6, 2, 0, 8, 8, 0, 8, 3, 9, 5, 6, 5, 4, 6, 8, 6, 8, 8, 0, 8, 2, 7, 7, 0, 9, 5, 2]"],"[7, 5, 1, 2]"],[["[2, 8, 4, 4, 1, 0, 7, 4, 2, 2, 8, 0, 4, 8, 0, 8, 4, 8, 2, 2, 3, 2, 7, 5, 4, 4, 1, 5, 6, 8]"],"[2, 2, 4, 4, 1, 0, 7]"],[["[9, 1, 3, 7, 6, 6, 8, 3, 4, 1, 3, 8, 9, 1, 2, 7, 0, 9, 0, 4, 3, 4, 6, 2, 5, 4, 4, 4, 0, 3]"],"[2, 2, 2, 7, 2, 6, 8, 3]"],[["[7, 3, 3, 7, 1, 6, 2, 5, 3, 7, 2, 8, 9, 4, 0, 6, 8, 0, 8, 4, 1, 7, 3, 9, 2, 9, 7, 9, 8, 6]"],"[2, 2, 3, 2, 1, 6, 2, 5, 3, 2, 2, 8, 2]"],[["[0, 9, 5, 0, 6, 3, 7, 4, 1, 0, 9, 5, 2, 3, 6, 1, 5, 6, 0, 9, 4, 3, 0, 2, 4, 4, 1, 2, 5, 3]"],"[0, 2, 2, 0, 6, 3, 7, 2, 1, 0, 9, 5, 2, 2, 2, 1, 2, 2, 0, 9, 4, 2, 0, 2, 2, 4, 2, 2, 5, 3]"],[["[2, 6, 4, 4, 0, 3, 8, 5, 4, 4, 2, 7, 9, 9, 7, 0, 1, 4, 5, 2, 7, 4, 3, 5, 2, 6, 6, 6, 1, 3]"],"[2, 2, 2, 4, 0]"],[["[0, 0, 2, 9, 3, 7, 7, 8, 5, 4, 4, 4, 3, 6, 6, 4, 9, 1, 7, 1, 6, 8, 4, 4, 9, 9, 4, 4, 7, 6]"],"[2, 0, 2, 2]"]],"type":"(list -> list)","name":"066","solution":"(letII (- randnat 0) (λk -> (map (λact -> (case (flip 0.5) of True => (inc (case k#2 of O => randnat | S => (λn -> 1))) | False => act#1)) (take (letII (letII k#1 (λx -> (+ k#2 k#2))) (λx -> (+ k#2 randnat))) #2))))","num_train":4},{"ios":[[["[1, 1, 0, 5, 9, 2, 2, 8, 1, 0, 0, 2, 5, 3, 4, 4, 6, 9, 5, 5, 4, 1, 0, 9, 1, 5, 0, 6, 5, 0]"],"[1, 7, 0, 5, 9, 2, 2, 8, 7, 0, 0, 2, 5, 3, 4, 7, 6, 9, 5, 5]"],[["[7, 2, 0, 6, 9, 4, 8, 2, 3, 9, 4, 2, 6, 8, 1, 3, 4, 2, 1, 9, 5, 9, 4, 9, 7, 3, 7, 4, 3, 2]"],"[7, 2, 0, 6, 9, 4, 8, 2, 3, 9, 4, 7, 6]"],[["[5, 7, 1, 8, 7, 3, 9, 6, 5, 0, 9, 6, 6, 5, 8, 1, 2, 8, 3, 4, 9, 6, 6, 8, 6, 9, 7, 9, 9, 2]"],"[5, 7, 1, 8, 7, 7, 9, 6]"],[["[2, 0, 0, 3, 7, 9, 3, 9, 9, 6, 0, 5, 4, 9, 5, 9, 0, 5, 8, 8, 4, 3, 4, 4, 0, 5, 2, 1, 1, 3]"],"[2, 0, 0, 3, 7, 9, 3, 9, 9, 6, 0, 7, 4, 9, 5]"],[["[3, 6, 7, 2, 4, 2, 3, 4, 4, 1, 2, 3, 9, 5, 9, 4, 0, 7, 1, 0, 7, 8, 7, 7, 9, 5, 6, 6, 0, 9]"],"[7, 6, 7, 2, 4, 2, 7, 4, 4]"],[["[7, 1, 3, 5, 1, 7, 0, 2, 2, 4, 7, 4, 8, 0, 1, 9, 4, 4, 0, 0, 2, 1, 3, 6, 8, 2, 5, 1, 1, 4]"],"[7, 1, 3, 5, 1, 7, 0, 2, 2, 4, 7]"],[["[8, 8, 5, 8, 0, 1, 4, 3, 1, 2, 2, 0, 4, 6, 8, 9, 3, 8, 3, 2, 3, 2, 9, 7, 1, 9, 8, 7, 1, 0]"],"[8, 8, 7, 8, 0, 1, 4]"],[["[6, 1, 3, 6, 3, 9, 6, 3, 1, 4, 3, 4, 1, 4, 0, 8, 1, 2, 1, 1, 7, 8, 2, 7, 7, 1, 3, 3, 5, 8]"],"[6, 7, 3, 6, 3, 7, 6, 7, 1]"]],"type":"(list -> list)","name":"067","solution":"(letII (case (> 2 3) of True => randnat | False => 7) (λk -> (map (λact -> (letII randnat (λx -> (case randnat of O => k#3 | S => (λn -> act#3))))) (take (+ (case randnat of O => k#1 | S => (λn -> (case n#1 of O => randnat | S => (λn -> randnat)))) (+ randnat 4)) #2))))","num_train":4},{"ios":[[["[1, 6, 7, 1, 0, 9, 0, 0, 9, 6, 5, 5, 5, 9, 2, 0, 7, 9, 9, 7, 9, 1, 7, 4, 5, 2, 1, 1, 5, 4]"],"[2, 3, 1, 2, 1, 10, 1, 1, 10, 7, 6, 6, 1]"],[["[7, 1, 3, 1, 0, 4, 3, 0, 7, 8, 2, 8, 6, 8, 7, 9, 0, 2, 6, 8, 2, 0, 0, 7, 2, 4, 6, 5, 6, 7]"],"[8, 2, 4, 2, 1, 5, 4, 8, 8, 9, 3, 9, 7, 6, 8, 10, 1, 3, 7, 9, 3, 1, 1, 8, 3, 5, 7]"],[["[2, 0, 6, 6, 7, 0, 0, 2, 9, 7, 5, 3, 1, 1, 2, 4, 0, 7, 5, 8, 4, 3, 8, 2, 3, 0, 8, 0, 4, 3]"],"[3, 1, 4, 7, 11, 1, 1, 3, 3, 8, 6, 4, 2]"],[["[8, 9, 6, 6, 1, 4, 3, 5, 3, 4, 4, 1, 4, 7, 7, 4, 3, 2, 3, 4, 6, 5, 8, 9, 7, 2, 6, 4, 4, 6]"],"[5, 10, 7, 7, 2, 5, 4, 6, 4, 5, 5, 2, 5, 7]"],[["[9, 9, 2, 7, 4, 8, 7, 0, 3, 3, 5, 3, 9, 7, 0, 6, 5, 9, 5, 7, 1, 0, 4, 1, 2, 6, 8, 1, 8, 8]"],"[10, 10, 3, 20, 5, 9, 1, 1, 4, 9, 6, 4, 3, 8, 1]"],[["[0, 9, 7, 5, 5, 5, 5, 9, 0, 5, 5, 9, 8, 7, 0, 7, 0, 8, 3, 6, 4, 9, 6, 4, 4, 4, 0, 5, 8, 6]"],"[1, 7, 8, 6, 6, 6, 1, 10, 1, 6, 6, 5, 4, 8, 1]"],[["[2, 0, 3, 0, 3, 3, 9, 5, 1, 4, 6, 6, 3, 8, 4, 8, 0, 2, 5, 5, 3, 1, 2, 9, 4, 0, 3, 2, 3, 8]"],"[3, 1, 4, 1, 4, 4, 10, 6, 2, 5, 7, 7, 4, 9, 5, 9, 1, 3, 6, 5, 4]"],[["[8, 0, 4, 1, 4, 2, 2, 6, 7, 9, 0, 9, 2, 4, 5, 4, 4, 5, 0, 9, 9, 6, 0, 1, 5, 3, 5, 3, 6, 2]"],"[9, 1, 5, 1, 5, 5, 3, 7, 6, 10, 1]"]],"type":"(list -> list)","name":"068","solution":"(letII (case (flip 0.2) of True => 4 | False => randnat) (λk -> (map (λact -> (inc (case (flip 0.8) of True => act#1 | False => randnat))) (take (+ (+ randnat (inc randnat)) (case randnat of O => randnat | S => (λn -> randnat))) #2))))","num_train":4},{"ios":[[["[1, 5, 3, 5, 4, 5, 0, 3, 7, 7, 7, 4, 1, 9, 7, 7, 5, 3, 8, 2, 1, 5, 5, 0, 1, 2, 1, 6, 4, 8]"],"[1, 5, 3, 5]"],[["[0, 8, 6, 4, 7, 4, 9, 1, 9, 9, 1, 8, 6, 9, 8, 7, 1, 2, 7, 9, 5, 7, 7, 9, 2, 8, 8, 7, 0, 1]"],"[0, 8, 6, 4]"],[["[4, 3, 1, 9, 8, 0, 7, 5, 8, 6, 1, 2, 9, 5, 7, 2, 7, 2, 9, 4, 6, 9, 3, 7, 9, 4, 5, 0, 7, 1]"],"[4, 3, 1, 9]"],[["[7, 9, 2, 1, 9, 8, 2, 7, 2, 2, 6, 3, 5, 3, 4, 7, 3, 9, 1, 9, 2, 4, 6, 6, 6, 0, 0, 5, 0, 6]"],"[7, 9, 2, 1]"],[["[9, 4, 6, 1, 1, 8, 8, 2, 0, 7, 9, 8, 1, 9, 4, 5, 3, 0, 2, 5, 4, 9, 8, 2, 0, 2, 3, 3, 2, 9]"],"[9, 4, 6, 1]"],[["[0, 6, 2, 1, 2, 2, 1, 9, 5, 0, 4, 3, 2, 0, 6, 7, 2, 5, 2, 9, 7, 1, 2, 9, 9, 4, 7, 8, 9, 5]"],"[0, 6, 2, 1]"],[["[7, 1, 1, 7, 2, 8, 1, 3, 0, 8, 1, 8, 3, 5, 3, 1, 4, 5, 5, 4, 4, 0, 5, 2, 4, 1, 9, 3, 2, 6]"],"[7, 1, 1, 7]"],[["[5, 8, 7, 0, 7, 7, 9, 2, 9, 2, 5, 5, 2, 8, 1, 7, 4, 2, 0, 3, 8, 6, 9, 7, 0, 1, 3, 5, 6, 4]"],"[5, 8, 7, 0]"]],"type":"(list -> list)","name":"069","solution":"(letII randnat (λk -> (map (λact -> act#1) (take 4 #2))))","num_train":4},{"ios":[[["[7, 5, 5, 4, 8, 0, 2, 4, 7, 1, 0, 1, 0, 0, 9, 9, 7, 9, 3, 9, 0, 2, 7, 4, 5, 3, 3, 9, 8, 1]"],"[10, 5, 5, 5]"],[["[3, 0, 6, 2, 0, 4, 2, 0, 7, 4, 8, 4, 7, 6, 9, 8, 6, 2, 7, 6, 9, 9, 4, 2, 3, 2, 6, 2, 8, 2]"],"[4, 7, 13, 2]"],[["[4, 9, 0, 7, 6, 5, 5, 6, 1, 3, 7, 8, 3, 5, 5, 3, 4, 6, 3, 4, 1, 5, 6, 9, 3, 3, 2, 5, 2, 8]"],"[6, 10, 2, 7]"],[["[0, 4, 4, 6, 0, 4, 4, 0, 9, 8, 8, 3, 3, 0, 7, 1, 2, 0, 8, 5, 4, 1, 0, 5, 5, 5, 6, 7, 7, 6]"],"[5, 8, 9, 10]"],[["[1, 0, 5, 0, 4, 4, 7, 6, 2, 4, 2, 2, 3, 8, 6, 8, 5, 0, 7, 2, 6, 3, 5, 9, 0, 7, 2, 9, 6, 2]"],"[8, 1, 8, 0]"],[["[1, 0, 4, 4, 9, 6, 5, 8, 9, 2, 1, 0, 7, 8, 5, 7, 2, 0, 3, 4, 3, 8, 4, 2, 6, 3, 3, 4, 3, 3]"],"[1, 7, 6, 5]"],[["[1, 6, 3, 2, 5, 4, 8, 7, 3, 2, 7, 8, 3, 9, 3, 8, 9, 9, 6, 5, 2, 6, 6, 6, 4, 7, 9, 5, 4, 0]"],"[7, 11, 20, 2]"],[["[2, 8, 1, 2, 7, 8, 8, 1, 8, 0, 2, 2, 4, 8, 0, 8, 5, 2, 7, 7, 3, 2, 1, 3, 7, 4, 4, 2, 1, 5]"],"[32, 8, 8, 4]"]],"type":"(list -> list)","name":"070","solution":"(letII (letII randnat (λx -> (- randnat (letII x#1 (λx -> (+ (case 5 of O => randnat | S => (λn -> x#3)) (- 9 randnat))))))) (λk -> (map (λact -> (letII k#2 (λx -> (+ act#2 randnat)))) (take 4 #2))))","num_train":4},{"ios":[[["[3, 4, 8, 4, 5, 7, 3, 2, 4, 1, 7, 2, 9, 5, 5, 6, 3, 6, 3, 2, 1, 4, 6, 2, 4, 2, 3, 3, 3, 7]"],"[3, 4]"],[["[2, 0, 4, 8, 8, 5, 0, 9, 5, 9, 6, 2, 1, 8, 1, 0, 6, 1, 2, 8, 4, 5, 9, 5, 7, 8, 5, 9, 3, 6]"],"[2, 0]"],[["[9, 3, 0, 5, 8, 3, 9, 1, 1, 3, 6, 9, 2, 5, 7, 1, 9, 6, 9, 5, 3, 4, 2, 6, 3, 5, 3, 6, 7, 5]"],"[9, 3]"],[["[5, 4, 3, 2, 8, 9, 0, 5, 2, 9, 1, 8, 0, 4, 6, 0, 5, 3, 7, 2, 7, 8, 6, 5, 9, 8, 1, 7, 6, 5]"],"[5, 4]"],[["[6, 7, 9, 2, 0, 1, 9, 6, 3, 2, 0, 0, 2, 1, 3, 3, 0, 6, 5, 7, 1, 6, 4, 9, 5, 3, 8, 3, 6, 3]"],"[6, 7]"],[["[0, 6, 8, 3, 3, 6, 6, 4, 3, 1, 3, 8, 2, 0, 7, 3, 0, 9, 2, 7, 2, 8, 3, 5, 5, 3, 5, 1, 9, 7]"],"[0, 6]"],[["[9, 0, 0, 3, 1, 2, 6, 5, 0, 9, 6, 3, 5, 6, 5, 8, 0, 5, 5, 3, 7, 4, 6, 6, 0, 4, 2, 9, 5, 8]"],"[9, 0]"],[["[0, 8, 8, 4, 2, 5, 3, 6, 8, 4, 6, 4, 8, 3, 1, 6, 2, 5, 0, 0, 3, 2, 5, 2, 3, 5, 6, 5, 7, 2]"],"[0, 8]"]],"type":"(list -> list)","name":"071","solution":"(letII (- 1 4) (λk -> (map (λact -> act#1) (take (inc (inc k#1)) #2))))","num_train":4},{"ios":[[["[1, 1, 8, 4, 8, 5, 1, 0, 7, 7, 2, 9, 6, 7, 8, 8, 2, 5, 7, 7, 2, 7, 0, 9, 3, 1, 0, 4, 7, 8]"],"[0, 0, 6, 3, 5, 5]"],[["[1, 8, 6, 4, 8, 2, 2, 9, 7, 9, 0, 6, 6, 9, 0, 3, 3, 8, 7, 4, 6, 4, 8, 5, 1, 9, 0, 7, 9, 5]"],"[0, 6, 3, 0, 5, 0]"],[["[2, 9, 0, 4, 2, 6, 6, 0, 9, 1, 8, 2, 6, 7, 5, 8, 7, 7, 1, 2, 3, 0, 1, 0, 0, 4, 7, 4, 4, 5]"],"[2, 3, 0, 0, 0, 0]"],[["[4, 1, 7, 9, 7, 5, 2, 6, 7, 9, 7, 1, 9, 7, 6, 5, 5, 4, 2, 8, 2, 6, 4, 8, 1, 1, 1, 4, 6, 8]"],"[0, 0, 4, 9, 5, 3]"],[["[4, 7, 2, 9, 9, 6, 7, 6, 1, 4, 7, 5, 5, 6, 6, 2, 5, 8, 8, 1, 7, 9, 4, 6, 3, 6, 8, 9, 6, 5]"],"[2, 0, 0]"],[["[7, 9, 3, 0, 7, 4, 4, 4, 5, 8, 8, 2, 0, 5, 7, 0, 6, 0, 0, 7, 7, 1, 2, 9, 9, 8, 8, 0, 0, 2]"],"[3, 1, 3, 0, 5, 1]"],[["[3, 3, 2, 9, 4, 8, 3, 8, 5, 7, 3, 5, 5, 4, 8, 7, 3, 1, 0, 8, 1, 3, 4, 7, 3, 8, 1, 6, 3, 0]"],"[0, 0, 0, 7, 3, 7]"],[["[3, 1, 3, 3, 3, 9, 2, 8, 8, 4, 2, 3, 1, 2, 7, 1, 9, 0, 0, 3, 1, 8, 5, 6, 7, 5, 9, 7, 6, 7]"],"[2, 0, 2, 0, 0, 5]"]],"type":"(list -> list)","name":"072","solution":"(letII (letII (case (== (- randnat 7) 6) of True => 6 | False => 9) (λx -> (- randnat (case (flip 0.1) of True => x#1 | False => randnat)))) (λk -> (map (λact -> (letII act#1 (λx -> (- act#2 randnat)))) (take (case (== (letII 3 (λx -> (+ 0 randnat))) randnat) of True => k#1 | False => 6) #2))))","num_train":4},{"ios":[[["[2, 1, 7, 1, 2, 4, 1, 7, 7, 2, 6, 7, 6, 8, 5, 1, 2, 4, 4, 1, 9, 7, 9, 6, 8, 6, 2, 2, 0, 3]"],"[2, 1, 7, 1, 2, 4, 1, 7, 7, 2]"],[["[9, 2, 4, 7, 8, 5, 7, 5, 4, 5, 3, 5, 9, 3, 0, 1, 7, 9, 8, 1, 9, 9, 6, 5, 6, 7, 1, 9, 9, 7]"],"[9, 2, 4, 7, 8, 5, 7, 5, 4, 5]"],[["[5, 7, 0, 1, 1, 2, 6, 7, 2, 5, 0, 8, 7, 8, 5, 3, 8, 4, 6, 3, 6, 2, 7, 7, 9, 7, 2, 6, 7, 9]"],"[5, 7, 0, 0, 1, 2, 6, 0, 2]"],[["[4, 9, 8, 4, 2, 3, 0, 4, 8, 5, 9, 0, 7, 0, 2, 2, 1, 8, 5, 4, 0, 7, 9, 3, 4, 8, 4, 4, 4, 7]"],"[4, 9, 8, 4, 2, 3, 4, 4, 1, 1, 9, 0, 7, 4, 2]"],[["[9, 2, 5, 8, 4, 9, 3, 2, 1, 1, 0, 5, 0, 9, 8, 4, 5, 8, 6, 1, 4, 4, 4, 5, 4, 0, 8, 5, 8, 0]"],"[9, 2, 0, 1, 4, 9, 3, 2, 1, 1, 0, 5, 0, 15, 8, 1, 5, 8, 6, 1, 3, 2, 4, 0, 4, 2, 8, 5, 8, 0]"],[["[5, 6, 7, 1, 7, 6, 3, 6, 6, 9, 1, 6, 6, 6, 0, 2, 8, 0, 8, 2, 4, 1, 4, 5, 7, 8, 6, 6, 6, 5]"],"[5, 6, 7, 1, 6, 6, 3, 6, 6]"],[["[4, 9, 3, 8, 5, 0, 6, 8, 9, 0, 1, 3, 4, 0, 8, 0, 8, 8, 7, 1, 2, 1, 8, 8, 0, 1, 8, 3, 2, 6]"],"[4, 9, 3, 0, 5, 0, 6, 8, 9, 0, 1, 3, 4, 0, 8, 0, 8, 8, 7, 1]"],[["[4, 2, 5, 8, 8, 8, 2, 4, 5, 6, 5, 6, 7, 6, 1, 4, 4, 3, 3, 3, 1, 2, 9, 0, 7, 9, 8, 2, 8, 1]"],"[4, 2, 5, 9, 8, 8, 2, 4, 5, 6, 7]"]],"type":"(list -> list)","name":"073","solution":"(letII (+ randnat 8) (λk -> (map (λact -> (case randnat of O => randnat | S => (λn -> act#2))) (take (letII (+ randnat k#1) (λx -> (inc k#2))) #2))))","num_train":4},{"ios":[[["[5, 4, 3, 2, 6, 3, 1, 9, 5, 4, 3, 7, 3, 5, 8, 5, 9, 0, 0, 0, 3, 6, 0, 1, 0, 4, 3, 8, 5, 4]"],"[8, 9]"],[["[0, 4, 0, 7, 2, 8, 8, 9, 7, 8, 9, 5, 3, 6, 6, 4, 2, 9, 7, 6, 4, 4, 5, 1, 1, 9, 3, 8, 5, 8]"],"[11, 13, 1, 6, 5, 2, 8, 2, 1, 0, 15]"],[["[0, 4, 2, 0, 3, 1, 4, 0, 8, 9, 1, 0, 8, 1, 4, 1, 6, 9, 0, 4, 1, 5, 7, 1, 0, 9, 4, 6, 5, 0]"],"[5, 2, 3, 7, 10, 6, 1, 12, 1]"],[["[8, 8, 5, 4, 6, 7, 4, 4, 7, 0, 3, 5, 3, 7, 2, 9, 5, 8, 0, 6, 0, 6, 7, 6, 7, 4, 1, 8, 4, 1]"],"[2, 0, 10, 4]"],[["[4, 6, 2, 2, 8, 5, 5, 9, 5, 2, 9, 0, 5, 8, 8, 8, 4, 1, 4, 6, 8, 9, 8, 9, 8, 4, 7, 9, 5, 7]"],"[1, 3, 3, 12, 1, 0]"],[["[5, 7, 2, 9, 6, 2, 9, 1, 2, 7, 2, 3, 8, 8, 8, 7, 6, 7, 3, 3, 8, 6, 9, 2, 9, 3, 2, 6, 0, 8]"],"[0, 4]"],[["[5, 3, 3, 0, 0, 3, 5, 2, 8, 5, 6, 5, 7, 9, 1, 8, 1, 7, 0, 5, 7, 9, 3, 7, 6, 5, 4, 1, 3, 2]"],"[1, 1, 7, 8, 8, 3]"],[["[9, 2, 5, 6, 8, 3, 8, 9, 5, 6, 5, 2, 9, 5, 6, 5, 9, 9, 2, 3, 0, 1, 5, 4, 2, 1, 6, 5, 5, 8]"],"[2, 4, 5, 3, 0, 8, 3, 3, 7, 0, 15, 1, 0, 3, 2, 1, 2]"]],"type":"(list -> list)","name":"074","solution":"(letII (letII randnat (λx -> (- (+ randnat randnat) randnat))) (λk -> (map (λact -> (case act#1 of O => (inc randnat) | S => (λn -> randnat))) (take (+ randnat (case k#1 of O => randnat | S => (λn -> (letII n#1 (λx -> (- randnat 7)))))) #2))))","num_train":4},{"ios":[[["[8, 0, 6, 1, 6, 1, 0, 1, 9, 7, 8, 9, 5, 5, 5, 2, 7, 1, 6, 3, 8, 5, 4, 3, 0, 7, 6, 1, 7, 8]"],"[0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"],[["[5, 6, 5, 2, 9, 6, 5, 5, 9, 6, 8, 2, 0, 0, 1, 7, 7, 2, 4, 0, 9, 2, 1, 2, 9, 1, 6, 7, 9, 2]"],"[3, 0, 0, 0, 4, 0, 0]"],[["[5, 0, 4, 3, 1, 7, 3, 7, 6, 7, 8, 7, 8, 0, 3, 6, 4, 4, 8, 6, 3, 2, 7, 3, 1, 5, 3, 2, 3, 0]"],"[0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 0]"],[["[3, 8, 5, 1, 8, 2, 9, 4, 7, 6, 2, 7, 3, 9, 0, 4, 4, 3, 7, 0, 9, 4, 7, 2, 2, 7, 7, 9, 5, 2]"],"[0, 0, 5, 0, 5, 0, 4, 1, 4, 0, 0, 4, 0]"],[["[9, 3, 4, 8, 2, 0, 4, 6, 0, 5, 6, 2, 4, 3, 7, 5, 0, 9, 7, 9, 9, 9, 8, 0, 0, 4, 0, 6, 4, 6]"],"[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1]"],[["[4, 8, 5, 4, 3, 5, 8, 3, 9, 6, 0, 3, 4, 6, 7, 5, 7, 0, 5, 0, 9, 9, 9, 1, 8, 6, 8, 1, 2, 9]"],"[0, 0, 0, 3, 0, 5, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0]"],[["[0, 4, 9, 9, 2, 8, 6, 3, 9, 7, 9, 2, 0, 5, 7, 5, 3, 5, 6, 2, 2, 6, 2, 1, 9, 9, 2, 7, 4, 6]"],"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 2, 0, 0, 0, 0]"],[["[7, 2, 8, 9, 4, 0, 6, 5, 9, 9, 5, 7, 8, 9, 6, 1, 5, 9, 9, 6, 3, 5, 8, 6, 0, 0, 7, 7, 3, 6]"],"[0, 7, 2, 3, 0, 0, 0, 0, 3, 3, 0, 7, 0]"]],"type":"(list -> list)","name":"075","solution":"(letII (+ (- 8 randnat) (- randnat randnat)) (λk -> (map (λact -> (- (case (flip 0.5) of True => act#1 | False => randnat) (case randnat of O => randnat | S => (λn -> k#3)))) (take (+ (+ k#1 (case (flip 0.4) of True => randnat | False => k#1)) randnat) #2))))","num_train":4},{"ios":[[["[1, 1, 6, 6, 5, 0, 2, 6, 5, 9, 7, 0, 4, 0, 6, 2, 7, 5, 7, 8, 2, 3, 6, 5, 4, 7, 5, 0, 9, 7]"],"[2, 2, 12, 12, 10, 0, 3, 12, 10, 10, 14, 0, 5, 0, 12, 4, 14, 10, 8, 9, 3, 6, 7, 10, 5, 14, 6, 1, 18, 8]"],[["[3, 6, 6, 1, 3, 1, 3, 9, 6, 8, 8, 8, 5, 9, 2, 6, 8, 3, 4, 6, 6, 5, 4, 3, 3, 4, 8, 7, 9, 4]"],"[3, 12, 12, 10, 6, 18, 12, 18, 12, 16, 16, 16]"],[["[6, 4, 9, 6, 8, 7, 4, 1, 6, 3, 8, 6, 9, 9, 5, 3, 7, 7, 9, 3, 7, 5, 4, 7, 3, 6, 8, 3, 3, 7]"],"[6, 10, 18, 12, 16, 14, 2]"],[["[0, 4, 1, 5, 0, 0, 2, 9, 1, 6, 4, 7, 3, 8, 4, 4, 6, 0, 1, 1, 1, 9, 8, 2, 3, 2, 8, 0, 7, 5]"],"[3, 8, 2, 8, 0]"],[["[0, 5, 6, 9, 2, 1, 8, 0, 7, 6, 5, 6, 6, 1, 3, 6, 2, 5, 7, 9, 3, 3, 2, 4, 2, 4, 1, 9, 5, 4]"],"[0, 10, 12, 10, 4, 2, 9, 1, 14, 12, 10, 7, 12, 2]"],[["[7, 1, 6, 5, 7, 0, 8, 9, 1, 7, 9, 6, 6, 3, 2, 1, 7, 4, 8, 4, 1, 9, 5, 9, 8, 0, 2, 9, 2, 0]"],"[14, 1, 12, 10, 7]"],[["[4, 9, 1, 1, 2, 0, 7, 9, 5, 6, 8, 8, 9, 1, 9, 0, 3, 5, 5, 2, 8, 1, 1, 4, 3, 4, 7, 6, 3, 4]"],"[8, 18, 2, 2]"],[["[5, 3, 2, 9, 5, 4, 0, 3, 9, 9, 7, 8, 2, 9, 5, 9, 5, 7, 9, 2, 4, 7, 7, 7, 1, 4, 8, 4, 1, 6]"],"[5, 6]"]],"type":"(list -> list)","name":"076","solution":"(letII (case randnat of O => 0 | S => (λn -> randnat)) (λk -> (map (λact -> (+ (case (flip 0.1) of True => randnat | False => act#1) (case (flip 0.3) of True => (case (flip 0.1) of True => randnat | False => k#2) | False => act#1))) (take (letII (case randnat of O => k#1 | S => (λn -> k#2)) (λx -> (inc (+ randnat (case randnat of O => x#1 | S => (λn -> randnat)))))) #2))))","num_train":4},{"ios":[[["[8, 1, 9, 2, 3, 3, 8, 9, 0, 5, 5, 2, 7, 7, 0, 6, 2, 7, 2, 2, 1, 2, 7, 0, 5, 7, 9, 1, 5, 4]"],"[21, 3, 13, 3, 5, 9]"],[["[2, 4, 3, 9, 8, 7, 3, 2, 0, 0, 4, 7, 9, 3, 2, 3, 0, 3, 6, 1, 3, 7, 3, 8, 5, 7, 1, 5, 1, 0]"],"[15, 4, 7, 9, 18, 6]"],[["[1, 4, 2, 7, 2, 2, 4, 4, 8, 1, 8, 3, 6, 0, 7, 9, 4, 8, 7, 2, 4, 1, 7, 3, 7, 8, 4, 1, 4, 6]"],"[8, 5, 6, 9, 0, 5]"],[["[0, 5, 0, 0, 8, 0, 5, 3, 6, 1, 2, 9, 0, 2, 6, 4, 8, 2, 5, 1, 9, 2, 6, 2, 7, 0, 7, 7, 9, 0]"],"[11, 8]"],[["[1, 9, 5, 9, 1, 3, 5, 5, 7, 3, 3, 3, 6, 8, 1, 6, 9, 4, 8, 3, 9, 1, 0, 9, 4, 5, 2, 1, 1, 8]"],"[4, 10, 12, 13, 6, 5]"],[["[3, 4, 9, 9, 4, 4, 1, 1, 3, 8, 1, 4, 0, 2, 7, 1, 2, 9, 3, 8, 4, 6, 1, 5, 5, 7, 1, 2, 0, 1]"],"[5, 2, 12, 25, 36, 6]"],[["[9, 6, 7, 7, 0, 5, 5, 9, 8, 5, 9, 7, 1, 2, 0, 1, 2, 8, 7, 1, 4, 6, 5, 3, 5, 8, 7, 2, 0, 1]"],"[12, 6, 7, 16, 0, 25]"],[["[2, 6, 5, 0, 6, 1, 0, 5, 6, 0, 3, 4, 7, 3, 8, 2, 1, 0, 8, 9, 7, 5, 7, 6, 1, 3, 6, 0, 1, 0]"],"[6, 8, 29, 5, 0, 0]"]],"type":"(list -> list)","name":"077","solution":"(letII (- (case 5 of O => randnat | S => (λn -> 9)) randnat) (λk -> (map (λact -> (letII act#1 (λx -> (case randnat of O => randnat | S => (λn -> (+ act#3 randnat)))))) (take (case randnat of O => randnat | S => (λn -> 6)) #2))))","num_train":4},{"ios":[[["[9, 5, 3, 5, 6, 0, 6, 3, 5, 3, 2, 9, 4, 1, 4, 1, 8, 2, 4, 8, 8, 0, 0, 8, 3, 6, 4, 5, 4, 6]"],"[18, 14, 12, 14, 15, 9, 15, 12, 14]"],[["[2, 0, 8, 0, 0, 3, 1, 9, 0, 7, 6, 2, 5, 6, 4, 1, 5, 0, 8, 6, 5, 0, 2, 7, 7, 4, 7, 4, 4, 8]"],"[7, 5, 13, 5, 5, 8, 6, 14, 5]"],[["[6, 0, 9, 1, 4, 6, 7, 0, 7, 6, 5, 0, 5, 2, 7, 9, 2, 8, 2, 3, 5, 9, 6, 1, 2, 3, 3, 9, 5, 2]"],"[23, 17, 26, 18, 21, 23, 24, 17, 24]"],[["[8, 0, 0, 9, 8, 5, 0, 6, 3, 9, 2, 5, 8, 4, 6, 9, 7, 5, 2, 4, 5, 7, 4, 8, 2, 7, 7, 6, 2, 0]"],"[15, 7, 7, 16, 15, 12, 7, 13, 10]"],[["[3, 9, 2, 6, 2, 7, 2, 3, 4, 5, 2, 8, 0, 8, 0, 3, 3, 7, 7, 6, 5, 9, 1, 3, 3, 9, 0, 8, 3, 4]"],"[20, 26, 19, 23, 19, 24, 19, 20, 21, 22, 19, 25, 17, 25, 17, 20, 20]"],[["[8, 3, 1, 8, 7, 6, 3, 5, 8, 4, 1, 7, 3, 9, 7, 3, 1, 7, 2, 9, 9, 4, 6, 4, 2, 2, 2, 9, 0, 0]"],"[11, 6, 4, 11, 10, 9, 6, 8, 11]"],[["[9, 3, 3, 1, 2, 0, 2, 1, 3, 6, 4, 5, 2, 9, 6, 4, 3, 5, 8, 7, 5, 3, 1, 9, 1, 0, 6, 4, 5, 6]"],"[32, 26, 26, 24, 25, 23, 25, 24, 26]"],[["[1, 9, 8, 7, 4, 4, 8, 3, 1, 1, 1, 6, 8, 1, 2, 5, 7, 1, 2, 0, 3, 6, 6, 3, 2, 8, 0, 4, 4, 1]"],"[6, 14, 13, 12, 9, 9, 13, 8, 6]"]],"type":"(list -> list)","name":"078","solution":"(letII (inc (letII randnat (λx -> (+ x#1 x#1)))) (λk -> (map (λact -> (+ act#1 k#2)) (take (letII randnat (λx -> (case (== x#1 randnat) of True => k#2 | False => 9))) #2))))","num_train":4},{"ios":[[["[0, 1, 0, 0, 0, 5, 6, 5, 6, 6, 0, 4, 4, 4, 5, 9, 9, 1, 3, 1, 8, 0, 4, 8, 5, 1, 2, 7, 8, 2]"],"[7, 9, 1, 2, 17, 6, 11]"],[["[0, 3, 3, 1, 0, 0, 0, 5, 5, 8, 9, 9, 2, 3, 6, 4, 5, 4, 4, 4, 7, 6, 9, 9, 1, 0, 8, 0, 7, 0]"],"[1, 3, 2, 8, 10, 3, 6, 5, 1, 4, 2, 7]"],[["[1, 9, 0, 6, 9, 3, 1, 5, 4, 5, 8, 8, 2, 1, 5, 6, 7, 4, 0, 7, 9, 8, 4, 2, 4, 5, 2, 6, 5, 7]"],"[3, 11, 9, 2, 1, 4, 9, 15, 17]"],[["[2, 0, 4, 0, 3, 1, 2, 7, 8, 9, 7, 6, 0, 5, 0, 3, 1, 7, 5, 5, 8, 4, 9, 8, 4, 9, 5, 9, 5, 9]"],"[6, 2, 1, 6, 1, 4, 3, 4, 9, 2, 1]"],[["[7, 6, 2, 2, 0, 5, 8, 0, 4, 7, 5, 3, 4, 1, 8, 9, 6, 5, 7, 9, 9, 1, 5, 0, 2, 5, 4, 0, 5, 3]"],"[5, 7, 6, 4, 1]"],[["[9, 7, 0, 1, 5, 1, 2, 7, 2, 0, 3, 1, 1, 2, 0, 6, 1, 0, 4, 0, 7, 8, 3, 0, 6, 5, 3, 2, 0, 6]"],"[3, 2, 9, 1, 7, 6, 11, 1, 7, 1, 2, 4]"],[["[6, 2, 2, 5, 9, 0, 9, 9, 4, 4, 3, 7, 8, 5, 8, 5, 7, 6, 6, 3, 7, 4, 1, 9, 1, 5, 9, 5, 5, 7]"],"[15, 9, 7, 4, 4, 6, 7, 3, 1, 2]"],[["[2, 0, 8, 2, 2, 8, 9, 7, 4, 1, 3, 5, 9, 6, 9, 5, 2, 0, 3, 0, 3, 1, 0, 8, 1, 1, 5, 2, 7, 2]"],"[2, 8, 1, 1, 1, 14, 2]"]],"type":"(list -> list)","name":"079","solution":"(letII (case (flip 0.8) of True => 4 | False => 3) (λk -> (map (λact -> (letII (case k#2 of O => k#2 | S => (λn -> randnat)) (λx -> (inc (letII 5 (λx -> (case randnat of O => randnat | S => (λn -> (letII act#4 (λx -> (case randnat of O => randnat | S => (λn -> randnat)))))))))))) (take (+ (letII randnat (λx -> (inc randnat))) k#1) #2))))","num_train":4},{"ios":[[["[5, 9, 6, 4, 2, 5, 0, 2, 3, 1, 5, 1, 9, 7, 1, 8, 6, 5, 8, 1, 6, 4, 9, 1, 4, 8, 3, 2, 4, 4]"],"[2, 7, 0, 0, 0, 0, 0, 0, 2, 6, 0, 0, 0]"],[["[2, 1, 8, 5, 6, 7, 9, 4, 7, 1, 9, 9, 6, 8, 6, 3, 4, 0, 8, 0, 5, 4, 1, 6, 9, 5, 9, 8, 8, 9]"],"[0, 8, 10, 0, 16, 0, 0, 6, 0, 2, 11, 0, 1, 1, 5, 0, 0, 6, 5, 1, 0]"],[["[8, 8, 6, 8, 3, 4, 0, 8, 7, 4, 2, 4, 2, 8, 6, 7, 8, 8, 2, 2, 3, 1, 7, 8, 2, 0, 3, 7, 8, 7]"],"[10, 0, 0, 0, 0, 0, 3, 0]"],[["[6, 3, 6, 5, 4, 2, 6, 5, 5, 8, 3, 9, 7, 1, 3, 2, 1, 1, 4, 9, 2, 6, 5, 6, 2, 8, 7, 0, 8, 9]"],"[3, 19, 2, 0, 18, 0, 3, 0, 0, 0, 9, 1, 0, 2, 3]"],[["[9, 2, 9, 8, 7, 9, 0, 2, 1, 9, 1, 0, 2, 8, 3, 2, 1, 8, 0, 0, 3, 4, 0, 2, 7, 6, 7, 1, 8, 1]"],"[0, 0, 0, 0, 6, 1, 6, 3, 1, 0, 0]"],[["[0, 5, 9, 3, 9, 4, 2, 1, 4, 9, 6, 5, 7, 8, 8, 1, 1, 1, 9, 3, 4, 7, 9, 7, 0, 3, 9, 0, 2, 0]"],"[6, 1, 0, 1, 0, 12, 0]"],[["[1, 4, 2, 9, 7, 8, 5, 6, 1, 3, 5, 7, 8, 0, 2, 3, 3, 5, 3, 7, 6, 6, 3, 5, 0, 4, 9, 4, 1, 5]"],"[17, 0, 3]"],[["[1, 2, 2, 8, 3, 6, 3, 6, 7, 0, 0, 2, 8, 7, 9, 2, 2, 2, 0, 3, 2, 2, 0, 2, 0, 8, 6, 9, 7, 0]"],"[1, 7, 1, 0, 1, 9, 0, 2, 6]"]],"type":"(list -> list)","name":"080","solution":"(letII (- 3 6) (λk -> (map (λact -> (case (iseven (case randnat of O => randnat | S => (λn -> randnat))) of True => randnat | False => (- randnat act#1))) (take (inc (+ (letII randnat (λx -> (case k#2 of O => x#1 | S => (λn -> randnat)))) (letII randnat (λx -> (case (flip 0.5) of True => randnat | False => 7))))) #2))))","num_train":4},{"ios":[[["[5, 4, 7, 1, 9, 5, 1, 7, 8, 3, 5, 4, 4, 3, 1, 7, 8, 9, 9, 1, 8, 5, 8, 1, 1, 9, 9, 9, 4, 5]"],"[4, 2, 5, 0, 6, 4]"],[["[8, 1, 5, 1, 3, 0, 4, 4, 4, 4, 0, 0, 1, 5, 0, 5, 5, 5, 0, 3, 1, 3, 2, 4, 8, 5, 6, 6, 8, 4]"],"[7, 0, 1, 0, 2, 0]"],[["[1, 1, 7, 2, 6, 7, 1, 0, 5, 4, 5, 1, 1, 0, 8, 1, 2, 8, 5, 8, 7, 6, 5, 3, 6, 7, 7, 3, 4, 7]"],"[0, 1, 7, 1, 0, 3]"],[["[9, 6, 3, 9, 3, 8, 8, 0, 1, 7, 6, 0, 7, 6, 0, 0, 6, 1, 9, 0, 4, 5, 3, 2, 9, 4, 1, 3, 5, 0]"],"[5, 4, 0, 5, 0, 0]"],[["[5, 8, 1, 5, 9, 1, 0, 4, 8, 3, 1, 3, 5, 2, 4, 3, 3, 6, 9, 8, 7, 9, 3, 2, 0, 3, 5, 6, 6, 3]"],"[0, 4, 0, 5, 0, 0]"],[["[0, 5, 0, 8, 9, 8, 0, 8, 9, 6, 4, 5, 0, 0, 9, 6, 4, 2, 1, 0, 9, 0, 2, 9, 3, 6, 8, 5, 5, 9]"],"[0, 1, 0, 3, 8, 1]"],[["[3, 6, 7, 9, 8, 2, 2, 4, 4, 5, 8, 2, 9, 9, 1, 3, 6, 4, 4, 2, 7, 4, 7, 8, 9, 3, 8, 0, 4, 6]"],"[0, 6, 5, 0, 1, 1]"],[["[4, 5, 9, 7, 7, 5, 9, 7, 1, 6, 0, 3, 8, 2, 1, 9, 3, 3, 3, 4, 1, 7, 2, 9, 9, 3, 4, 5, 3, 9]"],"[0, 0, 5, 7, 6, 0]"]],"type":"(list -> list)","name":"081","solution":"(letII (inc (+ (letII randnat (λx -> (case 2 of O => x#1 | S => (λn -> 3)))) (case (flip 0.8) of True => 3 | False => randnat))) (λk -> (map (λact -> (- act#1 randnat)) (take (inc 5) #2))))","num_train":4},{"ios":[[["[1, 1, 3, 1, 2, 4, 0, 0, 5, 8, 5, 0, 9, 1, 8, 4, 6, 4, 9, 5, 8, 6, 9, 2, 5, 3, 7, 5, 1, 7]"],"[1, 3, 8, 5, 4, 5, 9, 5, 16, 8, 6, 4, 14, 11, 6, 5]"],[["[3, 1, 9, 5, 4, 5, 1, 7, 6, 0, 2, 9, 5, 3, 1, 2, 4, 4, 8, 8, 7, 8, 5, 0, 0, 5, 5, 3, 3, 2]"],"[11, 14, 12, 7, 4, 5, 8, 2, 7, 3, 2, 0, 3]"],[["[9, 4, 3, 3, 7, 4, 3, 8, 2, 7, 0, 8, 7, 7, 4, 3, 9, 8, 2, 0, 8, 9, 4, 3, 5, 1, 4, 7, 2, 6]"],"[17, 4, 10, 0, 10, 12, 8, 27, 1, 0, 2, 2, 1, 7, 8]"],[["[7, 3, 2, 2, 8, 5, 3, 8, 6, 9, 4, 9, 8, 0, 5, 9, 4, 1, 8, 4, 9, 0, 3, 4, 1, 1, 3, 0, 6, 2]"],"[4, 9, 1, 7, 1, 11, 12, 0, 7, 18, 5, 3, 2, 2, 0]"],[["[3, 7, 5, 5, 9, 5, 6, 6, 3, 5, 5, 2, 4, 7, 2, 4, 7, 5, 1, 8, 9, 1, 2, 7, 9, 2, 5, 7, 6, 2]"],"[17, 16, 2, 3, 3, 3, 6, 6, 4, 7, 4, 7, 17, 14, 6, 7]"],[["[8, 4, 7, 1, 5, 0, 8, 3, 0, 3, 8, 6, 9, 1, 1, 5, 0, 7, 1, 9, 7, 0, 2, 9, 8, 5, 4, 3, 1, 5]"],"[1, 28, 13, 0, 11, 10, 10, 10, 0, 1, 3, 3, 11, 1, 0, 1]"],[["[4, 3, 9, 7, 9, 4, 5, 7, 5, 8, 1, 6, 3, 4, 9, 2, 7, 0, 7, 9, 3, 3, 1, 9, 8, 5, 8, 3, 0, 8]"],"[15, 6, 10, 5, 9, 9, 5, 14, 0, 17, 4, 8, 0, 10, 3, 12, 6, 2]"],[["[9, 8, 6, 5, 1, 5, 4, 0, 5, 3, 0, 5, 2, 4, 3, 8, 8, 3, 1, 2, 7, 8, 8, 4, 2, 9, 2, 7, 9, 0]"],"[7, 6, 16, 5, 1, 1, 4, 0, 2, 1, 3, 6, 2, 8, 0, 1, 2, 7]"]],"type":"(list -> list)","name":"082","solution":"(letII (+ 4 (+ 9 randnat)) (λk -> (map (λact -> (case (- randnat randnat) of O => randnat | S => (λn -> (letII act#2 (λx -> (+ (case 0 of O => act#3 | S => (λn -> randnat)) randnat)))))) (take k#1 #2))))","num_train":4},{"ios":[[["[4, 1, 6, 7, 1, 9, 2, 2, 9, 4, 2, 9, 3, 7, 5, 6, 5, 7, 9, 1, 1, 4, 6, 2, 1, 2, 2, 8, 2, 8]"],"[4, 1, 6]"],[["[5, 5, 4, 5, 2, 9, 1, 2, 0, 3, 7, 7, 3, 8, 8, 6, 2, 8, 1, 4, 7, 3, 6, 5, 5, 7, 1, 4, 4, 7]"],"[5, 5, 4, 5, 2, 9, 1, 2, 0, 3]"],[["[6, 4, 4, 4, 2, 1, 9, 6, 4, 4, 8, 6, 5, 3, 9, 9, 3, 2, 8, 1, 1, 2, 2, 1, 0, 8, 0, 6, 4, 3]"],"[6, 4, 4, 4, 2]"],[["[6, 3, 6, 4, 1, 3, 6, 7, 0, 6, 2, 5, 4, 2, 0, 0, 7, 6, 5, 3, 3, 4, 1, 9, 6, 3, 8, 2, 3, 3]"],"[6, 3, 6, 4, 1, 3, 6, 7, 0, 6]"],[["[8, 9, 2, 4, 9, 5, 5, 8, 9, 9, 8, 7, 0, 8, 9, 1, 1, 1, 4, 8, 3, 2, 8, 4, 0, 8, 9, 8, 4, 2]"],"[8, 9, 2]"],[["[5, 6, 7, 2, 9, 7, 1, 4, 4, 1, 7, 1, 8, 3, 7, 4, 6, 1, 8, 8, 6, 5, 5, 3, 7, 3, 1, 0, 9, 2]"],"[5, 6, 7, 2, 9]"],[["[4, 8, 5, 1, 4, 4, 1, 7, 3, 2, 5, 4, 7, 4, 0, 3, 3, 4, 4, 7, 2, 1, 6, 8, 5, 0, 8, 1, 6, 0]"],"[4, 8, 5]"],[["[9, 2, 6, 4, 6, 7, 1, 2, 8, 7, 6, 1, 2, 0, 8, 2, 6, 1, 6, 5, 5, 2, 3, 9, 3, 6, 8, 2, 6, 9]"],"[9, 2, 6]"]],"type":"(list -> list)","name":"083","solution":"(letII (case (flip 0.1) of True => randnat | False => 3) (λk -> (map (λact -> (letII act#1 (λx -> (case (flip 0.1) of True => act#2 | False => act#2)))) (take (+ (letII randnat (λx -> (case randnat of O => x#1 | S => (λn -> randnat)))) k#1) #2))))","num_train":4},{"ios":[[["[1, 1, 5, 3, 3, 7, 5, 2, 3, 5, 7, 7, 7, 1, 4, 4, 4, 5, 9, 6, 6, 5, 4, 3, 9, 2, 5, 8, 0, 1]"],"[1, 0]"],[["[0, 5, 4, 9, 5, 2, 9, 3, 4, 6, 8, 4, 4, 0, 2, 8, 9, 4, 3, 6, 9, 3, 0, 7, 6, 9, 0, 4, 6, 1]"],"[3, 16, 7, 3, 7, 2, 3, 9, 0, 5, 0, 1, 3]"],[["[1, 1, 7, 5, 5, 7, 7, 7, 2, 0, 9, 0, 2, 8, 3, 7, 4, 8, 9, 5, 4, 2, 3, 4, 9, 8, 1, 9, 5, 7]"],"[1, 10, 0, 0, 0, 0]"],[["[7, 4, 2, 3, 2, 1, 0, 6, 3, 4, 7, 7, 0, 2, 8, 4, 2, 1, 9, 1, 7, 2, 8, 4, 9, 5, 7, 1, 0, 6]"],"[0, 12, 5]"],[["[5, 3, 2, 0, 6, 8, 9, 2, 8, 6, 9, 5, 1, 5, 4, 3, 4, 3, 7, 7, 5, 6, 1, 6, 3, 0, 9, 9, 0, 2]"],"[2, 0, 1, 8]"],[["[3, 0, 1, 8, 3, 1, 6, 8, 6, 1, 7, 7, 1, 0, 6, 9, 6, 7, 5, 8, 3, 6, 1, 4, 2, 9, 6, 5, 7, 7]"],"[3, 1, 5, 0, 5]"],[["[1, 4, 1, 7, 3, 5, 3, 0, 7, 6, 0, 9, 7, 8, 3, 3, 0, 7, 5, 5, 4, 2, 9, 6, 2, 0, 7, 6, 0, 0]"],"[6, 0]"],[["[8, 3, 5, 1, 3, 6, 1, 3, 5, 2, 5, 6, 7, 3, 0, 6, 1, 2, 6, 0, 7, 7, 2, 5, 8, 8, 5, 2, 7, 6]"],"[14, 2, 0, 1, 4, 0, 4]"]],"type":"(list -> list)","name":"084","solution":"(letII randnat (λk -> (map (λact -> (case (flip 0.9) of True => randnat | False => act#1)) (take (+ randnat k#1) #2))))","num_train":4},{"ios":[[["[6, 0, 3, 8, 8, 9, 9, 0, 2, 6, 6, 8, 0, 1, 4, 8, 4, 4, 9, 2, 0, 3, 3, 6, 3, 3, 7, 5, 9, 9]"],"[3, 8, 3, 9, 1, 20, 10, 2, 3, 1, 1]"],[["[6, 0, 3, 2, 0, 2, 6, 0, 7, 3, 7, 9, 9, 1, 9, 4, 0, 0, 4, 6, 0, 4, 9, 7, 5, 2, 6, 0, 4, 1]"],"[6, 6, 2, 13, 1, 1, 3, 4]"],[["[1, 3, 0, 0, 8, 2, 8, 3, 8, 3, 8, 7, 5, 2, 6, 4, 1, 3, 2, 8, 4, 4, 0, 4, 1, 3, 7, 3, 8, 1]"],"[2, 9, 2, 7, 8, 4, 3, 6, 27, 4, 7, 7, 4, 11, 2]"],[["[5, 3, 7, 1, 2, 6, 3, 9, 4, 3, 8, 3, 7, 8, 6, 6, 4, 2, 3, 6, 2, 6, 4, 3, 9, 3, 1, 9, 7, 6]"],"[10, 15, 4, 3, 8, 7, 4, 8, 1, 11, 2, 14]"],[["[4, 7, 5, 0, 7, 7, 8, 9, 6, 6, 0, 4, 3, 9, 0, 3, 2, 6, 2, 2, 0, 9, 1, 8, 8, 2, 2, 5, 1, 3]"],"[2, 1, 4]"],[["[6, 7, 1, 7, 7, 3, 5, 2, 3, 8, 2, 6, 5, 5, 9, 5, 4, 1, 4, 2, 3, 7, 9, 9, 9, 8, 3, 0, 0, 5]"],"[6, 4, 1]"],[["[7, 9, 6, 4, 3, 2, 7, 8, 5, 7, 3, 9, 2, 9, 9, 6, 1, 9, 0, 2, 1, 9, 2, 6, 0, 6, 7, 5, 1, 5]"],"[2, 6, 5, 7, 2, 12]"],[["[4, 2, 8, 7, 2, 0, 8, 0, 2, 5, 1, 9, 4, 8, 2, 3, 6, 8, 7, 0, 7, 5, 0, 0, 8, 5, 3, 8, 6, 7]"],"[5, 4, 2, 18, 3, 5, 1]"]],"type":"(list -> list)","name":"085","solution":"(letII (inc (letII randnat (λx -> (+ randnat 2)))) (λk -> (map (λact -> (letII act#1 (λx -> (inc randnat)))) (take (inc (letII randnat (λx -> (+ randnat (inc randnat))))) #2))))","num_train":4},{"ios":[[["[1, 1, 3, 7, 3, 2, 8, 0, 4, 3, 4, 5, 2, 3, 6, 1, 6, 1, 3, 2, 7, 8, 0, 3, 2, 9, 0, 5, 8, 6]"],"[11, 11, 13, 17, 13, 12, 18, 10, 14, 13, 14, 15, 12, 13, 16, 11, 16, 11, 13, 12, 17, 18]"],[["[0, 4, 4, 4, 9, 0, 9, 6, 0, 5, 2, 3, 6, 3, 6, 6, 5, 1, 3, 1, 9, 7, 9, 3, 8, 0, 6, 1, 8, 6]"],"[10, 14, 14, 14, 19, 10, 19, 16, 10, 15, 12, 13, 16, 13, 16, 16, 15, 11, 13]"],[["[6, 7, 8, 9, 7, 3, 3, 4, 8, 5, 3, 3, 3, 9, 2, 3, 3, 3, 7, 3, 8, 9, 4, 8, 0, 0, 0, 7, 8, 6]"],"[16, 17, 18, 19, 17, 13, 13, 14, 18, 15]"],[["[9, 5, 8, 5, 5, 3, 9, 9, 9, 8, 7, 8, 7, 0, 7, 0, 6, 0, 0, 4, 6, 3, 1, 8, 2, 5, 5, 4, 4, 0]"],"[19, 15, 18, 15, 15, 13, 19, 19, 19, 18, 17, 18, 17, 10, 17, 10]"],[["[7, 8, 9, 1, 6, 1, 5, 0, 0, 0, 1, 0, 4, 6, 4, 6, 0, 0, 1, 6, 7, 2, 8, 5, 0, 7, 5, 2, 7, 9]"],"[17, 18, 19, 11, 16, 11, 15, 10, 10, 10, 11, 10, 14, 16, 14]"],[["[5, 2, 2, 5, 6, 7, 9, 5, 9, 9, 5, 9, 6, 4, 2, 4, 1, 3, 9, 2, 1, 9, 3, 8, 7, 5, 4, 2, 3, 2]"],"[15, 12, 12, 15, 16, 17, 19, 15, 19]"],[["[6, 2, 3, 6, 9, 3, 6, 2, 8, 5, 4, 1, 5, 5, 0, 6, 6, 8, 0, 6, 6, 0, 8, 9, 9, 0, 1, 1, 8, 7]"],"[16, 12, 13, 16, 19, 13, 16, 12, 18, 15]"],[["[1, 4, 8, 4, 7, 8, 9, 4, 3, 4, 7, 9, 2, 5, 1, 3, 0, 1, 9, 0, 5, 1, 9, 1, 4, 0, 2, 0, 7, 9]"],"[11, 14, 18, 14, 17, 18, 19, 14, 13, 14, 17, 19, 12]"]],"type":"(list -> list)","name":"086","solution":"(letII 9 (λk -> (map (λact -> (+ (letII randnat (λx -> (inc k#3))) act#1)) (take (+ k#1 randnat) #2))))","num_train":4},{"ios":[[["[3, 9, 8, 0, 9, 3, 1, 7, 4, 6, 3, 7, 4, 8, 0, 6, 9, 7, 7, 0, 7, 9, 6, 4, 8, 2, 8, 5, 2, 0]"],"[3, 9, 8, 0, 9]"],[["[1, 0, 4, 6, 5, 7, 9, 0, 2, 8, 2, 3, 9, 9, 9, 3, 7, 9, 8, 0, 0, 5, 6, 7, 9, 8, 8, 5, 8, 5]"],"[1, 0, 0, 6, 5, 7, 9, 0, 2]"],[["[0, 8, 9, 7, 3, 3, 3, 3, 9, 3, 8, 9, 5, 9, 3, 1, 7, 5, 5, 6, 5, 6, 4, 7, 4, 0, 1, 0, 6, 7]"],"[0, 8, 9, 7, 2, 3, 3, 3, 1]"],[["[5, 4, 5, 9, 3, 2, 9, 8, 8, 3, 9, 8, 1, 3, 6, 0, 8, 2, 9, 5, 7, 7, 6, 0, 5, 9, 5, 2, 2, 0]"],"[5, 4]"],[["[7, 9, 8, 7, 6, 4, 8, 0, 7, 3, 0, 8, 6, 5, 2, 6, 3, 3, 2, 8, 9, 8, 1, 4, 7, 3, 7, 6, 0, 7]"],"[7, 9]"],[["[4, 2, 3, 0, 2, 0, 2, 2, 0, 8, 0, 4, 5, 3, 8, 8, 6, 1, 1, 1, 6, 4, 3, 7, 7, 0, 2, 9, 2, 0]"],"[4, 2]"],[["[2, 0, 6, 0, 4, 8, 5, 3, 1, 4, 9, 5, 3, 9, 1, 6, 4, 5, 1, 3, 9, 8, 7, 7, 9, 0, 0, 0, 8, 6]"],"[2, 0, 6]"],[["[0, 3, 8, 0, 4, 0, 3, 5, 1, 5, 9, 4, 5, 0, 7, 2, 3, 8, 1, 7, 6, 3, 2, 6, 1, 0, 3, 4, 5, 1]"],"[0, 3]"]],"type":"(list -> list)","name":"087","solution":"(letII (letII randnat (λx -> (- randnat (letII randnat (λx -> (inc randnat)))))) (λk -> (map (λact -> (letII act#1 (λx -> (case (flip 0.9) of True => act#2 | False => randnat)))) (take (inc (inc (case (flip 0.5) of True => k#1 | False => randnat))) #2))))","num_train":4},{"ios":[[["[7, 1, 7, 9, 4, 1, 8, 1, 3, 5, 9, 7, 3, 8, 6, 6, 7, 8, 2, 2, 6, 5, 9, 9, 3, 5, 3, 0, 1, 0]"],"[15, 1, 1, 5, 0, 1, 5, 1]"],[["[8, 4, 0, 5, 6, 9, 4, 5, 9, 1, 8, 0, 5, 5, 7, 3, 3, 4, 2, 4, 8, 1, 2, 4, 5, 2, 0, 5, 9, 0]"],"[0, 4, 0, 9, 2, 1, 12, 15]"],[["[5, 3, 0, 4, 8, 8, 4, 0, 3, 7, 3, 8, 6, 2, 5, 7, 8, 3, 2, 2, 3, 3, 6, 5, 1, 3, 6, 7, 5, 1]"],"[2, 0, 0, 2, 8, 0, 1, 0]"],[["[1, 0, 7, 9, 5, 5, 5, 8, 3, 2, 2, 2, 2, 7, 1, 7, 3, 1, 9, 8, 5, 6, 3, 4, 7, 6, 8, 7, 5, 7]"],"[4, 0, 18, 8, 5, 0, 5, 8]"],[["[5, 5, 6, 0, 3, 5, 6, 7, 1, 0, 6, 0, 9, 2, 0, 8, 0, 6, 7, 0, 0, 0, 8, 9, 0, 8, 3, 3, 7, 1]"],"[5, 5, 5, 1, 3, 2, 0, 2]"],[["[7, 1, 8, 1, 5, 7, 1, 8, 6, 8, 9, 0, 3, 3, 0, 1, 4, 9, 0, 5, 6, 9, 7, 3, 8, 0, 7, 8, 0, 9]"],"[1, 4, 10, 1, 0, 4, 1, 6]"],[["[5, 3, 5, 7, 8, 4, 2, 8, 8, 4, 5, 8, 2, 4, 3, 3, 2, 3, 3, 5, 3, 2, 1, 4, 7, 8, 5, 5, 4, 6]"],"[4, 3, 5, 0, 8, 2, 2, 8]"],[["[2, 7, 6, 8, 6, 2, 4, 7, 6, 9, 0, 9, 6, 4, 5, 0, 3, 4, 2, 8, 4, 1, 3, 0, 4, 1, 3, 0, 0, 5]"],"[17, 7, 2, 8, 3, 0, 6, 0]"]],"type":"(list -> list)","name":"088","solution":"(letII 8 (λk -> (map (λact -> (letII randnat (λx -> (case (flip 0.3) of True => act#2 | False => randnat)))) (take k#1 #2))))","num_train":4},{"ios":[[["[2, 8, 4, 8, 2, 9, 6, 7, 2, 0, 4, 1, 9, 7, 7, 3, 4, 9, 4, 7, 2, 7, 3, 0, 2, 3, 3, 4, 1, 3]"],"[2, 1, 0, 10, 2, 1, 1, 14, 3, 0, 0, 2, 8, 0, 4, 3, 5, 0, 15, 1, 3, 5, 10, 2, 1, 1, 4, 9, 1, 2]"],[["[7, 3, 8, 9, 5, 9, 9, 4, 4, 9, 7, 5, 2, 9, 3, 3, 0, 1, 8, 1, 8, 9, 8, 2, 5, 1, 0, 3, 2, 9]"],"[5, 0, 0, 2, 3, 0, 0, 2, 0, 0, 3, 2, 0, 6, 0, 1, 0, 1, 5, 12, 1]"],[["[6, 8, 9, 0, 0, 9, 2, 7, 5, 2, 5, 5, 6, 0, 5, 4, 8, 2, 6, 6, 1, 0, 5, 2, 4, 4, 6, 5, 6, 8]"],"[1, 3, 2, 8, 1, 2, 3, 2, 0, 2, 15, 0, 1, 13, 7]"],[["[1, 2, 4, 7, 4, 7, 8, 0, 4, 8, 1, 3, 5, 5, 6, 0, 2, 7, 1, 4, 2, 6, 9, 7, 5, 3, 4, 1, 9, 5]"],"[10, 3, 2, 1, 6, 5, 8, 3, 6, 1, 1, 1, 1, 7, 7, 2, 0, 7, 3, 9, 2, 0, 4, 3, 2, 4, 0, 0, 3, 3]"],[["[5, 2, 6, 1, 7, 1, 7, 4, 5, 1, 5, 8, 3, 1, 5, 2, 2, 3, 1, 4, 0, 9, 0, 3, 4, 9, 8, 7, 6, 5]"],"[0, 0, 3, 3, 6, 0, 6, 6, 1, 1, 6, 1, 0, 1, 25]"],[["[0, 3, 6, 9, 8, 7, 3, 0, 3, 0, 7, 2, 3, 4, 1, 9, 6, 3, 6, 0, 4, 3, 6, 9, 4, 6, 9, 2, 2, 9]"],"[2, 5, 3, 0, 0, 1, 1, 0, 5, 1, 1, 1, 0, 16, 3, 14, 0, 2, 6, 0, 2]"],[["[5, 0, 7, 7, 5, 5, 7, 8, 5, 3, 7, 3, 6, 1, 2, 1, 4, 8, 8, 9, 3, 4, 0, 8, 1, 2, 2, 4, 8, 5]"],"[7, 11, 2, 8, 2, 3, 0, 0, 1, 6, 1, 5, 9, 15, 7, 3, 0, 8, 13, 17, 7, 11]"],[["[9, 7, 6, 0, 8, 2, 0, 2, 1, 9, 9, 6, 3, 9, 5, 4, 2, 4, 4, 2, 0, 1, 4, 1, 8, 9, 5, 1, 6, 8]"],"[3, 5, 2, 4, 2, 0, 0, 1, 0, 0, 5, 6, 14, 0, 9, 2, 2, 7, 2, 0, 5, 0, 0, 1]"]],"type":"(list -> list)","name":"089","solution":"(letII (+ randnat (+ randnat 9)) (λk -> (map (λact -> (case k#2 of O => act#1 | S => (λn -> randnat))) (take (+ randnat (+ k#1 randnat)) #2))))","num_train":4},{"ios":[[["[8, 5, 3, 4, 9, 5, 7, 8, 1, 8, 7, 2, 5, 8, 0, 2, 6, 9, 0, 6, 5, 8, 8, 6, 0, 8, 4, 4, 2, 6]"],"[8, 5, 3, 4, 9, 5, 7, 8]"],[["[3, 1, 3, 5, 3, 7, 4, 9, 2, 4, 9, 7, 8, 4, 5, 3, 0, 1, 7, 3, 2, 4, 1, 1, 7, 0, 0, 9, 8, 8]"],"[3, 1, 3, 5, 3, 7, 4, 9]"],[["[6, 6, 5, 1, 2, 6, 7, 5, 8, 8, 8, 1, 5, 5, 6, 3, 3, 9, 1, 8, 3, 6, 6, 6, 7, 5, 4, 2, 0, 3]"],"[6, 6, 5, 1, 2, 6, 7, 5]"],[["[8, 0, 5, 6, 7, 9, 8, 2, 2, 2, 3, 9, 3, 7, 2, 3, 0, 1, 7, 9, 6, 8, 8, 5, 2, 7, 4, 6, 2, 0]"],"[8, 0, 5, 6, 7, 9, 8, 2]"],[["[2, 4, 0, 8, 7, 0, 0, 1, 9, 6, 6, 7, 2, 5, 5, 3, 9, 0, 5, 8, 4, 3, 5, 8, 7, 4, 7, 5, 3, 6]"],"[2, 4, 0, 8, 7, 0, 0, 1]"],[["[8, 3, 7, 7, 0, 4, 9, 2, 6, 4, 7, 9, 9, 0, 4, 3, 5, 5, 1, 0, 6, 5, 5, 0, 6, 1, 3, 2, 5, 5]"],"[8, 3, 7, 7, 0, 4, 9, 2]"],[["[4, 4, 5, 4, 2, 9, 4, 1, 9, 1, 9, 9, 9, 4, 2, 1, 5, 2, 0, 8, 4, 8, 4, 5, 4, 7, 9, 6, 3, 6]"],"[4, 4, 5, 4, 2, 9, 4, 1]"],[["[8, 2, 1, 2, 0, 4, 9, 3, 8, 3, 2, 1, 0, 6, 2, 7, 9, 7, 3, 5, 2, 6, 2, 1, 5, 6, 3, 6, 2, 5]"],"[8, 2, 1, 2, 0, 4, 9, 3]"]],"type":"(list -> list)","name":"090","solution":"(letII 8 (λk -> (map (λact -> act#1) (take k#1 #2))))","num_train":4},{"ios":[[["[9, 6, 4, 8, 4, 0, 1, 1, 6, 6, 2, 1, 7, 8, 5, 6, 4, 1, 8, 8, 7, 9, 9, 9, 8, 7, 0, 2, 1, 0]"],"[0, 5, 0, 7]"],[["[4, 0, 7, 6, 3, 1, 4, 5, 7, 6, 4, 5, 7, 2, 9, 0, 6, 9, 8, 3, 7, 2, 7, 0, 2, 5, 1, 6, 0, 7]"],"[0, 5, 7, 0, 6, 0, 4, 5, 0, 1, 4, 6, 1, 20, 0, 0, 0, 0]"],[["[3, 7, 2, 6, 9, 3, 3, 1, 2, 8, 2, 6, 9, 3, 2, 6, 5, 9, 7, 9, 1, 1, 3, 6, 8, 4, 5, 5, 9, 0]"],"[1, 15, 0, 8, 5, 1]"],[["[5, 8, 9, 5, 1, 3, 5, 3, 0, 8, 4, 8, 0, 7, 0, 6, 6, 2, 7, 5, 1, 8, 7, 0, 1, 1, 2, 5, 5, 4]"],"[0, 0, 9, 1]"],[["[8, 4, 9, 5, 2, 9, 6, 1, 2, 6, 1, 0, 1, 3, 4, 3, 2, 8, 8, 6, 7, 3, 9, 5, 3, 5, 9, 0, 7, 4]"],"[3, 0, 10, 2, 2, 0, 4, 11, 2, 5]"],[["[7, 4, 6, 4, 9, 0, 0, 5, 5, 7, 7, 7, 0, 0, 1, 7, 3, 5, 9, 6, 0, 4, 2, 8, 3, 0, 9, 7, 1, 4]"],"[0, 4]"],[["[2, 1, 4, 5, 8, 6, 3, 1, 7, 9, 5, 4, 5, 8, 8, 8, 2, 7, 5, 8, 1, 0, 0, 0, 2, 4, 0, 5, 4, 7]"],"[10, 1, 0, 0, 5, 6, 3, 0, 13, 6, 1, 11, 0, 4, 8, 0]"],[["[2, 5, 2, 5, 8, 6, 5, 8, 5, 1, 2, 1, 0, 4, 9, 9, 3, 1, 1, 4, 5, 4, 0, 3, 8, 2, 0, 4, 4, 4]"],"[2, 4, 2, 0, 8, 3]"]],"type":"(list -> list)","name":"091","solution":"(letII (inc (letII randnat (λx -> (case (iseven randnat) of True => x#1 | False => x#1)))) (λk -> (map (λact -> (letII randnat (λx -> (case (flip 0.3) of True => (letII randnat (λx -> (case (flip 0.3) of True => randnat | False => act#3))) | False => (letII randnat (λx -> (case (flip 0.7) of True => randnat | False => randnat))))))) (take (+ k#1 k#1) #2))))","num_train":4},{"ios":[[["[9, 0, 3, 9, 3, 3, 5, 1, 3, 0, 0, 0, 8, 6, 0, 6, 7, 3, 8, 1, 6, 9, 3, 2, 7, 5, 2, 9, 6, 8]"],"[0, 6, 3, 7, 9, 3, 0, 1, 3, 2, 0, 0]"],[["[1, 2, 5, 3, 5, 0, 6, 9, 9, 5, 6, 4, 7, 2, 9, 5, 5, 9, 3, 5, 8, 1, 9, 2, 3, 8, 8, 2, 0, 1]"],"[1, 5, 5]"],[["[3, 7, 4, 6, 1, 7, 0, 9, 1, 7, 9, 4, 1, 3, 8, 5, 7, 8, 9, 6, 0, 8, 6, 7, 8, 9, 5, 3, 1, 2]"],"[3, 0, 7]"],[["[4, 5, 2, 6, 5, 6, 0, 9, 7, 6, 2, 1, 9, 1, 4, 4, 7, 1, 6, 6, 8, 5, 3, 9, 2, 8, 7, 2, 7, 2]"],"[5, 0, 2]"],[["[2, 9, 5, 0, 3, 4, 0, 4, 8, 3, 4, 2, 5, 5, 6, 5, 7, 9, 2, 6, 3, 7, 4, 1, 5, 5, 1, 7, 2, 5]"],"[1, 3, 5, 14, 7, 0]"],[["[4, 2, 7, 7, 2, 7, 7, 5, 2, 4, 5, 0, 7, 9, 5, 3, 9, 0, 9, 7, 6, 3, 5, 5, 1, 2, 4, 6, 8, 8]"],"[4, 12, 5, 4, 0, 3]"],[["[3, 9, 4, 4, 4, 5, 4, 2, 0, 3, 2, 7, 6, 1, 6, 7, 5, 3, 5, 0, 5, 8, 8, 3, 0, 8, 6, 6, 6, 2]"],"[0, 1, 4, 0, 5, 0, 0, 0, 0, 3, 2, 0, 6, 2, 8, 3, 0, 8, 2, 3, 5]"],[["[6, 0, 4, 1, 1, 3, 9, 4, 0, 5, 9, 6, 6, 9, 2, 8, 5, 0, 6, 6, 9, 0, 5, 6, 9, 4, 7, 5, 0, 7]"],"[6, 1, 1, 6, 4]"]],"type":"(list -> list)","name":"092","solution":"(letII (letII randnat (λx -> (case (flip 0.9) of True => (inc randnat) | False => x#1))) (λk -> (map (λact -> (case randnat of O => act#1 | S => (λn -> randnat))) (take (letII k#1 (λx -> (inc (+ k#2 1)))) #2))))","num_train":4},{"ios":[[["[8, 6, 5, 6, 1, 7, 9, 6, 5, 5, 3, 7, 0, 0, 4, 7, 1, 4, 0, 9, 9, 9, 3, 8, 0, 3, 9, 9, 6, 1]"],"[16, 10, 16, 15, 1, 19, 16, 6, 8, 6, 6]"],[["[1, 0, 3, 0, 1, 1, 1, 2, 8, 3, 9, 1, 0, 9, 7, 7, 1, 1, 1, 9, 4, 4, 2, 5, 9, 0, 4, 7, 4, 3]"],"[1, 13, 3, 0, 1, 1, 1]"],[["[3, 4, 4, 8, 5, 2, 7, 0, 0, 8, 5, 3, 1, 7, 0, 9, 7, 0, 1, 6, 2, 9, 0, 3, 2, 2, 6, 2, 8, 9]"],"[3, 5, 4, 20, 5, 3, 8, 0]"],[["[7, 4, 5, 1, 4, 5, 3, 6, 8, 1, 1, 7, 4, 2, 6, 6, 7, 5, 8, 6, 7, 6, 0, 9, 4, 6, 5, 4, 7, 6]"],"[11, 9, 6, 7, 4, 14, 8, 11, 3, 9, 2, 13, 6, 4]"],[["[4, 5, 3, 0, 6, 1, 1, 0, 0, 6, 0, 4, 4, 1, 0, 4, 7, 9, 8, 9, 8, 7, 7, 7, 7, 3, 1, 7, 2, 5]"],"[19, 6, 3, 8, 25, 3, 4, 11, 1, 9, 5, 9, 4, 6, 4, 16, 13, 12, 14, 14, 18, 15, 7, 23, 14, 3, 19, 3, 4, 5]"],[["[4, 5, 6, 3, 5, 5, 7, 0, 7, 9, 4, 0, 5, 6, 4, 9, 2, 8, 4, 4, 4, 7, 9, 9, 3, 8, 9, 6, 0, 6]"],"[4, 2, 1, 3, 5, 5, 16]"],[["[9, 3, 2, 3, 3, 1, 8, 2, 6, 6, 3, 4, 9, 6, 9, 1, 0, 7, 5, 4, 4, 3, 2, 4, 9, 2, 8, 0, 3, 6]"],"[6, 4, 3, 3, 3, 6, 15, 4]"],[["[9, 0, 7, 9, 5, 9, 5, 1, 0, 4, 2, 1, 9, 6, 0, 0, 2, 6, 0, 3, 1, 6, 3, 0, 4, 2, 2, 3, 2, 7]"],"[11, 17, 7, 15, 5, 9, 5, 8, 3, 5]"]],"type":"(list -> list)","name":"093","solution":"(letII (letII randnat (λx -> (case (flip 0.1) of True => x#1 | False => randnat))) (λk -> (map (λact -> (letII act#1 (λx -> (+ (case randnat of O => randnat | S => (λn -> x#2)) (case k#3 of O => k#3 | S => (λn -> randnat)))))) (take (letII 7 (λx -> (+ x#1 k#2))) #2))))","num_train":4},{"ios":[[["[4, 3, 6, 6, 6, 8, 3, 0, 6, 7, 2, 3, 5, 7, 7, 6, 4, 3, 9, 2, 1, 3, 8, 4, 1, 5, 8, 9, 9, 8]"],"[3, 2, 5, 5, 5]"],[["[7, 3, 1, 8, 8, 5, 3, 9, 2, 3, 8, 3, 4, 2, 8, 2, 6, 8, 2, 4, 1, 2, 2, 0, 5, 4, 8, 5, 1, 5]"],"[6, 2, 0, 7, 7, 4, 2, 8]"],[["[7, 4, 1, 1, 8, 5, 8, 7, 9, 5, 7, 2, 7, 4, 2, 0, 0, 8, 1, 0, 0, 7, 3, 9, 7, 0, 3, 7, 4, 8]"],"[6, 3, 0, 0, 7, 4, 7, 6, 8, 4, 6]"],[["[1, 7, 8, 7, 3, 1, 9, 9, 9, 5, 9, 0, 1, 2, 9, 5, 0, 6, 6, 4, 6, 8, 6, 6, 1, 1, 0, 9, 2, 6]"],"[0, 6, 7, 6, 2, 0, 8, 8, 8, 4, 8]"],[["[9, 7, 4, 8, 9, 7, 4, 4, 7, 4, 8, 8, 7, 7, 3, 8, 0, 6, 5, 6, 6, 3, 8, 8, 6, 0, 5, 5, 9, 5]"],"[8, 6, 3, 7, 8, 6, 3, 3, 6, 3, 7]"],[["[8, 5, 0, 6, 4, 2, 3, 0, 6, 7, 8, 6, 1, 9, 9, 7, 1, 2, 7, 4, 4, 9, 0, 9, 4, 9, 0, 2, 9, 7]"],"[7, 4, 1, 5, 3, 1, 2, 1, 5, 6, 7]"],[["[3, 1, 4, 0, 1, 8, 2, 2, 6, 5, 1, 7, 4, 5, 0, 2, 0, 3, 0, 1, 9, 6, 2, 1, 8, 1, 2, 6, 2, 1]"],"[2, 0, 3, 1]"],[["[0, 0, 3, 9, 9, 5, 6, 4, 8, 2, 4, 4, 2, 6, 6, 7, 4, 9, 4, 2, 2, 9, 6, 0, 6, 1, 1, 8, 0, 1]"],"[1, 1, 2, 8, 8, 4, 5, 3, 7, 1, 3]"]],"type":"(list -> list)","name":"094","solution":"(letII (letII 7 (λx -> (+ 4 x#1))) (λk -> (map (λact -> (case act#1 of O => (inc 0) | S => (λn -> n#1))) (take (case (flip 0.7) of True => k#1 | False => (+ randnat randnat)) #2))))","num_train":4},{"ios":[[["[1, 8, 7, 1, 4, 0, 2, 8, 3, 0, 8, 3, 9, 1, 3, 9, 6, 5, 3, 6, 0, 0, 3, 4, 9, 4, 5, 9, 3, 9]"],"[3, 6, 1]"],[["[5, 0, 8, 1, 1, 0, 4, 6, 2, 2, 6, 7, 7, 8, 3, 2, 9, 0, 7, 7, 8, 8, 3, 7, 0, 9, 5, 7, 3, 6]"],"[2, 16, 10]"],[["[3, 9, 0, 4, 8, 6, 8, 1, 3, 5, 2, 5, 0, 8, 5, 9, 8, 1, 7, 4, 9, 9, 3, 9, 2, 8, 9, 9, 8, 4]"],"[6, 0, 2]"],[["[1, 7, 8, 8, 1, 4, 2, 9, 1, 5, 8, 6, 0, 3, 4, 0, 9, 4, 3, 1, 5, 2, 9, 8, 2, 6, 3, 5, 0, 1]"],"[1, 11, 6]"],[["[3, 4, 2, 9, 5, 5, 8, 8, 5, 8, 0, 4, 5, 7, 6, 3, 4, 0, 9, 7, 9, 4, 5, 1, 6, 5, 2, 0, 2, 9]"],"[8, 4, 2]"],[["[6, 1, 0, 1, 3, 8, 8, 1, 4, 5, 1, 5, 3, 0, 0, 0, 2, 9, 4, 7, 9, 2, 2, 7, 6, 9, 9, 7, 7, 9]"],"[6, 6, 3]"],[["[8, 1, 0, 7, 9, 4, 6, 9, 8, 4, 3, 2, 3, 6, 3, 5, 4, 8, 8, 5, 1, 3, 4, 0, 8, 3, 9, 8, 2, 7]"],"[0, 5, 2]"],[["[0, 0, 3, 8, 3, 7, 7, 6, 1, 5, 3, 6, 2, 7, 7, 7, 5, 7, 3, 6, 0, 3, 7, 7, 5, 6, 4, 3, 5, 9]"],"[3, 0, 6]"]],"type":"(list -> list)","name":"095","solution":"(letII randnat (λk -> (map (λact -> (case (case act#1 of O => randnat | S => (λn -> act#2)) of O => act#1 | S => (λn -> randnat))) (take 3 #2))))","num_train":4},{"ios":[[["[3, 8, 4, 9, 0, 8, 2, 6, 0, 4, 2, 3, 9, 2, 5, 0, 1, 2, 6, 9, 7, 8, 3, 3, 9, 8, 2, 2, 3, 8]"],"[1, 4, 4, 2, 0, 1, 3, 6]"],[["[1, 3, 2, 2, 6, 2, 1, 7, 0, 9, 0, 6, 7, 3, 2, 9, 6, 0, 2, 0, 5, 4, 3, 7, 7, 2, 8, 5, 2, 7]"],"[1, 3, 2, 2, 6, 1, 3, 16]"],[["[4, 9, 0, 3, 3, 2, 9, 4, 7, 8, 1, 8, 9, 5, 0, 6, 7, 7, 4, 3, 3, 9, 2, 1, 7, 5, 8, 0, 3, 1]"],"[4, 9, 14, 0, 1, 2, 1, 4]"],[["[7, 9, 1, 9, 0, 2, 2, 9, 0, 1, 9, 6, 8, 2, 7, 4, 9, 2, 3, 3, 5, 1, 9, 4, 1, 3, 6, 5, 9, 1]"],"[7, 9, 1, 9, 2, 2, 2, 9]"],[["[6, 3, 9, 9, 5, 7, 6, 9, 0, 4, 3, 4, 1, 2, 0, 7, 9, 4, 9, 2, 0, 5, 6, 8, 4, 2, 9, 8, 7, 1]"],"[6, 3, 9, 1, 1, 7, 6, 9]"],[["[0, 5, 3, 4, 7, 4, 4, 5, 6, 4, 1, 4, 1, 2, 9, 6, 9, 5, 5, 0, 0, 9, 4, 9, 0, 1, 1, 7, 1, 6]"],"[8, 9, 4, 4, 0, 4, 4, 0]"],[["[0, 8, 5, 9, 9, 2, 6, 3, 5, 1, 2, 1, 6, 3, 0, 8, 2, 1, 7, 0, 8, 7, 4, 5, 3, 8, 7, 0, 7, 3]"],"[0, 8, 1, 13, 0, 2, 6, 0]"],[["[7, 7, 9, 2, 9, 4, 3, 7, 7, 6, 4, 2, 1, 4, 5, 2, 9, 7, 7, 8, 0, 7, 4, 5, 8, 0, 7, 9, 3, 3]"],"[5, 7, 9, 2, 12, 4, 14, 2]"]],"type":"(list -> list)","name":"096","solution":"(letII (case 6 of O => randnat | S => (λn -> 9)) (λk -> (map (λact -> (case (iseven (letII randnat (λx -> (+ (+ randnat randnat) x#1)))) of True => randnat | False => act#1)) (take (case k#1 of O => (- randnat k#1) | S => (λn -> n#1)) #2))))","num_train":4},{"ios":[[["[8, 4, 7, 0, 3, 5, 0, 4, 1, 9, 6, 7, 7, 4, 1, 4, 3, 1, 8, 1, 1, 8, 0, 9, 7, 4, 7, 8, 5, 0]"],"[0, 0, 0, 1, 0, 0, 0]"],[["[6, 3, 9, 0, 6, 0, 4, 2, 5, 5, 3, 2, 7, 4, 1, 4, 2, 9, 4, 5, 2, 8, 5, 1, 1, 3, 0, 0, 3, 3]"],"[0, 0, 0, 19, 0, 2, 0]"],[["[7, 8, 0, 7, 8, 1, 9, 9, 3, 5, 3, 8, 5, 9, 2, 4, 5, 7, 8, 9, 8, 5, 9, 8, 4, 7, 9, 4, 1, 8]"],"[0, 0, 5, 0, 0, 2, 0]"],[["[5, 6, 0, 4, 5, 3, 1, 3, 4, 8, 4, 1, 8, 9, 4, 5, 8, 5, 5, 7, 7, 4, 0, 0, 0, 6, 7, 7, 6, 5]"],"[6, 0, 0, 1, 3, 2, 1]"],[["[6, 6, 0, 8, 3, 8, 3, 3, 0, 4, 0, 4, 2, 2, 5, 9, 3, 1, 4, 2, 3, 3, 9, 5, 3, 4, 2, 5, 3, 6]"],"[0, 9, 1, 0, 0, 0, 5]"],[["[9, 8, 9, 5, 9, 2, 7, 9, 8, 8, 3, 9, 5, 1, 0, 8, 6, 7, 9, 1, 4, 6, 6, 3, 5, 7, 5, 1, 0, 5]"],"[0, 0, 0, 0, 0, 5, 0]"],[["[5, 3, 3, 0, 9, 8, 4, 6, 6, 1, 1, 3, 0, 9, 2, 9, 6, 8, 7, 1, 1, 1, 6, 8, 6, 9, 9, 8, 6, 5]"],"[3, 4, 0, 0, 0, 0, 0]"],[["[5, 3, 8, 7, 8, 0, 3, 7, 9, 4, 9, 0, 9, 9, 1, 4, 3, 5, 4, 7, 5, 9, 2, 8, 7, 9, 7, 7, 8, 1]"],"[0, 0, 0, 0, 0, 0, 9]"]],"type":"(list -> list)","name":"097","solution":"(letII (inc (inc 5)) (λk -> (map (λact -> (- randnat (inc act#1))) (take k#1 #2))))","num_train":4},{"ios":[[["[7, 2, 8, 6, 5, 6, 4, 8, 0, 9, 7, 2, 8, 6, 0, 7, 7, 9, 1, 5, 1, 1, 5, 4, 8, 8, 9, 5, 6, 2]"],"[7, 2, 8, 6, 5, 6, 4, 8]"],[["[4, 3, 7, 3, 5, 5, 1, 3, 0, 2, 8, 1, 3, 9, 2, 9, 7, 0, 3, 4, 1, 9, 1, 0, 6, 9, 8, 9, 4, 9]"],"[4, 3, 7, 3, 5, 5, 1, 3]"],[["[1, 8, 1, 6, 2, 3, 2, 6, 7, 0, 6, 1, 3, 2, 6, 6, 1, 6, 1, 1, 3, 1, 7, 7, 6, 6, 2, 6, 5, 0]"],"[1, 8, 1, 6, 2, 3, 2, 6]"],[["[7, 7, 5, 2, 9, 3, 1, 6, 7, 9, 7, 6, 4, 5, 3, 2, 7, 4, 3, 1, 6, 4, 3, 1, 8, 4, 1, 9, 8, 0]"],"[7, 7, 5, 2, 9, 3, 1, 6]"],[["[9, 8, 6, 5, 5, 7, 6, 2, 5, 4, 2, 2, 2, 8, 0, 0, 2, 0, 5, 9, 4, 9, 5, 7, 5, 9, 2, 9, 5, 5]"],"[9, 8, 6, 5, 5, 7, 6, 2]"],[["[2, 9, 9, 7, 5, 3, 5, 3, 3, 3, 4, 8, 2, 5, 6, 8, 6, 4, 6, 8, 9, 1, 6, 4, 6, 8, 6, 1, 7, 3]"],"[2, 9, 9, 7, 5, 3, 5, 3]"],[["[4, 2, 3, 5, 2, 6, 4, 2, 3, 8, 8, 4, 7, 9, 6, 3, 1, 6, 7, 0, 1, 2, 7, 5, 4, 2, 4, 2, 2, 7]"],"[4, 2, 3, 5, 2, 6, 4, 2]"],[["[3, 6, 9, 7, 1, 9, 0, 3, 2, 9, 1, 7, 4, 3, 8, 3, 0, 0, 3, 4, 7, 4, 9, 5, 4, 6, 8, 3, 2, 6]"],"[3, 6, 9, 7, 1, 9, 0, 3]"]],"type":"(list -> list)","name":"098","solution":"(letII 7 (λk -> (map (λact -> act#1) (take (inc k#1) #2))))","num_train":4},{"ios":[[["[4, 8, 4, 5, 6, 5, 1, 4, 5, 7, 2, 7, 0, 0, 4, 3, 5, 7, 8, 8, 7, 5, 1, 6, 9, 9, 2, 9, 6, 2]"],"[10, 10, 6, 7, 8, 6, 8, 11, 6, 16, 3, 2]"],[["[6, 4, 5, 8, 4, 4, 0, 8, 6, 6, 1, 8, 5, 4, 3, 4, 6, 4, 8, 8, 5, 9, 0, 9, 4, 7, 5, 3, 8, 3]"],"[8, 6, 7, 6, 6, 6, 8, 6, 8, 5, 3, 2]"],[["[1, 7, 7, 4, 6, 4, 4, 6, 2, 0, 4, 7, 9, 9, 3, 9, 4, 9, 8, 3, 4, 1, 8, 2, 8, 1, 5, 4, 1, 6]"],"[6, 9, 9, 6, 8, 6, 3, 8, 25, 5, 2, 9]"],[["[9, 4, 4, 7, 4, 1, 3, 7, 9, 1, 0, 6, 5, 0, 5, 4, 9, 6, 3, 3, 7, 4, 4, 7, 7, 6, 2, 9, 1, 8]"],"[5, 6, 6, 6, 6, 3, 5, 9, 11, 2, 6, 8]"],[["[6, 9, 8, 3, 9, 0, 9, 3, 1, 2, 2, 2, 2, 6, 3, 6, 4, 1, 8, 8, 2, 0, 1, 7, 4, 3, 8, 1, 8, 8]"],"[6, 6, 6, 18, 11, 2, 2, 5, 2, 4, 6, 4]"],[["[5, 4, 2, 8, 3, 9, 5, 4, 5, 0, 1, 0, 9, 6, 4, 5, 5, 9, 6, 7, 5, 3, 2, 6, 4, 4, 0, 8, 2, 3]"],"[7, 6, 4, 4, 3, 6, 7, 4, 4, 2, 3, 2]"],[["[3, 9, 8, 9, 5, 8, 9, 7, 2, 1, 2, 4, 4, 0, 4, 2, 8, 8, 2, 2, 4, 0, 4, 6, 4, 7, 8, 7, 0, 3]"],"[11, 4, 4, 11, 7, 21, 11, 6, 6, 6, 6, 11]"],[["[6, 1, 7, 0, 6, 6, 3, 0, 1, 8, 2, 3, 6, 2, 2, 0, 1, 8, 7, 0, 1, 1, 1, 0, 9, 1, 5, 5, 6, 5]"],"[6, 3, 6, 2, 10, 3, 5, 6, 2, 6, 6, 6]"]],"type":"(list -> list)","name":"099","solution":"(letII (inc (inc (letII 8 (λx -> (inc x#1))))) (λk -> (map (λact -> (inc (inc (case randnat of O => 4 | S => (λn -> (case (flip 0.5) of True => randnat | False => act#2)))))) (take (inc k#1) #2))))","num_train":4}],"task_info":[{"q_expr":-52.9432734862332,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-69.20784978216051,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-7.997797616967179,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":1},{"q_expr":-43.373778284814776,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-53.96581653273981,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-73.70688854971269,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-51.3450488564956,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-19.53731965497333,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-42.95129417153701,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-7.997797616967179,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":1},{"q_expr":-72.59117079314164,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-43.61939469198104,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-83.33736783774413,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-47.28167757305906,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-40.67550727169769,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-61.99617177487575,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-18.535497931279977,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-64.43609827949643,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-17.588285289067237,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":2},{"q_expr":null,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":0},{"q_expr":-17.05241300518533,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-47.258882200891655,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-56.857939823674776,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-52.77209568438617,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":null,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":0},{"q_expr":-38.34227141623343,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-62.37110193872233,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-52.00996374918945,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-27.634551168928695,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-43.67953834806638,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-22.69835448015168,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-24.529605810401392,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-23.083098265446594,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-29.252559032045866,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-53.2640994014968,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-41.94491039613582,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-28.07846608741206,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-50.59168849210075,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-43.104445351031195,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-67.43162893293162,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-32.51065557006735,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-19.3717459554806,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-39.635829401812856,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-36.238755737334564,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-17.474625970594715,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-62.83105523211457,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-34.940802886702905,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-11.01600274637323,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":2},{"q_expr":-32.61601608572517,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-74.23698446659678,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-50.26911104379836,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-30.435539365690175,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-18.89169199038136,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-55.445199141190805,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-62.853256940098255,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-47.58151101764102,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-50.419917026069996,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-47.27438638742762,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-58.6551531435853,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9},{"q_expr":-29.667803328139158,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-32.295810821567834,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-25.504946779267456,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-64.19075302019853,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-66.6644814815764,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-44.872251579236746,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-52.253978874988746,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-46.759437046477764,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-53.29401369465212,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-40.18879021861393,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-9.201770421293116,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":1},{"q_expr":-49.5811465660525,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-20.04814527873932,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-78.46882577010527,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-26.602078682765132,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-45.18388689271102,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-52.962935823416224,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-60.85537292472558,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-41.34232902709009,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-35.124604828667294,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-56.74433187364922,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-59.28115290445744,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":10},{"q_expr":-46.16779781226016,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-46.57018125383091,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-35.71091110839898,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-15.315141721241343,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-34.91015212423269,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-22.19757919223919,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":4},{"q_expr":-37.85216711528069,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":7},{"q_expr":-16.016587704615986,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":2},{"q_expr":-29.58951215350443,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-7.997797616967179,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":1},{"q_expr":-49.21034011938978,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-36.23178706801847,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-45.19751865001164,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-41.814941554886055,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":6},{"q_expr":-21.425869689176146,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":3},{"q_expr":-48.08816155577618,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":8},{"q_expr":-21.456912495711272,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":5},{"q_expr":-11.01600274637323,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":2},{"q_expr":-43.66021668650129,"p_inputs":[-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137,-69.07755278982137],"size":9}],"path":"out/fuzz-datasets/2024-11-13/14-36-57/dataset.json"}