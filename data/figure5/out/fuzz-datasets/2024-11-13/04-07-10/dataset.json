{"task_dist":{"input_dist":"(Unit)","input_type":"unit","grammar":"PCFG:\n  ?lets -> (letII ?int (λk -> (mapunit (λx -> ?int) ?int))) [1.0]\n  ?int -> randnat [0.4] | #int [0.3-0.0] | 0 [0.008-0.04] | 1 [0.008-0.04] | 2 [0.008-0.04] | 3 [0.008-0.04] | 4 [0.008-0.04] | 5 [0.008-0.04] | 6 [0.008-0.04] | 7 [0.008-0.04] | 8 [0.008-0.04] | 9 [0.008-0.04] | (letII ?int (λx -> (inc ?int))) [0.01] | (letII ?int (λx -> (+ ?int ?int))) [0.01] | (letII ?int (λx -> (- ?int ?int))) [0.01] | (letII ?int (λx -> (case ?int of O => ?int | S => (λn -> ?int)))) [0.01] | (letII ?int (λx -> (case ?bool of True => ?int | False => ?int))) [0.01] | (inc ?int) [0.04] | (+ ?int ?int) [0.04] | (- ?int ?int) [0.04] | (case ?int of O => ?int | S => (λn -> ?int)) [0.04] | (case ?bool of True => ?int | False => ?int) [0.04]\n  ?bool -> #bool [0.08-0.0] | (flip 0.1) [0.08-0.09] | (flip 0.2) [0.08-0.09] | (flip 0.3) [0.08-0.09] | (flip 0.4) [0.08-0.09] | (flip 0.5) [0.08-0.09] | (flip 0.6) [0.08-0.09] | (flip 0.7) [0.08-0.09] | (flip 0.8) [0.08-0.09] | (flip 0.9) [0.08-0.09] | (iseven ?int) [0.07] | (== ?int ?int) [0.07] | (> ?int ?int) [0.07]\n","output_type":"list"},"tasks":[{"ios":[[["nothing"],"[10, 10, 10, 10, 10, 2, 4, 10, 0, 3]"],[["nothing"],"[0, 1, 6, 1, 1]"],[["nothing"],"[0, 5, 5, 2, 5, 0, 5, 2, 5, 0]"],[["nothing"],"[2, 0, 19, 9, 2]"],[["nothing"],"[4, 0, 4, 0, 0, 0, 0, 34, 10, 5, 10, 10, 0, 10, 0, 0, 10]"],[["nothing"],"[0, 2, 1, 0, 0, 0, 1, 6, 6, 7, 0, 4, 0]"],[["nothing"],"[3, 10, 5, 6, 6, 0, 1, 3, 23, 23, 10, 2, 23, 3, 0, 1, 0, 0, 0, 0, 20, 0, 4, 2]"],[["nothing"],"[6, 0, 0, 0, 23, 0, 0, 0, 0, 4, 0, 0, 0, 10, 0, 1, 23, 23, 0, 0, 23, 0, 23, 23, 1, 0]"]],"type":"(unit -> list)","name":"000","solution":"(letII (case (inc 1) of O => (letII 1 (λx -> (inc randnat))) | S => (λn -> randnat)) (λk -> (mapunit (λx -> (case randnat of O => k#2 | S => (λn -> (- randnat randnat)))) (+ randnat k#1))))","num_train":4},{"ios":[[["nothing"],"[5, 4, 3, 0, 0, 2]"],[["nothing"],"[2, 7, 0, 0, 8, 2]"],[["nothing"],"[2, 0, 4, 10, 2, 0]"],[["nothing"],"[4, 5, 2, 0, 2, 1]"],[["nothing"],"[5, 3, 8, 4, 3, 1]"],[["nothing"],"[3, 1, 1, 1, 2, 14]"],[["nothing"],"[10, 1, 0, 0, 14, 0]"],[["nothing"],"[10, 0, 5, 11, 0, 12]"]],"type":"(unit -> list)","name":"001","solution":"(letII (case (flip 0.8) of True => randnat | False => (inc 8)) (λk -> (mapunit (λx -> randnat) (letII k#1 (λx -> (inc 5))))))","num_train":4},{"ios":[[["nothing"],"[4, 4, 4, 0, 19, 0, 0, 13, 6]"],[["nothing"],"[12, 6, 17, 10, 5, 1, 2, 0, 6]"],[["nothing"],"[2, 3, 1, 2, 0, 9, 16, 1, 2]"],[["nothing"],"[0, 0, 6, 9, 9, 4, 0, 6, 2]"],[["nothing"],"[2, 15, 1, 8, 3, 6, 1, 3, 3]"],[["nothing"],"[0, 4, 0, 2, 0, 0, 6, 22, 5]"],[["nothing"],"[6, 4, 1, 6, 2, 7, 2, 1, 5]"],[["nothing"],"[3, 9, 3, 3, 1, 2, 18, 7, 0]"]],"type":"(unit -> list)","name":"002","solution":"(letII 9 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[1, 2, 1, 1, 7, 21, 5, 3, 34, 18, 2, 2, 1, 3, 10, 1, 9, 2, 6, 1, 4, 4]"],[["nothing"],"[2, 3, 14, 8, 3, 5, 1, 5, 4, 7, 6, 3, 3, 1, 6, 7, 3, 8, 13, 4, 13, 13, 8, 4]"],[["nothing"],"[2, 5, 14, 8, 2, 2, 1, 4, 1]"],[["nothing"],"[3, 2, 4, 6, 2, 1, 1, 1, 1, 6, 20, 9, 3, 1, 2, 6, 11, 8, 6, 3, 3, 3, 5, 15, 3, 3, 11, 1, 1, 2, 8]"],[["nothing"],"[1, 2, 2, 11, 1, 4, 12, 3, 4, 3, 8, 5, 3, 2, 4, 2, 8, 3, 7, 2, 1, 11, 4, 2, 5, 2, 2, 6, 6, 6, 8, 7, 1]"],[["nothing"],"[9, 1, 2, 4, 15, 3, 1, 2, 6, 4, 3, 1, 3, 2, 10, 2, 2, 8, 7, 5, 1, 7, 2, 16, 3, 4, 2]"],[["nothing"],"[3, 3, 1, 11, 1, 10, 9, 13]"],[["nothing"],"[2, 12, 2, 6, 1, 6, 12, 10, 4, 4, 6, 6, 7, 3, 3, 2, 18, 2, 1, 3, 3, 5, 2, 10, 6, 1, 2, 5, 1, 2, 1, 7, 2, 2, 1]"]],"type":"(unit -> list)","name":"003","solution":"(letII (letII (+ randnat (+ 7 5)) (λx -> (+ randnat (- (+ x#1 randnat) randnat)))) (λk -> (mapunit (λx -> (inc (case (flip 0.2) of True => randnat | False => randnat))) (case (flip 0.9) of True => (inc k#1) | False => k#1))))","num_train":4},{"ios":[[["nothing"],"[0, 5, 4, 1, 0, 10, 0, 0, 2]"],[["nothing"],"[3, 1, 2, 11, 1, 5, 2, 1, 2]"],[["nothing"],"[11, 9, 0, 1, 1, 2, 2, 7, 5]"],[["nothing"],"[16, 15, 7, 6, 6, 3, 1, 1, 1]"],[["nothing"],"[6, 12, 11, 14, 14, 10, 23, 1, 3]"],[["nothing"],"[1, 0, 7, 0, 6, 3, 14, 14, 0]"],[["nothing"],"[12, 16, 8, 1, 0, 1, 0, 0, 12]"],[["nothing"],"[3, 5, 0, 1, 1, 2, 2, 4, 10]"]],"type":"(unit -> list)","name":"004","solution":"(letII (letII 6 (λx -> (case x#1 of O => randnat | S => (λn -> randnat)))) (λk -> (mapunit (λx -> (case 9 of O => randnat | S => (λn -> randnat))) 9)))","num_train":4},{"ios":[[["nothing"],"[8, 4, 7]"],[["nothing"],"[7, 4, 12]"],[["nothing"],"[14, 9, 7]"],[["nothing"],"[11, 6, 7]"],[["nothing"],"[8, 21, 11]"],[["nothing"],"[7, 14, 5]"],[["nothing"],"[15, 5, 7]"],[["nothing"],"[5, 4, 13]"]],"type":"(unit -> list)","name":"005","solution":"(letII (letII (case 9 of O => 8 | S => (λn -> 9)) (λx -> (- x#1 6))) (λk -> (mapunit (λx -> (+ (letII (case randnat of O => randnat | S => (λn -> randnat)) (λx -> (inc (letII k#3 (λx -> (case 7 of O => x#1 | S => (λn -> k#5))))))) (case randnat of O => (case (flip 0.8) of True => k#2 | False => 7) | S => (λn -> n#1)))) k#1)))","num_train":4},{"ios":[[["nothing"],"[19, 22]"],[["nothing"],"[10, 12, 14]"],[["nothing"],"[20, 8]"],[["nothing"],"[6, 7, 9, 12, 11, 8, 7]"],[["nothing"],"[13, 10, 11]"],[["nothing"],"[14, 7]"],[["nothing"],"[4, 5, 8, 4, 8, 8, 8, 6]"],[["nothing"],"[20, 15]"]],"type":"(unit -> list)","name":"006","solution":"(letII (inc (- 9 (- 7 randnat))) (λk -> (mapunit (λx -> (+ randnat k#2)) (inc randnat))))","num_train":4},{"ios":[[["nothing"],"[5, 4, 2, 3, 1, 5, 10]"],[["nothing"],"[8, 7, 6, 1]"],[["nothing"],"[2, 1, 0, 1, 5, 15, 1]"],[["nothing"],"[14, 4, 0, 5, 6]"],[["nothing"],"[5, 5, 1, 3, 6, 2, 16, 0]"],[["nothing"],"[2, 17, 3, 4, 13, 1, 8, 6, 5, 0, 1, 3, 1, 2]"],[["nothing"],"[2, 0, 4, 1, 2, 3, 2, 11, 2, 11, 0, 0, 4, 5]"],[["nothing"],"[5, 11, 0, 6, 8, 6, 0, 10, 0, 9, 3, 4, 2]"]],"type":"(unit -> list)","name":"007","solution":"(letII (case (flip 0.7) of True => randnat | False => (+ randnat randnat)) (λk -> (mapunit (λx -> (case (flip 0.6) of True => (case (flip 0.4) of True => randnat | False => randnat) | False => randnat)) (+ k#1 (letII (letII (case (flip 0.9) of True => randnat | False => k#1) (λx -> (case 7 of O => 1 | S => (λn -> k#3)))) (λx -> (case (== x#1 randnat) of True => randnat | False => randnat)))))))","num_train":4},{"ios":[[["nothing"],"[1, 0, 5, 2, 10, 24, 0, 7, 18, 2, 4, 2, 5, 1]"],[["nothing"],"[8, 13, 0, 3, 12, 3, 16, 8, 16, 0, 1, 11, 3, 1]"],[["nothing"],"[2, 5, 3, 3, 2, 0, 1, 1, 2, 0, 5, 4, 2, 3]"],[["nothing"],"[2, 7, 3, 9, 0, 1, 0, 6, 4, 0, 1, 2, 4, 0]"],[["nothing"],"[5, 2, 1, 0, 2, 3, 1, 1, 0, 3, 0, 3, 1, 0]"],[["nothing"],"[8, 3, 0, 1, 5, 0, 14, 9, 0, 7, 0, 0, 9, 0]"],[["nothing"],"[1, 1, 1, 0, 2, 1, 1, 1, 8, 1, 3, 2, 0, 12]"],[["nothing"],"[0, 3, 4, 4, 5, 1, 6, 6, 3, 0, 4, 0, 5, 0]"]],"type":"(unit -> list)","name":"008","solution":"(letII (inc 9) (λk -> (mapunit (λx -> randnat) (letII (+ (case k#1 of O => k#1 | S => (λn -> n#1)) randnat) (λx -> (+ 4 k#2))))))","num_train":4},{"ios":[[["nothing"],"[2, 2, 2, 2, 6, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2]"],[["nothing"],"[6, 2, 2, 6, 2, 2, 6]"],[["nothing"],"[6, 2, 6, 2, 6, 6, 2]"],[["nothing"],"[2, 2, 2, 6, 2, 2, 2, 2]"],[["nothing"],"[6, 2, 2, 2, 2, 2, 2, 6]"],[["nothing"],"[2, 2, 6, 2, 2, 2, 2]"],[["nothing"],"[2, 6, 6, 2, 2, 2]"],[["nothing"],"[2, 6, 6, 2, 2, 2, 6]"]],"type":"(unit -> list)","name":"009","solution":"(letII (case (== randnat 5) of True => (case (flip 0.6) of True => randnat | False => randnat) | False => 6) (λk -> (mapunit (λx -> (case (flip 0.2) of True => k#2 | False => 2)) (case (case (> k#1 k#1) of True => randnat | False => (letII 6 (λx -> (inc k#2)))) of O => k#1 | S => (λn -> (letII randnat (λx -> (+ randnat k#3))))))))","num_train":4},{"ios":[[["nothing"],"[10, 3, 3, 1]"],[["nothing"],"[4, 9, 2]"],[["nothing"],"[4, 2]"],[["nothing"],"[5, 6, 3]"],[["nothing"],"[4, 1]"],[["nothing"],"[4, 1, 14]"],[["nothing"],"[3, 4, 4]"],[["nothing"],"[3, 1, 2, 6, 4, 29, 1]"]],"type":"(unit -> list)","name":"010","solution":"(letII (inc (- (letII 3 (λx -> (case (flip 0.7) of True => randnat | False => randnat))) 5)) (λk -> (mapunit (λx -> (letII (+ k#2 9) (λx -> (inc randnat)))) (+ randnat (inc k#1)))))","num_train":4},{"ios":[[["nothing"],"[15, 10, 6, 6, 5, 2, 19, 24]"],[["nothing"],"[14, 6, 17, 7, 10, 18]"],[["nothing"],"[4, 23, 8]"],[["nothing"],"[7, 9, 29]"],[["nothing"],"[5, 7, 7, 4]"],[["nothing"],"[8, 4, 7, 4, 4, 5, 11, 2, 6, 23, 3, 3, 2, 4, 12, 17]"],[["nothing"],"[14, 4, 5, 2, 2, 3]"],[["nothing"],"[13, 8, 6, 15, 12, 24, 2, 6]"]],"type":"(unit -> list)","name":"011","solution":"(letII (inc (letII 7 (λx -> (inc randnat)))) (λk -> (mapunit (λx -> (letII randnat (λx -> (inc (letII randnat (λx -> (+ randnat randnat))))))) (inc (case (flip 0.9) of True => k#1 | False => 5)))))","num_train":4},{"ios":[[["nothing"],"[2, 9, 0, 9, 8, 8, 4, 9, 3, 3]"],[["nothing"],"[10, 6, 9, 4, 8, 10, 10, 0, 9, 0]"],[["nothing"],"[9, 5, 6, 10, 1, 10, 6, 2, 5, 6]"],[["nothing"],"[8, 7, 5, 0, 9, 3, 10, 7, 0, 7]"],[["nothing"],"[2, 5, 0, 2, 0]"],[["nothing"],"[10, 5, 8, 0, 1, 9, 0, 5, 10, 9]"],[["nothing"],"[9, 9, 10, 1, 4, 9, 9, 4, 3, 7]"],[["nothing"],"[10, 10, 0, 5, 10, 9, 0, 7, 8, 5]"]],"type":"(unit -> list)","name":"012","solution":"(letII (letII (+ randnat randnat) (λx -> (inc (letII randnat (λx -> (case randnat of O => x#2 | S => (λn -> 9))))))) (λk -> (mapunit (λx -> (- k#2 randnat)) k#1)))","num_train":4},{"ios":[[["nothing"],"[1, 2, 3, 9]"],[["nothing"],"[5, 12, 4]"],[["nothing"],"[6, 0, 7, 0, 10, 0, 2, 0, 1, 1, 3]"],[["nothing"],"[1, 5, 3]"],[["nothing"],"[4, 1, 0, 10, 7, 2, 0, 3, 2, 2, 3, 3, 3]"],[["nothing"],"[8, 0, 8, 5, 2]"],[["nothing"],"[1, 0, 1, 5, 1, 2]"],[["nothing"],"[7, 4, 0, 5, 4]"]],"type":"(unit -> list)","name":"013","solution":"(letII (inc randnat) (λk -> (mapunit (λx -> (letII k#2 (λx -> (case 7 of O => (- k#3 (case (flip 0.9) of True => k#3 | False => randnat)) | S => (λn -> randnat))))) (letII (- k#1 (inc (- randnat k#1))) (λx -> (inc (+ randnat randnat)))))))","num_train":4},{"ios":[[["nothing"],"[3, 11, 10, 10, 10, 5, 3, 4, 5, 16, 6, 1, 8, 9, 9]"],[["nothing"],"[5, 2, 9, 10, 16, 4, 6, 8, 6, 1]"],[["nothing"],"[10, 5, 7, 2, 6, 18, 0, 3, 25, 7, 9, 14, 2]"],[["nothing"],"[12, 3, 10, 9, 0, 15, 23, 2, 5]"],[["nothing"],"[10, 14, 4, 3, 5, 5, 2, 9, 5, 8, 4, 11]"],[["nothing"],"[4, 12, 2, 13, 9, 3, 13, 4, 15, 24, 6, 21, 19, 7, 0, 5, 7, 3, 3, 2, 6, 23, 10, 14, 10]"],[["nothing"],"[7, 3, 7, 9, 6, 9, 7, 12, 6, 4, 10, 13]"],[["nothing"],"[34, 13, 12, 2, 18, 7, 33, 0, 6, 16, 6, 5, 18]"]],"type":"(unit -> list)","name":"014","solution":"(letII randnat (λk -> (mapunit (λx -> (+ randnat (case k#2 of O => randnat | S => (λn -> (case (letII randnat (λx -> (inc randnat))) of O => n#1 | S => (λn -> randnat)))))) (+ (case (flip 0.3) of True => randnat | False => 9) (case (flip 0.2) of True => k#1 | False => randnat)))))","num_train":4},{"ios":[[["nothing"],"[2, 15, 3, 1]"],[["nothing"],"[1, 0]"],[["nothing"],"[5, 7, 2, 0, 1]"],[["nothing"],"[1, 4, 0, 1, 3, 1]"],[["nothing"],"[1, 4, 11, 3, 4, 1, 7, 3, 25]"],[["nothing"],"[4, 18, 0, 1, 14]"],[["nothing"],"[1, 4, 0]"],[["nothing"],"[4, 1, 1, 1, 0]"]],"type":"(unit -> list)","name":"015","solution":"(letII randnat (λk -> (mapunit (λx -> randnat) (inc (letII randnat (λx -> (inc k#2)))))))","num_train":4},{"ios":[[["nothing"],"[9, 9, 6, 9, 6, 6, 6, 6, 9]"],[["nothing"],"[6, 6, 6, 9, 6, 9, 6, 6]"],[["nothing"],"[6, 6, 9, 6, 6, 6, 6, 6]"],[["nothing"],"[6, 9, 6, 6, 9, 6, 6, 6, 6]"],[["nothing"],"[9, 6, 6, 6, 6, 6, 6, 6, 9]"],[["nothing"],"[9, 6, 6, 9, 6, 9, 6, 6]"],[["nothing"],"[6, 6, 6, 6, 6, 6, 9, 9, 9]"],[["nothing"],"[9, 9, 6, 6, 6, 6, 6, 6]"]],"type":"(unit -> list)","name":"016","solution":"(letII (inc (case (flip 0.3) of True => 8 | False => 7)) (λk -> (mapunit (λx -> (case k#2 of O => (letII randnat (λx -> (- randnat randnat))) | S => (λn -> (case (flip 0.7) of True => 6 | False => 9)))) k#1)))","num_train":4},{"ios":[[["nothing"],"[11, 6, 5, 3, 3, 6, 5, 4, 4, 13, 5, 11, 5, 2]"],[["nothing"],"[2, 2, 7, 3, 6]"],[["nothing"],"[5, 5, 2, 8, 2, 2, 5, 2, 7, 4, 5, 3, 3, 4]"],[["nothing"],"[2, 10, 6, 9]"],[["nothing"],"[8, 6, 9, 9]"],[["nothing"],"[7, 5, 14, 2, 11, 8, 4, 2, 5, 6, 10]"],[["nothing"],"[6, 6, 3, 3, 4, 10, 3, 17, 3, 2, 10, 3, 6, 6, 8, 6]"],[["nothing"],"[5, 4, 2, 6, 7, 4]"]],"type":"(unit -> list)","name":"017","solution":"(letII (case (== 6 randnat) of True => (case 7 of O => randnat | S => (λn -> randnat)) | False => randnat) (λk -> (mapunit (λx -> (inc (letII randnat (λx -> (inc (case (flip 0.6) of True => randnat | False => x#1)))))) (case randnat of O => randnat | S => (λn -> (inc (+ randnat randnat)))))))","num_train":4},{"ios":[[["nothing"],"[29, 13, 12, 14, 12, 11, 22, 14, 11]"],[["nothing"],"[25, 9]"],[["nothing"],"[22, 14]"],[["nothing"],"[15, 27]"],[["nothing"],"[14, 12, 18, 12, 30]"],[["nothing"],"[37, 8]"],[["nothing"],"[17, 13]"],[["nothing"],"[5, 32]"]],"type":"(unit -> list)","name":"018","solution":"(letII (case (flip 0.1) of True => (inc 2) | False => 7) (λk -> (mapunit (λx -> (inc (+ (+ k#2 randnat) randnat))) (inc (inc (letII randnat (λx -> (- (inc x#1) randnat))))))))","num_train":4},{"ios":[[["nothing"],"[5, 5, 0, 0, 4]"],[["nothing"],"[4, 1, 1, 1, 6]"],[["nothing"],"[4, 3, 4, 1, 2]"],[["nothing"],"[4, 4, 8, 4, 0]"],[["nothing"],"[6, 7, 6, 1, 6]"],[["nothing"],"[5, 1, 2, 5, 5]"],[["nothing"],"[7, 0, 0, 1, 7]"],[["nothing"],"[2, 0, 0, 0, 0]"]],"type":"(unit -> list)","name":"019","solution":"(letII randnat (λk -> (mapunit (λx -> (letII 7 (λx -> (case (flip 0.5) of True => k#3 | False => randnat)))) 5)))","num_train":4},{"ios":[[["nothing"],"[6, 0, 3, 0, 7]"],[["nothing"],"[7, 10, 1, 0, 10, 1]"],[["nothing"],"[7, 0, 2, 2, 9]"],[["nothing"],"[0, 2, 1, 21, 2]"],[["nothing"],"[2, 7, 10, 7, 7]"],[["nothing"],"[2, 7, 1, 3, 0, 1, 0, 0, 7, 0, 4, 10, 7, 5, 2]"],[["nothing"],"[3, 7, 16, 7, 2, 4, 1]"],[["nothing"],"[1, 7, 1, 6, 0, 0, 2, 7]"]],"type":"(unit -> list)","name":"020","solution":"(letII (letII (+ 7 9) (λx -> (inc (inc randnat)))) (λk -> (mapunit (λx -> (case (flip 0.8) of True => randnat | False => 7)) (inc (letII 8 (λx -> (case 5 of O => x#1 | S => (λn -> k#3))))))))","num_train":4},{"ios":[[["nothing"],"[4, 0, 9, 0, 0, 4, 0, 0]"],[["nothing"],"[6, 21, 14, 2, 0, 0, 1, 2]"],[["nothing"],"[7, 10, 2, 4, 0, 0, 0, 6, 0, 1, 0, 2]"],[["nothing"],"[0, 2, 1, 0, 9]"],[["nothing"],"[0, 0, 0, 2]"],[["nothing"],"[0, 6, 0, 11, 0, 0]"],[["nothing"],"[1, 0, 0, 2, 7, 0, 0, 0]"],[["nothing"],"[2, 0, 0, 2, 0, 0, 0, 0]"]],"type":"(unit -> list)","name":"021","solution":"(letII 4 (λk -> (mapunit (λx -> (- randnat k#2)) (+ k#1 (letII randnat (λx -> (case (flip 0.7) of True => x#1 | False => k#2)))))))","num_train":4},{"ios":[[["nothing"],"[4, 5, 0, 16]"],[["nothing"],"[2, 2, 7, 0]"],[["nothing"],"[0, 6, 1, 5]"],[["nothing"],"[4, 16, 3, 4]"],[["nothing"],"[0, 1, 5, 1]"],[["nothing"],"[6, 0, 2, 14]"],[["nothing"],"[0, 6, 0, 1]"],[["nothing"],"[0, 2, 6, 0]"]],"type":"(unit -> list)","name":"022","solution":"(letII 4 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 0, 6, 2, 8, 0, 2, 1]"],[["nothing"],"[5, 12, 5, 14]"],[["nothing"],"[0, 0, 19, 3, 1, 0, 4, 0, 6, 0, 0]"],[["nothing"],"[4, 5, 5, 1, 2, 0]"],[["nothing"],"[8, 9, 11]"],[["nothing"],"[10, 25, 14]"],[["nothing"],"[7, 4, 5, 0, 12, 11, 2, 17]"],[["nothing"],"[1, 3, 11]"]],"type":"(unit -> list)","name":"023","solution":"(letII (case 1 of O => 6 | S => (λn -> randnat)) (λk -> (mapunit (λx -> (- (inc (+ randnat randnat)) k#2)) (case (+ 5 k#1) of O => k#1 | S => (λn -> (case (flip 0.2) of True => 3 | False => n#1))))))","num_train":4},{"ios":[[["nothing"],"[9, 3, 4, 3, 10, 8, 4, 5, 7, 6]"],[["nothing"],"[7, 8, 4, 2, 4, 4, 7]"],[["nothing"],"[4, 4, 2, 4, 5, 6, 23, 3, 3, 7, 13, 6, 3, 8, 7]"],[["nothing"],"[6, 16, 2]"],[["nothing"],"[6, 4, 3, 2, 3, 6, 8, 5, 6, 7, 7, 2, 8, 2, 3, 11, 5, 6]"],[["nothing"],"[3, 3, 14, 3, 15, 8, 5, 6, 10, 7]"],[["nothing"],"[5, 6]"],[["nothing"],"[7, 6]"]],"type":"(unit -> list)","name":"024","solution":"(letII (case (flip 0.7) of True => randnat | False => (+ randnat 4)) (λk -> (mapunit (λx -> (+ randnat 2)) (inc (case (flip 0.8) of True => randnat | False => randnat)))))","num_train":4},{"ios":[[["nothing"],"[2, 10, 2, 5, 9, 1, 2, 7, 0, 0, 2, 1, 8]"],[["nothing"],"[0, 5, 5, 0, 5, 5, 1, 5]"],[["nothing"],"[1, 2, 1, 5, 11, 10, 0, 2]"],[["nothing"],"[1, 15, 5]"],[["nothing"],"[5, 3, 0]"],[["nothing"],"[7, 0, 0, 2]"],[["nothing"],"[1, 3, 0, 8, 4, 2, 2, 0, 1, 4, 0, 2, 0, 0, 7, 2, 2]"],[["nothing"],"[2, 2, 5, 2, 2, 0, 2, 2, 0, 2, 0, 1, 11, 15, 2, 4, 2, 2]"]],"type":"(unit -> list)","name":"025","solution":"(letII (inc (inc (- randnat randnat))) (λk -> (mapunit (λx -> (case randnat of O => k#2 | S => (λn -> randnat))) (case (case (flip 0.6) of True => k#1 | False => (- k#1 randnat)) of O => randnat | S => (λn -> (+ k#2 (letII 4 (λx -> (+ randnat randnat)))))))))","num_train":4},{"ios":[[["nothing"],"[0, 1, 14, 5, 0, 2, 1, 1]"],[["nothing"],"[2, 1, 0, 7, 2, 0, 3, 0, 5, 3, 5, 16, 0, 0, 1]"],[["nothing"],"[0, 0, 5, 14, 0, 4, 24, 1]"],[["nothing"],"[0, 2, 10, 7, 0, 0, 1, 0, 4, 3, 1, 4, 8, 0, 4]"],[["nothing"],"[1, 3, 1, 8, 2, 0, 0, 4]"],[["nothing"],"[1, 2, 2, 5, 0, 5, 1, 11]"],[["nothing"],"[1, 12, 2, 6, 5, 2, 4, 2]"],[["nothing"],"[3, 10, 3, 0, 2, 0, 2, 2]"]],"type":"(unit -> list)","name":"026","solution":"(letII (inc (letII 2 (λx -> (case (> randnat randnat) of True => 6 | False => randnat)))) (λk -> (mapunit (λx -> randnat) (+ (case randnat of O => 9 | S => (λn -> 2)) 6))))","num_train":4},{"ios":[[["nothing"],"[9, 2, 9, 3, 5, 9, 3, 9, 7, 9, 4]"],[["nothing"],"[6, 6, 5, 6, 6, 11, 10, 6, 7]"],[["nothing"],"[9, 5, 2, 12, 19, 3, 9, 3, 3, 9, 9, 6, 6, 9, 9, 9]"],[["nothing"],"[3, 4, 5, 4, 4, 4, 3, 3, 4, 4, 4, 5, 4, 4, 4, 18, 2, 1, 4, 11, 4]"],[["nothing"],"[16, 6, 1, 1, 7, 3, 1, 7, 2, 7, 3, 7, 10, 7, 4, 4, 6]"],[["nothing"],"[3, 3, 3, 3, 6, 1, 3, 3, 2, 3, 3, 3, 1]"],[["nothing"],"[4, 6, 4, 4, 2, 4, 8, 12, 4, 3, 1, 5, 4, 4, 4, 1, 4, 4]"],[["nothing"],"[11, 1, 1, 3, 8, 5, 11, 3, 4, 11, 4, 11, 11, 2, 11, 3, 11, 6, 3, 11, 3, 11, 1, 17, 7, 4, 4, 13, 10, 26]"]],"type":"(unit -> list)","name":"027","solution":"(letII (case randnat of O => (inc 7) | S => (λn -> randnat)) (λk -> (mapunit (λx -> (letII k#2 (λx -> (inc (case (flip 0.4) of True => x#1 | False => randnat))))) (+ randnat (letII k#1 (λx -> (+ randnat 8)))))))","num_train":4},{"ios":[[["nothing"],"[6, 15, 3]"],[["nothing"],"[7, 10, 9]"],[["nothing"],"[1, 0, 1]"],[["nothing"],"[2, 6, 10]"],[["nothing"],"[0, 0, 5]"],[["nothing"],"[6, 4, 1]"],[["nothing"],"[1, 2, 16]"],[["nothing"],"[38, 7, 3]"]],"type":"(unit -> list)","name":"028","solution":"(letII 9 (λk -> (mapunit (λx -> randnat) 3)))","num_train":4},{"ios":[[["nothing"],"[17, 5, 2]"],[["nothing"],"[1, 7, 1]"],[["nothing"],"[0, 0, 2]"],[["nothing"],"[7, 0, 4]"],[["nothing"],"[0, 3, 0]"],[["nothing"],"[0, 17, 7]"],[["nothing"],"[0, 2, 0]"],[["nothing"],"[20, 0, 0]"]],"type":"(unit -> list)","name":"029","solution":"(letII 1 (λk -> (mapunit (λx -> (case (flip 0.8) of True => randnat | False => (- k#2 randnat))) (inc (inc k#1)))))","num_train":4},{"ios":[[["nothing"],"[3, 6, 1]"],[["nothing"],"[7, 7, 2]"],[["nothing"],"[1, 4, 2]"],[["nothing"],"[4, 7, 4]"],[["nothing"],"[6, 2, 6]"],[["nothing"],"[3, 2, 1]"],[["nothing"],"[2, 1, 2]"],[["nothing"],"[2, 9, 5]"]],"type":"(unit -> list)","name":"030","solution":"(letII 3 (λk -> (mapunit (λx -> (inc randnat)) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 2, 2, 2, 4, 4, 2, 2, 2, 2, 4, 4, 2, 2]"],[["nothing"],"[4, 2, 2, 2, 4, 4, 2, 2, 4, 2, 4, 4, 2, 2]"],[["nothing"],"[2, 4, 2, 0, 4, 2, 3, 11, 2, 4, 4, 2, 2, 5]"],[["nothing"],"[2, 2, 9, 4, 2, 2, 2, 4, 4, 2, 4, 2, 2, 4]"],[["nothing"],"[4, 2, 2, 2, 0, 3, 4, 1, 2, 4, 4, 2, 2, 4]"],[["nothing"],"[4, 2, 2, 4, 4, 4, 4, 4, 1, 2, 2, 4, 2, 4]"],[["nothing"],"[2, 4, 2, 2, 2, 2, 4, 2, 4, 4, 4, 2, 2, 2]"],[["nothing"],"[4, 2, 4, 1, 2, 0, 4, 2, 2, 2, 2, 4, 2, 4]"]],"type":"(unit -> list)","name":"031","solution":"(letII (+ 2 (- 4 4)) (λk -> (mapunit (λx -> (case (== randnat randnat) of True => randnat | False => (case (flip 0.5) of True => 4 | False => k#2))) (+ (inc 7) (letII k#1 (λx -> (+ 4 x#1)))))))","num_train":4},{"ios":[[["nothing"],"[12, 1, 1, 1, 1, 5]"],[["nothing"],"[8, 0, 0, 0, 0, 10]"],[["nothing"],"[2, 0, 10, 1, 6, 0]"],[["nothing"],"[0, 0, 0, 0, 6, 3]"],[["nothing"],"[6, 1, 1, 9, 13, 0]"],[["nothing"],"[11, 0, 3, 0, 0, 5]"],[["nothing"],"[2, 3, 1, 7, 0, 0]"],[["nothing"],"[7, 1, 2, 17, 1, 7]"]],"type":"(unit -> list)","name":"032","solution":"(letII (inc (- (- 7 8) (+ 1 randnat))) (λk -> (mapunit (λx -> (letII randnat (λx -> (case (== x#1 x#1) of True => x#1 | False => (case (+ k#3 randnat) of O => randnat | S => (λn -> n#1)))))) (inc 5))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 4]"],[["nothing"],"[6, 0, 6]"],[["nothing"],"[1, 1, 2, 5, 1, 13, 1, 2]"],[["nothing"],"[1, 4]"],[["nothing"],"[8, 0, 1, 3, 23, 0, 5, 0, 1, 14, 0, 8, 12, 5, 1, 0, 8]"],[["nothing"],"[1, 0, 11, 0, 17, 2, 3, 0, 2, 0, 0]"],[["nothing"],"[0, 7, 0, 1, 3]"],[["nothing"],"[2, 3, 1, 8, 0, 1, 0, 2, 2]"]],"type":"(unit -> list)","name":"033","solution":"(letII (letII (- randnat 2) (λx -> (inc (letII 0 (λx -> (case randnat of O => x#2 | S => (λn -> n#1))))))) (λk -> (mapunit (λx -> randnat) (inc k#1))))","num_train":4},{"ios":[[["nothing"],"[9, 9, 8, 7, 9, 7, 7]"],[["nothing"],"[9, 20, 11, 7, 7]"],[["nothing"],"[7, 13, 10, 11]"],[["nothing"],"[7, 8, 19, 20, 7, 15]"],[["nothing"],"[16, 8, 13, 7, 8, 7, 7]"],[["nothing"],"[11, 7, 10, 8, 10, 7]"],[["nothing"],"[10, 11, 14, 7, 8, 7, 7, 12]"],[["nothing"],"[7, 12, 7, 11, 7, 10, 11]"]],"type":"(unit -> list)","name":"034","solution":"(letII 7 (λk -> (mapunit (λx -> (+ (+ k#2 0) randnat)) (letII (- randnat randnat) (λx -> (case (== randnat randnat) of True => k#2 | False => randnat))))))","num_train":4},{"ios":[[["nothing"],"[1, 2, 5, 13, 9]"],[["nothing"],"[1, 1, 8, 5, 4]"],[["nothing"],"[1, 5, 4, 13, 1]"],[["nothing"],"[3, 1, 5, 2, 5]"],[["nothing"],"[2, 3, 1, 3, 7]"],[["nothing"],"[6, 8, 1, 5, 1]"],[["nothing"],"[5, 2, 13, 1, 7]"],[["nothing"],"[4, 7, 5, 2, 8]"]],"type":"(unit -> list)","name":"035","solution":"(letII (case (case 7 of O => 0 | S => (λn -> n#1)) of O => (- randnat 5) | S => (λn -> n#1)) (λk -> (mapunit (λx -> (letII randnat (λx -> (inc x#1)))) (case randnat of O => k#1 | S => (λn -> k#2)))))","num_train":4},{"ios":[[["nothing"],"[8, 3, 1, 5, 7, 14, 1, 6, 2, 1, 2, 0, 7, 4, 9, 4, 3, 4, 1, 7, 12, 13, 3]"],[["nothing"],"[3, 6, 0, 4, 0, 11, 0, 3, 0, 2, 1, 1, 5, 2, 3, 2, 5, 1, 0, 15, 9]"],[["nothing"],"[0, 0, 8, 4, 1, 1, 8, 5, 0, 7, 1, 6, 0, 0, 4, 2, 4, 1, 1, 1, 0, 5, 5, 2]"],[["nothing"],"[9, 0, 5, 0, 5, 2, 2, 3, 1, 13, 0, 0, 6, 1, 0, 1, 0, 0, 2, 0, 1, 6]"],[["nothing"],"[10, 3, 1, 1, 3, 2, 6, 7, 3, 4, 2, 6, 0, 0, 0, 0, 0, 4, 10, 3, 6, 4]"],[["nothing"],"[1, 1, 1, 29, 12, 0, 8, 0, 2, 0, 4, 3, 3, 3, 2, 0, 1, 15, 3, 3, 2, 0, 3, 14, 1, 9]"],[["nothing"],"[3, 18, 2, 4, 8, 10, 2, 7, 16, 0, 1, 0, 0, 4, 2, 1, 3, 2, 7, 6, 9, 2]"],[["nothing"],"[0, 7, 0, 0, 3, 5, 0, 3, 7, 1, 0, 2, 3, 2, 4, 2, 3, 4, 1, 13, 7, 1, 0, 3, 14, 3, 2]"]],"type":"(unit -> list)","name":"036","solution":"(letII (inc (case (flip 0.7) of True => 9 | False => 9)) (λk -> (mapunit (λx -> randnat) (+ k#1 (+ k#1 randnat)))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 3, 3, 6, 3, 9, 10, 5, 7]"],[["nothing"],"[1, 0, 7, 0, 1, 9, 0, 2, 10, 4]"],[["nothing"],"[1, 2, 3, 1, 14, 4, 3, 6, 0, 3]"],[["nothing"],"[4, 0, 6, 3, 12, 10, 0, 7, 0, 4]"],[["nothing"],"[19, 4, 10, 0, 5, 1, 1, 5, 3, 2]"],[["nothing"],"[3, 1, 1, 1, 8, 1, 12, 3, 0, 8]"],[["nothing"],"[0, 0, 2, 1, 3, 1, 11, 7, 3, 0]"],[["nothing"],"[3, 1, 2, 3, 6, 12, 1, 0, 0, 0]"]],"type":"(unit -> list)","name":"037","solution":"(letII (inc randnat) (λk -> (mapunit (λx -> (case k#2 of O => k#2 | S => (λn -> randnat))) (inc 9))))","num_train":4},{"ios":[[["nothing"],"[2, 1, 13, 25, 3, 5, 2]"],[["nothing"],"[3, 6, 0, 12, 10, 4, 7]"],[["nothing"],"[8, 18, 0, 14, 3, 2, 13]"],[["nothing"],"[0, 0, 0, 1, 2, 2, 3]"],[["nothing"],"[9, 0, 0, 7, 0, 0, 12]"],[["nothing"],"[10, 2, 1, 5, 1, 0, 7]"],[["nothing"],"[2, 1, 12, 1, 1, 0, 2]"],[["nothing"],"[2, 1, 1, 2, 0, 1, 18]"]],"type":"(unit -> list)","name":"038","solution":"(letII 7 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 11, 5, 13, 11, 19, 7, 8, 11, 4]"],[["nothing"],"[8, 10, 12, 10, 14, 54, 1, 13, 4, 13, 16, 18, 14, 16, 11, 9]"],[["nothing"],"[8, 11, 8, 17, 8, 14, 11, 18, 9, 16, 2, 17, 5, 11, 12, 8, 4, 7, 12]"],[["nothing"],"[17, 3, 21, 12, 19, 4, 6, 11, 13, 17, 20, 4]"],[["nothing"],"[1, 7, 33, 25, 14, 6, 10, 20, 10, 7, 7, 0, 8]"],[["nothing"],"[3, 1, 13, 10, 15, 19, 7, 4, 4, 5, 19, 8, 6, 7]"],[["nothing"],"[0, 9, 15, 31, 9, 16, 4, 3, 12, 17, 17, 26, 11, 13, 8]"],[["nothing"],"[20, 16, 21, 13, 8, 6, 18, 4, 8]"]],"type":"(unit -> list)","name":"039","solution":"(letII 9 (λk -> (mapunit (λx -> (+ randnat (letII k#2 (λx -> (+ randnat randnat))))) (letII randnat (λx -> (+ k#2 randnat))))))","num_train":4},{"ios":[[["nothing"],"[2, 2, 9]"],[["nothing"],"[13, 9, 13, 14, 18, 8, 13, 10, 11]"],[["nothing"],"[16, 8, 13, 7, 8, 14, 17]"],[["nothing"],"[7, 16, 5, 7, 13, 7]"],[["nothing"],"[15, 15, 15, 18, 17, 17, 19, 23, 19, 15, 15, 26, 23, 18, 19, 16]"],[["nothing"],"[3, 3, 5, 6]"],[["nothing"],"[25, 4, 6, 5, 14]"],[["nothing"],"[22, 8, 9, 7, 7, 15, 13, 19]"]],"type":"(unit -> list)","name":"040","solution":"(letII (+ (inc randnat) randnat) (λk -> (mapunit (λx -> (inc (letII randnat (λx -> (+ k#3 x#1))))) (inc (inc k#1)))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 10, 0, 0, 0]"],[["nothing"],"[5, 5, 5, 11, 5, 2]"],[["nothing"],"[5, 5, 5, 5, 5, 0]"],[["nothing"],"[2, 1, 5, 18, 8, 5]"],[["nothing"],"[0, 5, 9, 5, 5, 3]"],[["nothing"],"[5, 3, 5, 5]"],[["nothing"],"[2, 5, 5, 2, 5, 0]"],[["nothing"],"[5, 4, 5, 5]"]],"type":"(unit -> list)","name":"041","solution":"(letII (case (iseven randnat) of True => 5 | False => randnat) (λk -> (mapunit (λx -> (case (flip 0.4) of True => randnat | False => k#2)) (letII randnat (λx -> (inc (letII randnat (λx -> (case randnat of O => 3 | S => (λn -> (inc 4)))))))))))","num_train":4},{"ios":[[["nothing"],"[11, 3, 9, 7, 9, 3, 17]"],[["nothing"],"[2, 4, 1, 8, 4, 1, 1, 9, 4]"],[["nothing"],"[3, 8, 0, 3, 0, 2, 1, 1, 5]"],[["nothing"],"[1, 5]"],[["nothing"],"[10, 0, 3, 0, 2, 9, 8, 1, 2, 9, 5, 2, 0]"],[["nothing"],"[2, 8]"],[["nothing"],"[3, 3, 7, 3, 2, 1, 6, 6, 11, 3]"],[["nothing"],"[7, 6, 0, 5, 2, 5, 1, 8]"]],"type":"(unit -> list)","name":"042","solution":"(letII (- (letII randnat (λx -> (case randnat of O => 3 | S => (λn -> x#2)))) 4) (λk -> (mapunit (λx -> randnat) (inc (case (- (inc k#1) k#1) of O => (letII randnat (λx -> (inc randnat))) | S => (λn -> (+ randnat randnat)))))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 10, 2, 0, 2, 0, 0, 0]"],[["nothing"],"[0, 5, 2, 0, 8, 0, 3, 0, 0, 0, 0, 0]"],[["nothing"],"[2, 15, 3, 4, 1, 0, 0, 0, 2, 2, 0, 3, 0, 0, 0, 2, 1]"],[["nothing"],"[0, 0, 0, 0, 5, 9, 0, 0, 10, 0, 0, 0, 2, 9, 1, 1, 0]"],[["nothing"],"[0, 0, 0, 0, 0, 0, 4, 14, 1, 0, 0, 1, 0, 0]"],[["nothing"],"[4, 8, 0, 7, 0, 0, 1, 11, 0, 3, 0, 0]"],[["nothing"],"[5, 0, 11, 0, 19, 11, 0, 0, 5, 3, 0, 0, 5, 4, 0, 0]"],[["nothing"],"[6, 11, 0, 7, 1, 0, 0, 15, 1, 0, 0, 11, 0, 0, 0, 2, 0, 2, 0, 9, 0, 4, 0, 0]"]],"type":"(unit -> list)","name":"043","solution":"(letII (case (flip 0.5) of True => 3 | False => randnat) (λk -> (mapunit (λx -> (letII 7 (λx -> (- randnat (case k#3 of O => (case randnat of O => randnat | S => (λn -> k#4)) | S => (λn -> randnat)))))) (+ 6 (+ randnat randnat)))))","num_train":4},{"ios":[[["nothing"],"[2, 15, 3, 0, 1, 3]"],[["nothing"],"[1, 0, 3, 2, 2, 10]"],[["nothing"],"[5, 6, 0, 9, 5, 4]"],[["nothing"],"[2, 8, 6, 4, 1, 4]"],[["nothing"],"[1, 0, 1, 7, 1, 1]"],[["nothing"],"[4, 8, 1, 24, 2, 10]"],[["nothing"],"[12, 5, 3, 1, 0, 1]"],[["nothing"],"[1, 5, 0, 3, 5, 1]"]],"type":"(unit -> list)","name":"044","solution":"(letII (inc randnat) (λk -> (mapunit (λx -> (case (letII randnat (λx -> (inc k#3))) of O => k#2 | S => (λn -> randnat))) 6)))","num_train":4},{"ios":[[["nothing"],"[13, 9, 8, 10]"],[["nothing"],"[8, 16, 14]"],[["nothing"],"[13, 15]"],[["nothing"],"[16, 19, 10, 18, 14, 10]"],[["nothing"],"[13, 12, 14, 9, 16]"],[["nothing"],"[13, 12, 14, 15, 14, 19, 16, 12, 17, 30, 24]"],[["nothing"],"[12, 15, 23]"],[["nothing"],"[14, 13, 10, 12, 20, 12, 8, 20]"]],"type":"(unit -> list)","name":"045","solution":"(letII (+ 9 (- 8 (+ randnat randnat))) (λk -> (mapunit (λx -> (+ randnat (letII k#2 (λx -> (- x#1 1))))) (inc (letII randnat (λx -> (inc randnat)))))))","num_train":4},{"ios":[[["nothing"],"[0, 2, 1]"],[["nothing"],"[9, 1, 14]"],[["nothing"],"[10, 3, 1]"],[["nothing"],"[0, 0, 5]"],[["nothing"],"[3, 3, 8]"],[["nothing"],"[13, 2, 4]"],[["nothing"],"[9, 5, 5]"],[["nothing"],"[1, 3, 0]"]],"type":"(unit -> list)","name":"046","solution":"(letII 3 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[6, 23, 13, 23, 11, 18, 45, 29, 26, 16, 20, 17, 14, 23, 24, 17, 17, 20, 25, 17]"],[["nothing"],"[16, 6, 6, 9, 21, 14, 23, 50, 14, 10, 12, 5, 21, 10, 17, 20, 21, 10, 28, 8]"],[["nothing"],"[21, 13, 7, 5, 6, 7, 5, 21, 17, 18, 17, 26, 19, 12, 21, 28, 16, 16, 23, 12]"],[["nothing"],"[11, 19, 5, 27, 12, 4, 19, 18, 16, 23, 12, 17, 39, 2, 18, 22, 7, 16, 18, 18]"],[["nothing"],"[13, 2, 32, 24, 15, 9, 15, 7, 8, 6, 12, 7, 21, 14, 15, 6, 18, 15, 11, 19]"],[["nothing"],"[25, 15, 6, 19, 28, 14, 3, 2, 8, 20, 18, 2, 18, 25, 13, 25, 16, 12, 15, 17]"],[["nothing"],"[14, 5, 26, 14, 21, 18, 12, 16, 17, 14, 11, 24, 18, 25, 16, 16, 17, 17, 15, 16]"],[["nothing"],"[24, 16, 12, 28, 15, 2, 17, 12, 21, 18, 17, 16, 4, 29, 7, 15, 15, 21, 17, 12]"]],"type":"(unit -> list)","name":"047","solution":"(letII (inc 9) (λk -> (mapunit (λx -> (inc (+ (case (flip 0.6) of True => k#2 | False => 0) (+ randnat (letII randnat (λx -> (inc randnat))))))) (letII k#1 (λx -> (case (flip 0.9) of True => (+ k#2 x#1) | False => (+ x#1 randnat)))))))","num_train":4},{"ios":[[["nothing"],"[2, 9, 12, 13, 1, 0]"],[["nothing"],"[0, 6]"],[["nothing"],"[13, 9]"],[["nothing"],"[2, 0, 1]"],[["nothing"],"[7, 2]"],[["nothing"],"[6, 0, 0, 6, 0, 0, 12, 0, 3, 1, 16, 5]"],[["nothing"],"[1, 1, 2, 6, 1, 2, 6, 0, 0, 9, 9, 1, 1, 0]"],[["nothing"],"[1, 1, 9, 0, 2, 1, 27, 1, 9, 7, 0, 4]"]],"type":"(unit -> list)","name":"048","solution":"(letII randnat (λk -> (mapunit (λx -> randnat) (inc k#1))))","num_train":4},{"ios":[[["nothing"],"[14, 1, 1, 3, 5, 0, 1, 0, 3, 10]"],[["nothing"],"[4, 2, 3, 1, 0, 5, 0, 1, 0, 4]"],[["nothing"],"[18, 8, 3, 1, 3, 5, 0, 0, 3, 12]"],[["nothing"],"[0, 7, 14, 11, 1, 2, 7, 18, 6, 2]"],[["nothing"],"[0, 2, 5, 2, 0, 2, 0, 3, 1, 0]"],[["nothing"],"[0, 2, 6, 5, 0, 0, 14, 9, 3, 8]"],[["nothing"],"[0, 2, 0, 2, 0, 0, 0, 1, 0, 1]"],[["nothing"],"[3, 4, 0, 2, 6, 1, 4, 0, 0, 2]"]],"type":"(unit -> list)","name":"049","solution":"(letII (case (flip 0.6) of True => 6 | False => 8) (λk -> (mapunit (λx -> (case (flip 0.1) of True => 0 | False => randnat)) (inc 9))))","num_train":4},{"ios":[[["nothing"],"[2, 9, 1, 15, 15, 20]"],[["nothing"],"[12, 1, 9, 2, 27, 2, 4]"],[["nothing"],"[9, 7]"],[["nothing"],"[9, 10, 17, 10, 11, 2, 4, 3, 5, 0]"],[["nothing"],"[7, 15, 5, 5, 15, 2, 2, 2, 2, 2, 1, 7, 2, 15]"],[["nothing"],"[13, 5, 3, 4]"],[["nothing"],"[7, 1, 20, 9, 8, 26, 1, 12]"],[["nothing"],"[4, 1, 6]"]],"type":"(unit -> list)","name":"050","solution":"(letII (letII randnat (λx -> (case randnat of O => (case x#1 of O => randnat | S => (λn -> n#1)) | S => (λn -> (inc randnat))))) (λk -> (mapunit (λx -> (case (flip 0.7) of True => (+ randnat randnat) | False => k#2)) (case (== randnat randnat) of True => randnat | False => (letII (+ 6 1) (λx -> (+ 2 randnat)))))))","num_train":4},{"ios":[[["nothing"],"[8, 6]"],[["nothing"],"[2, 15, 1, 8, 16, 7]"],[["nothing"],"[5, 1, 2, 8, 11, 3, 10]"],[["nothing"],"[6, 5, 9, 12, 11, 3, 6, 5, 6]"],[["nothing"],"[14, 11]"],[["nothing"],"[12, 10, 16, 0, 8, 13, 14, 0, 9, 7]"],[["nothing"],"[11, 14, 8]"],[["nothing"],"[9, 1, 13, 4, 13, 3, 8, 11, 6, 7, 3, 19, 5, 9, 8]"]],"type":"(unit -> list)","name":"051","solution":"(letII (case (flip 0.2) of True => randnat | False => (+ 6 7)) (λk -> (mapunit (λx -> (letII randnat (λx -> (+ randnat x#1)))) (inc (inc randnat)))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 0, 1, 0, 2]"],[["nothing"],"[0, 0, 0, 5, 0, 0]"],[["nothing"],"[13, 0, 0, 0, 6, 0]"],[["nothing"],"[0, 0, 0, 6, 0, 0]"],[["nothing"],"[0, 5, 0, 0, 0, 0]"],[["nothing"],"[0, 0, 8, 0, 8, 0]"],[["nothing"],"[0, 2, 0, 0, 0, 1]"],[["nothing"],"[0, 0, 0, 0, 0, 4]"]],"type":"(unit -> list)","name":"052","solution":"(letII (case (flip 0.1) of True => (case randnat of O => randnat | S => (λn -> n#1)) | False => (case 7 of O => 9 | S => (λn -> n#1))) (λk -> (mapunit (λx -> (- randnat k#2)) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 14, 13, 9, 5, 11, 8, 9, 6, 1, 3]"],[["nothing"],"[20, 14, 10, 11, 16, 2, 23, 9, 7, 13, 5]"],[["nothing"],"[13, 9, 8, 19, 4, 11, 9, 9, 14, 7, 6]"],[["nothing"],"[12, 9, 6, 4, 6, 29, 7, 8, 16, 11, 7]"],[["nothing"],"[5, 17, 2, 17, 23, 4, 8, 10, 8, 17, 15]"],[["nothing"],"[13, 13, 2, 10, 7, 10, 12, 7, 8, 12, 22]"],[["nothing"],"[9, 13, 16, 8, 22, 4, 18, 20, 12, 14, 11]"],[["nothing"],"[10, 9, 8, 2, 13, 7, 15, 4, 6, 8, 5]"]],"type":"(unit -> list)","name":"053","solution":"(letII (inc 9) (λk -> (mapunit (λx -> (+ (letII (+ randnat randnat) (λx -> (- 5 randnat))) (+ randnat randnat))) (letII randnat (λx -> (inc k#2))))))","num_train":4},{"ios":[[["nothing"],"[17, 8, 7]"],[["nothing"],"[12, 14, 13]"],[["nothing"],"[9, 7, 7]"],[["nothing"],"[11, 8, 8]"],[["nothing"],"[27, 10, 16]"],[["nothing"],"[12, 10, 10]"],[["nothing"],"[9, 7, 7]"],[["nothing"],"[8, 10, 7]"]],"type":"(unit -> list)","name":"054","solution":"(letII 3 (λk -> (mapunit (λx -> (letII k#2 (λx -> (+ randnat 7)))) (letII randnat (λx -> (inc 2))))))","num_train":4},{"ios":[[["nothing"],"[1, 2, 1, 2, 24, 12, 5, 3, 3, 4]"],[["nothing"],"[8, 1, 3, 4, 2, 1, 0, 2, 5, 0]"],[["nothing"],"[0, 0, 1, 2, 5, 6, 0, 2, 0, 7]"],[["nothing"],"[10, 4, 0, 5, 12, 0, 0, 2, 8, 4]"],[["nothing"],"[1, 2, 0, 1, 0, 2, 2, 2, 0, 0]"],[["nothing"],"[1, 1, 4, 0, 1, 0, 1, 1, 1, 1]"],[["nothing"],"[3, 8, 9, 5, 0, 3, 0, 8, 5, 0]"],[["nothing"],"[0, 10, 4, 6, 7, 2, 14, 1, 7, 10]"]],"type":"(unit -> list)","name":"055","solution":"(letII (inc 4) (λk -> (mapunit (λx -> (case (flip 0.7) of True => randnat | False => randnat)) (+ k#1 k#1))))","num_train":4},{"ios":[[["nothing"],"[0, 5, 4, 1, 2, 9, 15, 0, 9]"],[["nothing"],"[1, 1, 12, 7, 10, 5, 4, 4, 3]"],[["nothing"],"[2, 4, 0, 1, 3, 7, 4, 5, 5]"],[["nothing"],"[9, 0, 6, 3, 5, 1, 0, 5, 2]"],[["nothing"],"[4, 7, 9, 9, 0, 7, 2, 4, 10]"],[["nothing"],"[0, 0, 10, 5, 2, 5, 2, 0, 1]"],[["nothing"],"[0, 3, 7, 1, 2, 2, 3, 16, 3]"],[["nothing"],"[7, 1, 1, 3, 6, 12, 3, 3, 7]"]],"type":"(unit -> list)","name":"056","solution":"(letII 9 (λk -> (mapunit (λx -> (case k#2 of O => randnat | S => (λn -> randnat))) (case randnat of O => 1 | S => (λn -> k#2)))))","num_train":4},{"ios":[[["nothing"],"[9, 1, 5, 6, 2, 1]"],[["nothing"],"[4, 0, 10, 1, 2, 5]"],[["nothing"],"[2, 0, 2, 2, 0, 5]"],[["nothing"],"[3, 6, 0, 1, 4, 10]"],[["nothing"],"[0, 11, 1, 0, 7, 0]"],[["nothing"],"[1, 2, 7, 2, 1, 6]"],[["nothing"],"[5, 4, 8, 8, 5, 0]"],[["nothing"],"[14, 0, 1, 1, 14, 0]"]],"type":"(unit -> list)","name":"057","solution":"(letII 4 (λk -> (mapunit (λx -> randnat) (inc (letII k#1 (λx -> (inc k#2)))))))","num_train":4},{"ios":[[["nothing"],"[7, 15, 5, 0, 7, 2, 16, 12, 7, 0, 1, 3, 2, 14, 14]"],[["nothing"],"[6, 5, 13, 5, 9, 10, 8, 10, 13, 12, 8, 2, 2, 6, 10, 3, 4]"],[["nothing"],"[7, 7, 5, 3, 9, 11, 5, 15, 17, 4, 6, 5, 23, 0]"],[["nothing"],"[1, 11, 0, 11, 4, 22, 1, 0, 22, 3, 4, 1, 2, 7, 12, 2, 0]"],[["nothing"],"[9, 5, 10, 11, 11, 9, 15, 5, 7, 26]"],[["nothing"],"[0, 1, 6, 6, 9, 2]"],[["nothing"],"[13, 6, 5, 5, 6, 14, 12, 11, 6, 7]"],[["nothing"],"[3, 1, 3, 8, 9, 3, 6, 11, 5, 14, 10, 4]"]],"type":"(unit -> list)","name":"058","solution":"(letII (letII randnat (λx -> (case randnat of O => x#1 | S => (λn -> n#1)))) (λk -> (mapunit (λx -> (+ randnat randnat)) (+ (case randnat of O => randnat | S => (λn -> (letII n#1 (λx -> (+ 5 randnat))))) k#1))))","num_train":4},{"ios":[[["nothing"],"[8, 7, 0, 11, 5, 20, 3, 7, 7, 12, 19, 5, 3, 0, 10, 2, 1, 1, 7, 3, 7, 5]"],[["nothing"],"[8, 7, 3, 10]"],[["nothing"],"[2, 4, 4, 1, 0, 2, 15, 0, 0, 1, 4, 4]"],[["nothing"],"[1, 7, 9, 3, 3, 1, 9, 9, 5]"],[["nothing"],"[18, 3, 1, 2, 10, 1, 0]"],[["nothing"],"[7, 3, 0, 10, 7, 4, 0, 4, 0, 5, 5]"],[["nothing"],"[0, 3, 6, 13, 2, 1, 9, 2, 2, 3, 4, 2, 2, 6]"],[["nothing"],"[0, 8, 9, 5, 1, 1, 1, 9, 2, 7, 1, 3]"]],"type":"(unit -> list)","name":"059","solution":"(letII (letII 7 (λx -> (case (== 0 (+ randnat randnat)) of True => x#1 | False => (+ randnat randnat)))) (λk -> (mapunit (λx -> (case (flip 0.9) of True => randnat | False => (+ randnat k#2))) (+ (letII k#1 (λx -> (case 8 of O => x#1 | S => (λn -> randnat)))) k#1))))","num_train":4},{"ios":[[["nothing"],"[5, 5, 5, 10, 5, 9, 9, 6, 9, 5]"],[["nothing"],"[1, 2, 1, 1]"],[["nothing"],"[8, 6, 7, 4, 4, 4, 4, 4]"],[["nothing"],"[36, 38, 26, 35, 38, 36, 33, 29]"],[["nothing"],"[16, 9, 13, 13]"],[["nothing"],"[7, 4, 8, 7]"],[["nothing"],"[12, 19, 19, 23, 16, 19, 17, 19, 21, 23, 19]"],[["nothing"],"[1, 2]"]],"type":"(unit -> list)","name":"060","solution":"(letII (case (== 2 randnat) of True => (inc randnat) | False => (- (+ randnat randnat) 1)) (λk -> (mapunit (λx -> (letII randnat (λx -> (+ k#3 (- k#3 (case randnat of O => 5 | S => (λn -> randnat))))))) (letII randnat (λx -> (+ randnat randnat))))))","num_train":4},{"ios":[[["nothing"],"[12, 4, 2, 2, 4, 0, 13, 4, 0, 3, 0, 11, 0]"],[["nothing"],"[10, 2, 5, 2, 3, 2, 5, 7, 1, 1, 2]"],[["nothing"],"[4, 1, 3, 1, 9, 5, 1, 7, 18, 1, 2, 2, 0, 0, 3, 16, 2, 2, 2, 0]"],[["nothing"],"[4, 0, 5, 0, 0, 3, 0, 0, 0, 0, 5, 11, 3, 1, 6]"],[["nothing"],"[10, 2, 8, 3, 0, 0, 0, 5, 0, 3, 2]"],[["nothing"],"[0, 1, 7, 1, 17, 1, 3, 5, 7, 4, 4, 6, 5]"],[["nothing"],"[7, 2, 2, 1, 3, 5, 0, 9, 2, 2, 3, 5, 4, 1, 1]"],[["nothing"],"[8, 7, 0, 5, 2, 2, 10, 15, 1, 0, 3, 2, 10, 0, 3]"]],"type":"(unit -> list)","name":"061","solution":"(letII (case (flip 0.7) of True => randnat | False => (letII 2 (λx -> (- randnat randnat)))) (λk -> (mapunit (λx -> randnat) (inc (- (+ (inc (inc (+ 9 (letII randnat (λx -> (case x#1 of O => k#2 | S => (λn -> randnat))))))) randnat) randnat)))))","num_train":4},{"ios":[[["nothing"],"[8, 4, 4, 5, 16]"],[["nothing"],"[0, 3, 6, 7, 2]"],[["nothing"],"[11, 11, 4, 4, 4]"],[["nothing"],"[13, 14, 12, 15, 10]"],[["nothing"],"[5, 6, 9, 5, 6]"],[["nothing"],"[5, 23, 8, 12, 6]"],[["nothing"],"[5, 2, 4, 8, 5]"],[["nothing"],"[3, 2, 5, 3, 2]"]],"type":"(unit -> list)","name":"062","solution":"(letII randnat (λk -> (mapunit (λx -> (+ k#2 randnat)) 5)))","num_train":4},{"ios":[[["nothing"],"[8, 10, 6]"],[["nothing"],"[3, 0, 11]"],[["nothing"],"[10, 9, 12]"],[["nothing"],"[19, 4, 17]"],[["nothing"],"[0, 2, 7]"],[["nothing"],"[3, 14, 32]"],[["nothing"],"[2, 4, 7]"],[["nothing"],"[14, 3, 5]"]],"type":"(unit -> list)","name":"063","solution":"(letII (+ (case (flip 0.5) of True => 2 | False => 5) 0) (λk -> (mapunit (λx -> (+ (case (flip 0.9) of True => randnat | False => 7) randnat)) (inc 2))))","num_train":4},{"ios":[[["nothing"],"[3, 0, 3, 11, 2, 7, 4, 10, 2, 2]"],[["nothing"],"[0, 0, 2]"],[["nothing"],"[0, 2, 1, 8, 0, 0, 1, 2]"],[["nothing"],"[0, 32, 6]"],[["nothing"],"[3, 14, 0]"],[["nothing"],"[8, 2, 1]"],[["nothing"],"[3, 3, 6]"],[["nothing"],"[19, 15, 4, 0, 5, 5, 2, 2]"]],"type":"(unit -> list)","name":"064","solution":"(letII (- randnat randnat) (λk -> (mapunit (λx -> randnat) (inc (letII 9 (λx -> (case randnat of O => x#1 | S => (λn -> (letII randnat (λx -> (case randnat of O => 7 | S => (λn -> 2))))))))))))","num_train":4},{"ios":[[["nothing"],"[3, 7, 6, 2]"],[["nothing"],"[0, 2, 2, 4]"],[["nothing"],"[9, 0, 3, 0]"],[["nothing"],"[2, 0, 1, 1]"],[["nothing"],"[2, 5, 2, 4]"],[["nothing"],"[1, 1, 2, 2]"],[["nothing"],"[0, 0, 8, 3]"],[["nothing"],"[16, 2, 3, 0]"]],"type":"(unit -> list)","name":"065","solution":"(letII 9 (λk -> (mapunit (λx -> randnat) 4)))","num_train":4},{"ios":[[["nothing"],"[1, 2, 0, 0, 0, 0]"],[["nothing"],"[0, 3, 0, 2, 1, 1]"],[["nothing"],"[0, 1, 0, 1, 3, 0]"],[["nothing"],"[0, 2, 4, 3, 4, 2]"],[["nothing"],"[0, 0, 0, 4, 2, 0]"],[["nothing"],"[0, 0, 3, 4, 4, 0, 4, 4, 2, 0]"],[["nothing"],"[4, 3, 4, 3, 2, 2]"],[["nothing"],"[2, 4, 0, 2, 3, 1]"]],"type":"(unit -> list)","name":"066","solution":"(letII (inc 9) (λk -> (mapunit (λx -> (letII randnat (λx -> (- 4 randnat)))) (case randnat of O => k#1 | S => (λn -> 6)))))","num_train":4},{"ios":[[["nothing"],"[6, 5, 6, 6, 5, 6, 6, 6, 5, 5, 6, 5, 6, 5, 6, 5, 6]"],[["nothing"],"[5, 6, 5, 6, 5, 5, 6, 6, 6, 6, 6, 6, 6, 5, 6, 5, 5, 5, 6]"],[["nothing"],"[6, 6, 6, 6, 6, 6, 6, 5, 6, 5, 5, 6]"],[["nothing"],"[6, 5, 6, 5, 5, 5, 6, 5, 6, 6, 6, 6]"],[["nothing"],"[5, 5, 6, 6, 6, 5, 6, 5, 6, 5, 6, 5, 6, 6, 6, 6, 6, 5, 6, 5, 6]"],[["nothing"],"[5, 5, 6, 5, 6, 6, 5, 5, 6, 6, 6, 6]"],[["nothing"],"[5, 6, 6, 6, 5, 6, 6, 5, 6, 5, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6]"],[["nothing"],"[6, 6, 6, 5, 6, 6, 6, 6, 5, 6, 6, 5, 6, 6, 6, 6, 5]"]],"type":"(unit -> list)","name":"067","solution":"(letII 5 (λk -> (mapunit (λx -> (letII k#2 (λx -> (case (flip 0.3) of True => x#1 | False => 6)))) (+ (+ k#1 7) randnat))))","num_train":4},{"ios":[[["nothing"],"[0, 0, 2, 0, 0, 0, 8, 0, 0, 3, 0, 2, 1]"],[["nothing"],"[0, 4, 3, 3, 7, 0, 0, 0, 0, 0, 0, 5, 0, 1, 3, 10, 0, 4, 0, 0, 0, 0, 4, 0, 2]"],[["nothing"],"[5, 1, 12, 1, 0, 0, 1, 0, 7, 2]"],[["nothing"],"[0, 0, 0, 3, 0, 0, 0]"],[["nothing"],"[2, 0, 0, 6, 9, 0, 2, 0, 0]"],[["nothing"],"[3, 1, 9, 0, 0, 0, 0, 0, 3, 8, 0, 1, 2, 4, 0, 0]"],[["nothing"],"[0, 23, 0, 0]"],[["nothing"],"[0, 1, 0]"]],"type":"(unit -> list)","name":"068","solution":"(letII (inc (+ 2 randnat)) (λk -> (mapunit (λx -> (letII (letII randnat (λx -> (+ k#3 randnat))) (λx -> (- randnat randnat)))) (case (== randnat k#1) of True => 2 | False => k#1))))","num_train":4},{"ios":[[["nothing"],"[2, 0, 7, 5]"],[["nothing"],"[11, 3, 0, 0]"],[["nothing"],"[2, 7, 4, 2]"],[["nothing"],"[10, 3, 6, 2]"],[["nothing"],"[10, 0, 3, 34]"],[["nothing"],"[6, 2, 0, 6]"],[["nothing"],"[0, 3, 0, 6]"],[["nothing"],"[16, 4, 3, 4]"]],"type":"(unit -> list)","name":"069","solution":"(letII 4 (λk -> (mapunit (λx -> randnat) 4)))","num_train":4},{"ios":[[["nothing"],"[13, 13, 13, 13, 0, 13, 0, 13, 2, 13, 13, 13, 13]"],[["nothing"],"[36, 36, 36, 36, 7, 36, 36, 36, 36, 36, 36, 36, 36, 36, 17, 36, 36, 36, 36, 36, 0, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36]"],[["nothing"],"[12, 12, 12, 12, 1, 12, 1, 12, 12, 12, 12, 12]"],[["nothing"],"[4, 16, 16, 3, 16, 16, 16, 9, 16, 5, 1, 16, 16, 16, 4, 16]"],[["nothing"],"[11, 11, 0, 11, 11, 11, 6, 11, 11, 11, 11]"],[["nothing"],"[8, 0, 8, 8, 8, 6, 8, 8]"],[["nothing"],"[6, 15, 15, 8, 15, 15, 15, 15, 15, 11, 0, 15, 15, 15, 15]"],[["nothing"],"[2, 11, 11, 11, 7, 11, 11, 11, 11, 11, 8]"]],"type":"(unit -> list)","name":"070","solution":"(letII (case (== 9 0) of True => (- (letII 4 (λx -> (+ x#1 x#1))) 2) | False => (+ (+ randnat 6) randnat)) (λk -> (mapunit (λx -> (case (flip 0.2) of True => randnat | False => k#2)) (case (flip 0.9) of True => k#1 | False => k#1))))","num_train":4},{"ios":[[["nothing"],"[13, 6, 5]"],[["nothing"],"[21, 9, 11]"],[["nothing"],"[11, 4, 16, 19, 14, 10, 2]"],[["nothing"],"[15, 20, 9]"],[["nothing"],"[6, 4, 3]"],[["nothing"],"[2, 11, 5, 3, 8, 3, 6]"],[["nothing"],"[16, 11, 21]"],[["nothing"],"[3, 5, 5]"]],"type":"(unit -> list)","name":"071","solution":"(letII (letII (- randnat 6) (λx -> (case (flip 0.5) of True => x#1 | False => x#1))) (λk -> (mapunit (λx -> (+ (inc (case (flip 0.2) of True => k#2 | False => randnat)) (inc randnat))) (case randnat of O => (case k#1 of O => 7 | S => (λn -> (- n#1 randnat))) | S => (λn -> 3)))))","num_train":4},{"ios":[[["nothing"],"[8, 8, 2, 8]"],[["nothing"],"[8, 6, 8, 8, 8, 8, 8, 8]"],[["nothing"],"[8, 8, 8, 4, 8, 4, 8, 4, 4, 8, 8]"],[["nothing"],"[2, 8, 8, 8, 2, 2, 2, 8, 8, 2, 2]"],[["nothing"],"[8, 8, 8, 11, 8, 11, 8, 8, 8, 8, 8]"],[["nothing"],"[8, 8, 8, 2]"],[["nothing"],"[4, 4, 8, 8, 8, 4, 8, 8, 8, 8, 4]"],[["nothing"],"[8, 3, 8, 8, 8, 8, 8, 3, 8, 3, 8]"]],"type":"(unit -> list)","name":"072","solution":"(letII (inc randnat) (λk -> (mapunit (λx -> (case (flip 0.7) of True => 8 | False => k#2)) (inc (inc (case (flip 0.5) of True => k#1 | False => 9))))))","num_train":4},{"ios":[[["nothing"],"[7, 6, 7, 3]"],[["nothing"],"[2, 2, 2, 1]"],[["nothing"],"[4, 3, 0, 2]"],[["nothing"],"[2, 12, 0, 5]"],[["nothing"],"[1, 3, 0, 2]"],[["nothing"],"[3, 0, 0, 3]"],[["nothing"],"[6, 1, 2, 4]"],[["nothing"],"[5, 6, 0, 0]"]],"type":"(unit -> list)","name":"073","solution":"(letII (case 4 of O => 5 | S => (λn -> n#1)) (λk -> (mapunit (λx -> randnat) (inc k#1))))","num_train":4},{"ios":[[["nothing"],"[8, 15, 9, 12, 15, 8, 9, 13]"],[["nothing"],"[6, 9, 9, 10, 8, 8, 10, 8]"],[["nothing"],"[9, 9, 10, 8, 43, 33, 9, 13]"],[["nothing"],"[15, 9, 13, 9, 12, 8, 10, 8]"],[["nothing"],"[5, 14, 9, 9, 5, 5, 9, 11]"],[["nothing"],"[17, 14, 10, 9, 9, 11, 9, 9]"],[["nothing"],"[8, 8, 8, 8, 8, 10, 14, 10]"],[["nothing"],"[8, 12, 15, 16, 12, 13, 12, 10]"]],"type":"(unit -> list)","name":"074","solution":"(letII (+ (case (flip 0.6) of True => (letII randnat (λx -> (case randnat of O => x#1 | S => (λn -> randnat)))) | False => 4) (case (+ randnat randnat) of O => randnat | S => (λn -> n#1))) (λk -> (mapunit (λx -> (letII randnat (λx -> (case (> k#3 randnat) of True => (+ randnat 8) | False => k#3)))) (inc 7))))","num_train":4},{"ios":[[["nothing"],"[1, 3]"],[["nothing"],"[1, 11, 2, 4]"],[["nothing"],"[4, 6, 7, 1, 1, 12, 1, 7, 3, 1, 2, 3, 0, 0, 3, 0, 0, 2, 1]"],[["nothing"],"[0, 3, 3, 14, 2, 6, 7, 3, 5, 4, 1, 8, 0]"],[["nothing"],"[3, 0, 7]"],[["nothing"],"[7, 3, 2, 10, 0, 1, 11, 5, 13, 5]"],[["nothing"],"[1, 8, 2, 7, 1, 5, 2]"],[["nothing"],"[12, 2, 2, 0, 0, 6, 4, 6]"]],"type":"(unit -> list)","name":"075","solution":"(letII (+ randnat 9) (λk -> (mapunit (λx -> randnat) (inc (case (flip 0.4) of True => (- (case (flip 0.3) of True => k#1 | False => k#1) randnat) | False => randnat)))))","num_train":4},{"ios":[[["nothing"],"[4, 2, 8]"],[["nothing"],"[9, 9, 3]"],[["nothing"],"[12, 7, 8]"],[["nothing"],"[1, 7, 8]"],[["nothing"],"[8, 3, 4]"],[["nothing"],"[2, 3, 8]"],[["nothing"],"[5, 12, 3]"],[["nothing"],"[4, 10, 3]"]],"type":"(unit -> list)","name":"076","solution":"(letII 3 (λk -> (mapunit (λx -> (letII (case randnat of O => randnat | S => (λn -> 2)) (λx -> (+ randnat randnat)))) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 9, 1, 1, 3, 1, 0, 1]"],[["nothing"],"[0, 0, 1, 2, 11, 3, 0, 2]"],[["nothing"],"[9, 0, 6, 3, 2, 8, 0, 1]"],[["nothing"],"[4, 3, 0, 3, 4, 5, 1, 1]"],[["nothing"],"[1, 7, 3, 1, 3, 4, 3, 3]"],[["nothing"],"[0, 3, 0, 1, 3, 4, 8, 1]"],[["nothing"],"[12, 3, 2, 3, 12, 5, 7, 1]"],[["nothing"],"[20, 6, 9, 2, 9, 7, 2, 1]"]],"type":"(unit -> list)","name":"077","solution":"(letII 8 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[2, 12, 7, 6, 0, 10]"],[["nothing"],"[1, 2, 5, 1, 5, 1]"],[["nothing"],"[0, 18, 1, 5, 6, 7]"],[["nothing"],"[0, 2, 0, 2, 6, 12]"],[["nothing"],"[0, 17, 1, 1, 5, 2]"],[["nothing"],"[1, 18, 3, 2, 0, 16]"],[["nothing"],"[0, 8, 2, 1, 4, 3]"],[["nothing"],"[2, 8, 0, 6, 0, 4]"]],"type":"(unit -> list)","name":"078","solution":"(letII 6 (λk -> (mapunit (λx -> randnat) k#1)))","num_train":4},{"ios":[[["nothing"],"[27, 15, 24, 28, 28, 28, 17]"],[["nothing"],"[15, 23, 15, 24, 24, 22, 15, 15, 15, 15, 18, 22]"],[["nothing"],"[28, 16, 24, 17, 18, 28, 16, 15, 15, 20, 28]"],[["nothing"],"[15, 15, 28, 15, 25, 28, 28, 28, 16, 30]"],[["nothing"],"[16, 17, 15, 21, 16, 28, 28, 17, 15, 28, 18, 28]"],[["nothing"],"[16, 15, 28, 20, 15, 15, 18, 19, 28, 28, 28]"],[["nothing"],"[26, 33, 15, 28, 15, 16, 15, 19, 26, 16, 22, 15, 28]"],[["nothing"],"[28, 17, 16, 15, 28, 28, 21, 15, 20, 28, 19, 18, 16]"]],"type":"(unit -> list)","name":"079","solution":"(letII (letII (inc 5) (λx -> (inc (+ 6 x#1)))) (λk -> (mapunit (λx -> (+ (letII k#2 (λx -> (inc k#3))) (inc (case (case (flip 0.7) of True => randnat | False => randnat) of O => k#2 | S => (λn -> randnat))))) (letII randnat (λx -> (- k#2 x#1))))))","num_train":4},{"ios":[[["nothing"],"[7, 7, 20, 10, 11, 31, 8, 8, 13, 10, 18, 9, 8, 14]"],[["nothing"],"[18, 19, 22, 18, 19, 23, 22, 18, 18, 26, 19, 18, 22, 22, 22, 22, 23, 24, 26, 19, 21, 19, 35, 23, 32]"],[["nothing"],"[6, 7, 6, 8, 7, 21, 16, 10, 7, 16, 13, 8, 20]"],[["nothing"],"[11, 8, 7, 9, 8, 10, 11, 11, 12, 7, 8, 12, 13, 16]"],[["nothing"],"[4, 2, 12, 3, 9, 16, 10, 5, 5]"],[["nothing"],"[19, 8, 11, 8, 8, 13, 17, 8, 9, 9, 8, 10, 9, 8]"],[["nothing"],"[6, 9, 5, 8, 3, 4, 11, 11, 3, 5]"],[["nothing"],"[3, 3, 6, 4, 3, 18, 7, 4, 9, 4]"]],"type":"(unit -> list)","name":"080","solution":"(letII (case randnat of O => randnat | S => (λn -> (case (flip 0.3) of True => randnat | False => (case (flip 0.4) of True => (- 6 randnat) | False => n#1)))) (λk -> (mapunit (λx -> (inc (inc (+ randnat k#2)))) (+ k#1 9))))","num_train":4},{"ios":[[["nothing"],"[3, 2, 3, 5]"],[["nothing"],"[5, 5, 0, 7]"],[["nothing"],"[1, 2, 2, 4]"],[["nothing"],"[4, 1, 1, 19]"],[["nothing"],"[0, 4, 2, 5]"],[["nothing"],"[4, 3, 5, 3]"],[["nothing"],"[11, 4, 0, 0]"],[["nothing"],"[1, 5, 0, 1]"]],"type":"(unit -> list)","name":"081","solution":"(letII 4 (λk -> (mapunit (λx -> (case (flip 0.1) of True => randnat | False => randnat)) k#1)))","num_train":4},{"ios":[[["nothing"],"[1, 3, 5, 0, 4, 11, 5, 0, 0, 5, 12, 3]"],[["nothing"],"[8, 4, 8, 2, 10, 6, 2, 0, 8, 7, 8, 8, 8, 5, 8, 1, 0, 0, 1, 6]"],[["nothing"],"[8, 6, 13, 8, 0, 1, 8, 0, 0, 6, 8, 1, 0, 14, 8, 4, 8, 0, 8, 0, 6, 0, 8]"],[["nothing"],"[10, 0, 0, 2, 1, 10, 8, 7, 1, 4]"],[["nothing"],"[2, 6, 7, 6, 9, 8, 8, 2, 5, 0, 8, 18, 5, 0, 9, 1, 8, 2, 5, 1]"],[["nothing"],"[15, 7, 12, 8, 8, 0, 13, 2, 8, 8, 8, 0, 8]"],[["nothing"],"[0, 0, 8, 8, 5, 1, 7, 1, 4, 5]"],[["nothing"],"[8, 10, 14, 3, 1, 0, 8, 0, 6, 0, 3]"]],"type":"(unit -> list)","name":"082","solution":"(letII randnat (λk -> (mapunit (λx -> (case randnat of O => 8 | S => (λn -> randnat))) (+ 9 (- k#1 randnat)))))","num_train":4},{"ios":[[["nothing"],"[1, 1, 3, 9, 0, 1, 5, 7, 0]"],[["nothing"],"[2, 2, 2, 3, 10, 7, 0, 2, 7, 1, 5, 5]"],[["nothing"],"[0, 10, 8, 3, 1, 5, 1, 6, 0, 5]"],[["nothing"],"[0, 1, 0, 3, 5, 5, 14, 5, 4, 8]"],[["nothing"],"[1, 0, 5, 16, 9, 0, 7, 6, 14, 16, 4, 9, 0, 16, 3]"],[["nothing"],"[0, 4, 1, 2, 10, 0, 1, 0, 0]"],[["nothing"],"[4, 3, 3, 3, 4, 6, 0, 7, 0, 12, 2, 5, 21, 1]"],[["nothing"],"[7, 0, 2, 5, 8, 9, 5, 0, 3, 3, 2, 1, 3]"]],"type":"(unit -> list)","name":"083","solution":"(letII (case randnat of O => 9 | S => (λn -> n#1)) (λk -> (mapunit (λx -> randnat) (+ randnat 9))))","num_train":4},{"ios":[[["nothing"],"[12, 2, 9, 3, 0, 2, 9, 4, 6, 4, 5]"],[["nothing"],"[0, 0, 0, 2, 5, 0, 4, 0, 2, 1, 8, 6, 3, 7, 1]"],[["nothing"],"[1, 0, 3, 1, 3, 10, 9, 0, 5, 1, 1, 0, 0, 6, 1]"],[["nothing"],"[12, 1, 1, 6, 1, 3, 1, 4, 0, 3, 1, 9, 9, 1, 11, 0, 7, 2, 6, 13, 0]"],[["nothing"],"[0, 1, 3, 10, 4, 0, 6, 3, 13, 0, 4, 3, 3, 0, 11, 9, 4, 7, 4, 0, 14]"],[["nothing"],"[7, 26, 2, 0, 19, 0, 0, 7, 11]"],[["nothing"],"[2, 5, 6, 3, 1, 2, 14, 0, 2, 3, 4]"],[["nothing"],"[2, 3, 5, 9, 16, 4, 0, 5, 0]"]],"type":"(unit -> list)","name":"084","solution":"(letII (+ 5 randnat) (λk -> (mapunit (λx -> (case (flip 0.5) of True => randnat | False => randnat)) (+ k#1 (case k#1 of O => 1 | S => (λn -> n#1))))))","num_train":4},{"ios":[[["nothing"],"[17, 14, 12, 12, 18, 12]"],[["nothing"],"[18, 18, 30, 20, 17, 21]"],[["nothing"],"[8, 10, 11, 9, 8, 14]"],[["nothing"],"[18, 17, 15, 12, 12, 20]"],[["nothing"],"[12, 15, 19, 18, 15, 13]"],[["nothing"],"[12, 10, 14, 10, 37, 11]"],[["nothing"],"[19, 17, 19, 18, 15, 17]"],[["nothing"],"[18, 14, 19, 20, 12, 24]"]],"type":"(unit -> list)","name":"085","solution":"(letII (letII (letII 9 (λx -> (+ randnat x#1))) (λx -> (inc (case (flip 0.5) of True => randnat | False => randnat)))) (λk -> (mapunit (λx -> (inc (+ 5 (+ k#2 (letII randnat (λx -> (case k#3 of O => x#1 | S => (λn -> randnat)))))))) 6)))","num_train":4},{"ios":[[["nothing"],"[12, 8, 13, 13, 15, 12, 15]"],[["nothing"],"[11, 12, 6, 3, 12, 11]"],[["nothing"],"[17, 14, 20, 21, 21, 14, 11, 16, 15, 20]"],[["nothing"],"[41, 44, 44, 42, 41, 44, 43, 39, 43, 40, 44, 45, 40, 45, 40, 34, 38, 44, 44, 32, 35, 39]"],[["nothing"],"[31, 32, 22, 33, 25, 23, 32, 8, 29, 32, 32, 26, 31, 32, 28, 18]"],[["nothing"],"[19, 21, 23, 23, 21, 23, 21, 5, 22, 19, 22]"],[["nothing"],"[3, 8, 11, 11, 10, 12]"],[["nothing"],"[29, 29, 26, 23, 26, 17, 9, 29, 26, 28, 23, 28, 28, 29]"]],"type":"(unit -> list)","name":"086","solution":"(letII (inc (+ 3 (inc randnat))) (λk -> (mapunit (λx -> (inc (inc (inc (- (letII 6 (λx -> (+ k#3 k#3))) randnat))))) (inc k#1))))","num_train":4},{"ios":[[["nothing"],"[6, 0, 12, 3, 18, 2, 2, 0, 1, 1]"],[["nothing"],"[8, 0, 2, 3, 21, 1, 5, 2, 8, 3, 5, 0, 6, 0, 3, 6, 11, 6, 0, 4, 1, 6, 1, 1, 4, 4]"],[["nothing"],"[1, 34, 3, 16, 4, 7, 10, 7, 1, 0, 2, 0, 6, 0, 12, 0, 2, 10, 4]"],[["nothing"],"[10, 0, 1, 0, 2, 3, 5, 1, 3, 3, 1, 1, 5]"],[["nothing"],"[1, 9, 0, 3, 8, 2, 1, 14, 7, 5, 1, 5, 24, 1, 2, 9, 13, 7, 2]"],[["nothing"],"[2, 26, 9, 2, 5, 6, 3, 0, 1, 1, 5]"],[["nothing"],"[0, 11, 10, 0, 3, 12, 0, 4, 1, 3, 24, 3, 3, 1, 4, 0, 5, 0]"],[["nothing"],"[2, 1, 4, 19, 5, 4, 0, 3, 10, 2, 6, 2]"]],"type":"(unit -> list)","name":"087","solution":"(letII (letII (letII 9 (λx -> (- x#1 randnat))) (λx -> (+ (letII 9 (λx -> (case (flip 0.2) of True => x#1 | False => randnat))) x#1))) (λk -> (mapunit (λx -> randnat) (+ randnat k#1))))","num_train":4},{"ios":[[["nothing"],"[5, 6, 1, 0, 2, 0, 0]"],[["nothing"],"[4, 5, 4, 2, 1, 1, 6, 9]"],[["nothing"],"[3, 5, 10, 1, 0, 0, 1, 0, 19, 1, 1, 0, 1, 2, 15, 2, 6, 2, 6]"],[["nothing"],"[6, 17, 19, 1, 15, 1, 1, 1, 1, 1, 2, 4, 1, 1, 9, 2, 7]"],[["nothing"],"[11, 16]"],[["nothing"],"[2, 0]"],[["nothing"],"[1, 7, 7, 6, 2, 0, 2, 6, 0, 15, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 5, 5, 0]"],[["nothing"],"[2, 9]"]],"type":"(unit -> list)","name":"088","solution":"(letII (letII randnat (λx -> (+ (letII randnat (λx -> (+ x#2 x#2))) randnat))) (λk -> (mapunit (λx -> (case (flip 0.3) of True => randnat | False => randnat)) (inc (inc (letII randnat (λx -> (case (flip 0.4) of True => randnat | False => k#2))))))))","num_train":4},{"ios":[[["nothing"],"[4, 8, 8, 8, 8, 5]"],[["nothing"],"[1, 8, 8, 8, 8, 1, 8, 4]"],[["nothing"],"[31, 28, 30, 8, 30, 19, 8, 8, 6, 28, 8, 8, 30, 3, 23, 25, 13, 0, 8, 5, 8, 8, 8, 8, 8, 30, 31, 5, 8, 0, 31]"],[["nothing"],"[8, 2, 8]"],[["nothing"],"[9, 7, 0, 8, 2, 5, 8, 0]"],[["nothing"],"[8, 3, 7, 8, 2, 1, 8]"],[["nothing"],"[0, 11, 1, 9, 32, 31, 32, 31, 32, 8, 8, 8, 8, 30, 8, 21, 8, 1, 30, 30, 28, 1, 8, 0, 9, 8, 25, 32, 10, 8, 1, 8]"],[["nothing"],"[3, 4, 8, 2, 8, 8, 3, 21, 18, 19, 13, 8, 0, 20, 16, 17, 8, 8, 6, 8, 18, 18, 23]"]],"type":"(unit -> list)","name":"089","solution":"(letII (letII (case (flip 0.3) of True => randnat | False => 3) (λx -> (+ (- (inc 8) x#1) randnat))) (λk -> (mapunit (λx -> (letII randnat (λx -> (case (> randnat randnat) of True => (case 0 of O => (letII randnat (λx -> (- k#4 randnat))) | S => (λn -> n#1)) | False => (letII k#3 (λx -> (case (flip 0.5) of True => randnat | False => 8))))))) k#1)))","num_train":4},{"ios":[[["nothing"],"[1, 16]"],[["nothing"],"[10, 4, 3, 2, 8, 4, 1, 15, 5]"],[["nothing"],"[5, 2, 2, 0, 20, 7, 6, 2]"],[["nothing"],"[1, 5, 5, 8, 1, 6, 3, 3, 2, 6, 3]"],[["nothing"],"[3, 15, 4, 0]"],[["nothing"],"[1, 8]"],[["nothing"],"[1, 0]"],[["nothing"],"[2, 2, 19, 7, 0, 10, 2]"]],"type":"(unit -> list)","name":"090","solution":"(letII (+ (inc (inc 0)) (case 8 of O => 1 | S => (λn -> randnat))) (λk -> (mapunit (λx -> (case (flip 0.2) of True => randnat | False => randnat)) k#1)))","num_train":4},{"ios":[[["nothing"],"[16, 13, 7, 1, 8, 3]"],[["nothing"],"[6, 13, 19, 5, 3, 12]"],[["nothing"],"[11, 9, 4, 8, 0, 22]"],[["nothing"],"[1, 12, 5, 9, 11, 1]"],[["nothing"],"[12, 0, 5, 0, 7, 9]"],[["nothing"],"[3, 8, 14, 7, 3, 0]"],[["nothing"],"[11, 0, 4, 9, 1, 1]"],[["nothing"],"[0, 3, 7, 3, 0, 8]"]],"type":"(unit -> list)","name":"091","solution":"(letII (- (+ 7 6) (case randnat of O => randnat | S => (λn -> 7))) (λk -> (mapunit (λx -> (case (flip 0.4) of True => (letII k#2 (λx -> (inc (+ x#1 randnat)))) | False => randnat)) k#1)))","num_train":4},{"ios":[[["nothing"],"[9, 7, 2, 8, 5, 2, 2, 3, 3, 1, 6, 1, 2, 9]"],[["nothing"],"[4, 8, 2, 4, 1, 1, 1, 1, 6, 1, 1, 1, 8]"],[["nothing"],"[6, 5, 7, 1, 2, 5, 2, 4, 5, 6, 3]"],[["nothing"],"[3, 6, 4, 3, 1, 9, 5, 2, 6, 2, 6]"],[["nothing"],"[1, 3, 1, 5, 6, 9, 1, 4]"],[["nothing"],"[9, 7, 12, 4, 7, 3, 8, 1, 2, 1, 4]"],[["nothing"],"[2, 1, 7, 2, 1, 8, 2, 14, 6]"],[["nothing"],"[7, 1, 5, 1, 24, 17, 5, 6, 1]"]],"type":"(unit -> list)","name":"092","solution":"(letII (letII (case (flip 0.9) of True => 3 | False => randnat) (λx -> (inc randnat))) (λk -> (mapunit (λx -> (letII (+ randnat (letII randnat (λx -> (- 4 x#1)))) (λx -> (inc randnat)))) (case (+ 9 randnat) of O => (letII randnat (λx -> (+ x#1 randnat))) | S => (λn -> n#1)))))","num_train":4},{"ios":[[["nothing"],"[2, 10, 9, 6, 4, 3, 1, 3, 2, 4, 4]"],[["nothing"],"[3, 1, 9, 7, 21, 3, 6, 6, 2, 5, 2]"],[["nothing"],"[1, 5, 16, 5, 7, 1, 1, 1, 12, 5, 1]"],[["nothing"],"[2, 8, 12, 5, 9, 0, 1, 1, 17, 0, 0, 5, 5, 5]"],[["nothing"],"[9, 5, 5, 3, 9, 7, 0, 10, 5, 1, 1]"],[["nothing"],"[4, 1, 6, 13, 0, 1, 1, 1, 1, 1, 3]"],[["nothing"],"[6, 1, 2, 7, 7, 6, 9, 1, 1, 5, 10]"],[["nothing"],"[2, 2, 1, 18, 17, 2, 0, 8, 3, 13, 8, 6, 7, 5]"]],"type":"(unit -> list)","name":"093","solution":"(letII (case (flip 0.8) of True => 5 | False => randnat) (λk -> (mapunit (λx -> (case randnat of O => randnat | S => (λn -> (letII n#1 (λx -> (inc randnat)))))) (+ (case (+ randnat 0) of O => 8 | S => (λn -> k#2)) (inc k#1)))))","num_train":4},{"ios":[[["nothing"],"[4, 3, 5, 0, 2]"],[["nothing"],"[1, 3, 5, 3, 6]"],[["nothing"],"[0, 3, 0, 3, 0]"],[["nothing"],"[0, 6, 0, 3, 0]"],[["nothing"],"[2, 5, 1, 3, 0]"],[["nothing"],"[11, 19, 0, 5, 0]"],[["nothing"],"[0, 4, 10, 1, 1]"],[["nothing"],"[10, 1, 5, 5, 13]"]],"type":"(unit -> list)","name":"094","solution":"(letII 9 (λk -> (mapunit (λx -> randnat) 5)))","num_train":4},{"ios":[[["nothing"],"[4, 4, 6, 1, 2, 0, 28, 0, 2, 0, 13, 4]"],[["nothing"],"[0, 0, 0, 8, 2, 2, 0, 0, 0, 17, 0]"],[["nothing"],"[3, 4, 0, 0, 2, 0, 0, 0, 5, 7, 0, 13, 2, 0, 0]"],[["nothing"],"[2, 1, 2, 1, 0, 1, 0, 9, 1, 9, 1, 0, 0]"],[["nothing"],"[9, 0, 0, 16, 1, 0, 0, 0, 0]"],[["nothing"],"[1, 0, 5, 2, 1, 0, 0, 0, 0, 0, 0, 0, 3, 9, 0, 7, 3, 0, 0, 0, 0, 7, 5, 9]"],[["nothing"],"[6, 0, 0, 6, 11, 4, 4, 9, 0, 0, 0, 4, 1, 1]"],[["nothing"],"[2, 0, 4, 1, 12, 7, 0, 0, 0]"]],"type":"(unit -> list)","name":"095","solution":"(letII (+ randnat 9) (λk -> (mapunit (λx -> (- randnat (case randnat of O => randnat | S => (λn -> randnat)))) (case (== k#1 randnat) of True => randnat | False => k#1))))","num_train":4},{"ios":[[["nothing"],"[10, 14, 14, 4, 0]"],[["nothing"],"[1, 1, 6, 5, 4]"],[["nothing"],"[1, 2, 0, 0, 4]"],[["nothing"],"[10, 1, 1, 0, 1]"],[["nothing"],"[0, 3, 1, 3, 2]"],[["nothing"],"[6, 4, 15, 6, 1]"],[["nothing"],"[1, 13, 1, 0, 4]"],[["nothing"],"[2, 2, 3, 0, 14]"]],"type":"(unit -> list)","name":"096","solution":"(letII randnat (λk -> (mapunit (λx -> randnat) 5)))","num_train":4},{"ios":[[["nothing"],"[4, 8, 2, 11, 8, 5, 0, 3, 6, 11, 5, 10, 4, 0]"],[["nothing"],"[3, 11, 0, 0, 0]"],[["nothing"],"[1, 0, 8, 5, 1, 0, 0, 4, 0]"],[["nothing"],"[7, 1, 2, 1, 0, 0, 4, 14, 1, 4, 0, 6, 0]"],[["nothing"],"[3, 0, 4]"],[["nothing"],"[3, 1, 0, 1, 0, 23, 2, 2, 0, 13, 3, 1, 4]"],[["nothing"],"[2, 1, 4, 3, 1, 0, 2]"],[["nothing"],"[1, 6, 3, 0, 11, 2, 0, 0, 0]"]],"type":"(unit -> list)","name":"097","solution":"(letII (- (- randnat 7) 5) (λk -> (mapunit (λx -> (case (case (flip 0.5) of True => randnat | False => randnat) of O => k#2 | S => (λn -> randnat))) (letII 4 (λx -> (inc (+ randnat randnat)))))))","num_train":4},{"ios":[[["nothing"],"[7, 7, 6, 8]"],[["nothing"],"[15, 15, 14, 19]"],[["nothing"],"[16, 13, 4, 4, 5, 19, 3, 14, 4, 5, 3, 3, 4, 4, 7, 5, 3, 5, 3, 5, 11, 6, 13, 4, 8, 8, 4]"],[["nothing"],"[10, 9]"],[["nothing"],"[5, 6, 6, 7, 10, 6, 6]"],[["nothing"],"[8, 6]"],[["nothing"],"[15, 8, 11, 8]"],[["nothing"],"[7, 8, 8, 5, 5, 10, 8, 6, 11]"]],"type":"(unit -> list)","name":"098","solution":"(letII (case (> randnat randnat) of True => 4 | False => (letII randnat (λx -> (inc x#1)))) (λk -> (mapunit (λx -> (inc (+ (case k#2 of O => 2 | S => (λn -> randnat)) k#2))) (inc (letII randnat (λx -> (inc randnat)))))))","num_train":4},{"ios":[[["nothing"],"[0, 2, 10, 4]"],[["nothing"],"[5, 2, 6, 5]"],[["nothing"],"[1, 5, 2, 13]"],[["nothing"],"[9, 0, 1, 3]"],[["nothing"],"[10, 1, 1, 0]"],[["nothing"],"[2, 0, 0, 0]"],[["nothing"],"[0, 1, 4, 2]"],[["nothing"],"[3, 1, 3, 2]"]],"type":"(unit -> list)","name":"099","solution":"(letII 4 (λk -> (mapunit (λx -> (case randnat of O => randnat | S => (λn -> randnat))) k#1)))","num_train":4}],"task_info":[{"q_expr":-36.87593434744,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-25.559555860748063,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-54.86402927381415,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-25.093877568805,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-75.99693022651164,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-27.208485634203818,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-71.53726750177248,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-32.42512457824815,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-69.7256440752426,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-44.96234462276379,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":-38.311349505894846,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-29.36769873568882,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-56.191590836269555,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-49.25988231626493,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":-13.174006610556168,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-43.99826322705328,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-51.60877768792489,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-47.02916202432626,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-20.584017562621227,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2},{"q_expr":-50.5805961056008,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-24.944850106494684,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-50.8163124285854,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":-33.905519881870305,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-53.479215297864684,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-44.06872836686049,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-41.695678134059236,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-24.059602181155654,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-10.060491301345792,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2},{"q_expr":-61.22057526903402,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-61.266764651503394,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-32.07574893679103,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-35.366131952112895,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-37.9282363574422,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-26.649869346601477,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-19.211897254538698,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-23.23449791190196,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-28.54414437935513,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-44.81203839540185,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-50.21699504265934,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-48.17961916626502,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-22.708404816005185,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-44.84456158710741,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-58.611958964919985,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-7.757906208351747,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2},{"q_expr":-31.45571022805172,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-65.10419879994045,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-32.20907059244657,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-30.758116813992572,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-38.973725027788035,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-24.719184119363582,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-19.94278476308149,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-20.575718759806534,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-15.738955968017704,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-36.51946914047026,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-58.82937751768336,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-59.42425374809811,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-58.11254824396929,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-12.219975550699164,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2},{"q_expr":-42.56729430209765,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-37.07396171088873,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-10.548844069259724,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":1},{"q_expr":-27.4189355176511,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-31.527182985042188,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-39.082938112761354,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-59.843621761375275,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-62.585675539353474,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-33.41167882981071,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-17.02994014933327,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-64.0701250324099,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-32.45308571824587,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-21.730420515125687,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-7.042286171939743,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":1},{"q_expr":-7.042286171939743,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":1},{"q_expr":-58.09416467183791,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-52.786068117304744,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-12.950863059241959,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2},{"q_expr":-24.79789669353852,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":4},{"q_expr":-18.927060134219154,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":3},{"q_expr":-30.458012221542234,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-52.817041396090296,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":-45.05656138347469,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-36.64555097894133,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":5},{"q_expr":-38.83299636829242,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-77.40943419459043,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":10},{"q_expr":-33.787736846213924,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-44.778421784602855,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-60.16800211116344,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-50.64925834392223,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":8},{"q_expr":null,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":0},{"q_expr":-28.21848526451533,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":6},{"q_expr":-8.246258976265679,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":1},{"q_expr":-41.76878660587988,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":7},{"q_expr":-45.11934837157345,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":9},{"q_expr":-11.446785662465684,"p_inputs":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"size":2}],"path":"out/fuzz-datasets/2024-11-13/04-07-10/dataset.json"}